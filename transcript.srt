1
00:00:00,000 --> 00:00:03,279
大家好 欢迎来到课代表聊数据的第五期

2
00:00:03,279 --> 00:00:04,919
这期视频我跟大家聊一下

3
00:00:04,919 --> 00:00:07,559
我看到的人工智能模型的具体应用

4
00:00:07,919 --> 00:00:09,679
这里边当然有一些好的应用

5
00:00:09,679 --> 00:00:10,919
也有一些不好的应用

6
00:00:11,039 --> 00:00:12,439
我们就先从好的讲起

7
00:00:12,439 --> 00:00:13,679
然后慢慢讲到不好的

8
00:00:13,679 --> 00:00:16,399
和为什么它们能做到好的效果和不好的效果

9
00:00:16,559 --> 00:00:19,239
现在人工智能模型应用最前沿

10
00:00:19,239 --> 00:00:22,960
然后也是最赚钱的模型就是推荐引擎了

11
00:00:23,039 --> 00:00:24,719
比如说我们听音乐的时候

12
00:00:24,719 --> 00:00:26,140
Spotify Apple Music

13
00:00:26,140 --> 00:00:28,140
我们看视频 长视频的话

14
00:00:28,140 --> 00:00:29,140
YouTube Netflix

15
00:00:29,140 --> 00:00:29,839
短视频的话

16
00:00:29,839 --> 00:00:31,839
抖音 快手 腾讯的视频号

17
00:00:31,839 --> 00:00:33,140
那我们买东西的时候

18
00:00:33,140 --> 00:00:34,939
买东西的时候就更多了

19
00:00:34,939 --> 00:00:37,740
像其实很多广告都是来自于买东西

20
00:00:37,740 --> 00:00:38,140
对吧

21
00:00:38,140 --> 00:00:39,740
比如说你在Google上

22
00:00:39,740 --> 00:00:42,140
或者说在Facebook Instagram这些地方

23
00:00:42,140 --> 00:00:43,939
很多时候他们打的广告

24
00:00:43,939 --> 00:00:45,320
都是猜你想要买什么

25
00:00:45,320 --> 00:00:47,560
然后把你想要买的东西推送到你的面前

26
00:00:47,560 --> 00:00:48,960
具体的网站呢

27
00:00:48,960 --> 00:00:50,359
wish.com做的就不错

28
00:00:50,359 --> 00:00:53,960
Facebook Pinterest Google都有类似的尝试

29
00:00:53,960 --> 00:00:56,759
但是这里面其实受限到一些数据

30
00:00:56,759 --> 00:00:57,840
我就不具体展开了

31
00:00:57,840 --> 00:01:00,159
就是反而这些电商的推荐

32
00:01:00,159 --> 00:01:01,759
做的没有广告的推荐那么好

33
00:01:01,759 --> 00:01:04,159
所有的这些模型如果做得好的话

34
00:01:04,159 --> 00:01:06,200
大家使用的时候都会有一种可怕的感觉

35
00:01:06,200 --> 00:01:08,840
就是它仿佛比你爸妈比你朋友

36
00:01:08,840 --> 00:01:10,439
比你自己都了解你自己

37
00:01:10,439 --> 00:01:12,840
它给你经常推荐的一些东西精准到

38
00:01:12,840 --> 00:01:14,040
你看了以后就想买

39
00:01:14,040 --> 00:01:15,640
然后你点进去越点越多

40
00:01:15,640 --> 00:01:16,439
越点越想买

41
00:01:16,439 --> 00:01:18,760
那它是怎么样子做到这么好的

42
00:01:18,760 --> 00:01:20,120
它这里面有两个机制

43
00:01:20,120 --> 00:01:21,640
我觉得是至关重要的

44
00:01:21,640 --> 00:01:24,519
第一个就是它的training数据

45
00:01:24,519 --> 00:01:26,260
是用户给它产生的

46
00:01:26,260 --> 00:01:28,500
就以一个卖东西的广告来举例吧

47
00:01:28,500 --> 00:01:30,120
你的广告的点击率

48
00:01:30,120 --> 00:01:32,120
也就是说展示给100个人看

49
00:01:32,120 --> 00:01:33,760
多少人会点开这个广告

50
00:01:33,760 --> 00:01:37,099
是衡量这个广告效果的一个非常重要的依据

51
00:01:37,099 --> 00:01:41,260
而这个点击率是用户自然而然的就反馈给你的

52
00:01:41,260 --> 00:01:44,180
这就省去了很多传统机器学习模型

53
00:01:44,180 --> 00:01:46,879
需要人工去label data的这一步

54
00:01:46,879 --> 00:01:49,840
因为用户一方面是你广告的用户

55
00:01:49,840 --> 00:01:52,400
一方面又帮你称了一个很好的模型

56
00:01:52,400 --> 00:01:54,879
这是一个独特的优势

57
00:01:54,879 --> 00:01:56,719
第二个很重要的机制

58
00:01:56,719 --> 00:01:58,879
就是collaborative filtering

59
00:01:58,879 --> 00:02:00,719
这里边的原理就是说

60
00:02:00,719 --> 00:02:03,519
他去看每个人都干过什么

61
00:02:03,519 --> 00:02:07,719
然后把和你相似的这些人去干过的事情推荐给你

62
00:02:07,719 --> 00:02:11,800
因为和你相似的人他干过的事情大多数时候也是你感兴趣的

63
00:02:11,800 --> 00:02:14,400
这也就是为什么像Spotify或者Netflix

64
00:02:14,400 --> 00:02:17,800
他推荐这些东西的时候推荐的有种非常getting的感觉

65
00:02:17,800 --> 00:02:22,000
因为很多时候他的推荐就好像是来自于一个平行世界的你一样

66
00:02:22,000 --> 00:02:26,599
Collaborative Filtering具体的机制我们就不展开了

67
00:02:26,599 --> 00:02:28,599
有机会的话可以详细讲一下

68
00:02:28,599 --> 00:02:31,199
比如说它背后的这个Matrix Completion

69
00:02:31,199 --> 00:02:34,199
比如说它的Embedding加上一些Deep Learning的算法

70
00:02:34,199 --> 00:02:37,400
是怎么可以让它从一个非常非常Sparse的数据

71
00:02:37,400 --> 00:02:39,000
提炼出来有用的信息

72
00:02:39,000 --> 00:02:41,000
最后给你得到一个有效的推荐的

73
00:02:41,000 --> 00:02:43,400
那我们这里先就不放过

74
00:02:43,400 --> 00:02:45,000
总之我们这就记住两点就好了

75
00:02:45,000 --> 00:02:47,000
就是推荐算法之所以这么厉害

76
00:02:47,000 --> 00:02:49,000
一方面是因为它的数据

77
00:02:49,000 --> 00:02:52,000
是直接来源于用户的反馈的

78
00:02:52,000 --> 00:02:54,000
所以说它要去优化这个用户的反馈

79
00:02:54,000 --> 00:02:56,000
也变得非常非常的容易

80
00:02:56,000 --> 00:02:57,000
第二方面呢

81
00:02:57,000 --> 00:02:59,000
就是这个collaborative filtering

82
00:02:59,000 --> 00:03:02,000
就是你不光是我的机器去

83
00:03:02,000 --> 00:03:03,000
figure out你喜欢什么

84
00:03:03,000 --> 00:03:06,560
而是我去得到了很多其他人的信息

85
00:03:06,560 --> 00:03:08,639
然后把其他人的信息综合起来

86
00:03:08,639 --> 00:03:10,319
形成一个推荐给你

87
00:03:10,319 --> 00:03:11,360
这个时候

88
00:03:11,360 --> 00:03:13,039
他做的这两件事情

89
00:03:13,039 --> 00:03:15,120
是普通人做不到的

90
00:03:15,120 --> 00:03:17,120
这也是我们在很多企业里面

91
00:03:17,120 --> 00:03:18,719
去看一些具体的推荐

92
00:03:18,719 --> 00:03:20,599
我们觉得人可以打过机器

93
00:03:20,599 --> 00:03:22,639
比如说Apple他的一个Editor

94
00:03:22,639 --> 00:03:23,719
他给我推荐了音乐歌

95
00:03:23,719 --> 00:03:25,000
但我觉得非常有品味

96
00:03:25,000 --> 00:03:26,719
或者说一个买手

97
00:03:26,719 --> 00:03:28,800
他对时尚非常有理解

98
00:03:28,800 --> 00:03:30,719
所以说他给我推荐了这个产品

99
00:03:30,719 --> 00:03:32,319
我也觉得是非常有品味

100
00:03:32,319 --> 00:03:35,120
但是你敌不过这个机器

101
00:03:35,120 --> 00:03:36,400
这么大规模

102
00:03:36,400 --> 00:03:37,520
这么个性化

103
00:03:37,520 --> 00:03:40,000
然后全天候的这种一副一日的推荐

104
00:03:40,000 --> 00:03:41,719
这里面还有一个消费者的心智

105
00:03:41,719 --> 00:03:43,919
就是人们总是喜欢新鲜的东西

106
00:03:43,919 --> 00:03:46,280
你给他的推荐最好每天都不一样

107
00:03:46,280 --> 00:03:48,759
也许你可以找到一堆买手

108
00:03:48,759 --> 00:03:51,240
他们去进行很多很好的推荐

109
00:03:51,240 --> 00:03:52,840
所以说也许你的买手

110
00:03:52,840 --> 00:03:55,360
在一两次的推荐里面可以打过机器

111
00:03:55,360 --> 00:03:57,039
但是你架不住你这个买手

112
00:03:57,039 --> 00:03:59,000
在推荐时间长的商品的时候

113
00:03:59,000 --> 00:04:00,240
你的机器已经推荐了

114
00:04:00,240 --> 00:04:01,759
100件1000件的商品了

115
00:04:01,759 --> 00:04:02,919
而且这里面的推荐

116
00:04:02,919 --> 00:04:05,599
还是针对每一个人进行的个性化推荐

117
00:04:05,599 --> 00:04:08,000
所以说推荐算法真的很厉害

118
00:04:08,000 --> 00:04:09,800
那互联网现在最火的应用

119
00:04:09,800 --> 00:04:11,400
比如说抖音这样的短视频

120
00:04:11,400 --> 00:04:13,199
或者最赚钱的商业模式

121
00:04:13,199 --> 00:04:15,199
比如说Facebook Instagram的广告

122
00:04:15,199 --> 00:04:18,000
背后和推荐算法这么强大

123
00:04:18,000 --> 00:04:20,600
和它这么高度的发展是离不开的

124
00:04:20,600 --> 00:04:22,000
第二类好的应用呢

125
00:04:22,000 --> 00:04:25,000
是在我看来把一个附加系统给简单化

126
00:04:25,000 --> 00:04:29,000
这个附加系统本来可能是一个牵连非常广的

127
00:04:29,000 --> 00:04:33,000
一个很多很多小系统组成了一个大系统

128
00:04:33,000 --> 00:04:35,000
但是它时间越多附加性越高

129
00:04:35,000 --> 00:04:39,000
这里边每一个小的小的改动小的优化都很难了

130
00:04:39,000 --> 00:04:41,000
因为它不同的组件都是息息相关的

131
00:04:41,000 --> 00:04:44,000
而且它非附加到一个单独的人

132
00:04:44,000 --> 00:04:46,399
是没有办法理解整个系统的

133
00:04:46,399 --> 00:04:48,399
那你这时候你想让他做

134
00:04:48,399 --> 00:04:50,600
给他一些输入得到一些输出

135
00:04:50,600 --> 00:04:53,199
你要想知道他怎么得到这个输出的

136
00:04:53,199 --> 00:04:54,800
对于任何一个个体来说

137
00:04:54,800 --> 00:04:56,199
都是一个很难做的事情

138
00:04:56,199 --> 00:04:57,800
而且哪怕你理解了以后

139
00:04:57,800 --> 00:05:00,000
想要优化这个结果也很难

140
00:05:00,000 --> 00:05:02,399
因为这里边已经是有很多很多不同的人

141
00:05:02,399 --> 00:05:04,000
做了很多很多不同的工作

142
00:05:04,000 --> 00:05:05,319
导致的这个结果

143
00:05:05,319 --> 00:05:07,920
这个时候你可以把这个复杂的系统

144
00:05:07,920 --> 00:05:09,920
用一套Machine Learning的东西

145
00:05:09,920 --> 00:05:11,920
一个黑箱子去替换它

146
00:05:11,920 --> 00:05:14,480
也许你不需要知道这个黑箱子是怎么运作的

147
00:05:14,480 --> 00:05:17,120
但是我只要知道我给你一个什么样的输入

148
00:05:17,120 --> 00:05:19,000
得到一个什么样的输出就行了

149
00:05:19,000 --> 00:05:22,279
这个在机器学习的领域就是End-to-End Training

150
00:05:22,279 --> 00:05:25,379
基本上能做到End-to-end optimization的系统

151
00:05:25,379 --> 00:05:27,939
他们的性能都得到了非常大的提升

152
00:05:27,939 --> 00:05:29,980
这里面其实也有一个可以展开的话题

153
00:05:29,980 --> 00:05:33,819
就是直呼上的埃莱克西斯同学他提出来的

154
00:05:33,819 --> 00:05:36,899
我们现在的系统设计遵循的原则是

155
00:05:36,899 --> 00:05:39,459
低有核高聚核的设计原则

156
00:05:39,459 --> 00:05:42,779
它是为了一个hierarchical的系统而设计的

157
00:05:42,779 --> 00:05:45,600
这样的话大家才能更好的在一起合作

158
00:05:45,600 --> 00:05:47,279
但是自然界并不是这样的

159
00:05:47,279 --> 00:05:48,920
或者说最efficient的方法

160
00:05:48,920 --> 00:05:50,639
最优化的方法也不是这样的

161
00:05:50,639 --> 00:05:52,160
而是一个非常整体的系统

162
00:05:52,160 --> 00:05:53,959
我们到时候也可以展开讲一下

163
00:05:53,959 --> 00:05:58,319
但是总之就是你之前有一个非常复杂的系统

164
00:05:58,319 --> 00:06:00,079
这个系统可能已经僵化在那里了

165
00:06:00,079 --> 00:06:00,959
很难优化了

166
00:06:00,959 --> 00:06:03,360
这个时候你如果用一个Machine Learning

167
00:06:03,360 --> 00:06:04,680
去把它替代掉

168
00:06:04,680 --> 00:06:06,600
而且你有一个高质量的label

169
00:06:06,600 --> 00:06:09,360
你能cover到你业务的大多数的范围

170
00:06:09,360 --> 00:06:11,240
你会得到一个非常好的提升

171
00:06:11,240 --> 00:06:12,959
刚才我们说的第一类和第二类

172
00:06:12,959 --> 00:06:16,040
是机器能做到人做不到的事情

173
00:06:16,040 --> 00:06:18,680
或者说机器比人做得要好很多

174
00:06:18,680 --> 00:06:23,360
第三类就是机器是重复人能做到的事情

175
00:06:23,360 --> 00:06:24,879
但是它比人做的快

176
00:06:24,879 --> 00:06:25,959
做的成本更低

177
00:06:25,959 --> 00:06:29,519
这个的例子就是说我们本来有很多业务

178
00:06:29,519 --> 00:06:31,759
这个业务是人来做的

179
00:06:31,759 --> 00:06:34,160
它可以有一个非常标准化的SOP

180
00:06:34,160 --> 00:06:39,399
人就可以根据这个SOP去给你的机器提供各种各样的label

181
00:06:39,399 --> 00:06:42,199
比如说这样的input应该对应action A

182
00:06:42,199 --> 00:06:44,040
那样的input应该对应action B

183
00:06:44,040 --> 00:06:47,800
我们用机器去学习人的这些decision

184
00:06:47,800 --> 00:06:50,079
然后再去replicate这个人的decision

185
00:06:50,079 --> 00:06:52,199
我们可以满足一定程度的精度

186
00:06:52,199 --> 00:06:54,839
甚至很多时候可以比人的精度要更高

187
00:06:54,839 --> 00:06:56,720
那它就有一个非常好的应用

188
00:06:56,720 --> 00:06:59,839
它还可以利用机器能检索到的各种各样的信息

189
00:06:59,839 --> 00:07:02,519
去增强这个系统达到一个更好的效果

190
00:07:02,519 --> 00:07:04,720
其实图像识别就属于这一类

191
00:07:04,720 --> 00:07:05,000
就是你的人是能认出来其实图像识别就属于这一类对吧

192
00:07:05,000 --> 00:07:09,480
就是你的人是能认出来这个图像到底是谁的

193
00:07:09,600 --> 00:07:12,319
但是机器如果也能像人一样认出来

194
00:07:12,319 --> 00:07:13,319
这个图像长得像谁

195
00:07:13,319 --> 00:07:16,920
而且它能非常快的去搜索这些图像

196
00:07:17,040 --> 00:07:19,519
那它就可以在图像识别的基础之上

197
00:07:19,519 --> 00:07:21,120
一有能进行人的信息识别

198
00:07:21,279 --> 00:07:23,160
就会有一个非常非常强大的应用

199
00:07:23,800 --> 00:07:26,720
所以以上这三类都是我觉得非常好的应用

200
00:07:26,720 --> 00:07:28,319
也非常有前景的应用

201
00:07:28,319 --> 00:07:31,519
那接下来的一些应用在我看来就是一些非常不好的应用

202
00:07:31,519 --> 00:07:35,120
比如说是一些简单系统可以解决的问题

203
00:07:35,120 --> 00:07:36,480
我们非要上Machine Learning

204
00:07:36,480 --> 00:07:39,680
这个是我在单场见到的非常普遍的一个现象

205
00:07:39,680 --> 00:07:42,800
就是说有一些这个Rule Based System

206
00:07:42,800 --> 00:07:45,720
有一个If Then很简单的问题就可以解决了

207
00:07:45,720 --> 00:07:48,120
然后大家非要说这个事情是需要

208
00:07:48,120 --> 00:07:49,319
Machine Learning去解决的

209
00:07:49,319 --> 00:07:51,120
结果用了上了Machine Learning系统

210
00:07:51,120 --> 00:07:52,519
然后发现效果还不如这个

211
00:07:52,519 --> 00:07:54,319
Rule based system解决的好

212
00:07:54,319 --> 00:07:56,120
然后大家还要去调试这个

213
00:07:56,120 --> 00:07:56,920
Machine Learning系统

214
00:07:56,920 --> 00:07:58,120
到底是要怎么样子

215
00:07:58,120 --> 00:07:59,720
才能比Rule based system做得好

216
00:07:59,720 --> 00:08:00,920
在我看来很多时候

217
00:08:00,920 --> 00:08:02,920
这就是典型的脱裤子放屁

218
00:08:02,920 --> 00:08:03,920
这里面又分两类

219
00:08:03,920 --> 00:08:08,439
就是你的Machine Learning可能最后比这个简单的Ruby系统做得好

220
00:08:08,439 --> 00:08:10,120
但是大家不要忘记了

221
00:08:10,120 --> 00:08:13,360
你开发一个Mercenary Model其实是很费时间的

222
00:08:13,360 --> 00:08:16,680
而且Mercenary Model你牺牲了很多可解释性

223
00:08:16,680 --> 00:08:20,120
所以说当你做得好的时候你把它放过去不管了

224
00:08:20,120 --> 00:08:24,360
但是很有可能在一些Edge Case或者说当你的数据变了以后

225
00:08:24,360 --> 00:08:25,759
你的Performance就变差了

226
00:08:25,759 --> 00:08:27,360
这个时候最危险的是

227
00:08:27,360 --> 00:08:29,439
你根本就没有再去track这个performance

228
00:08:29,439 --> 00:08:32,539
你就觉得我被一个merchant model去解决的事情

229
00:08:32,539 --> 00:08:33,299
我就不看了

230
00:08:33,299 --> 00:08:35,539
很多时候要花很长的时间

231
00:08:35,539 --> 00:08:38,299
你才去发现出来你的业务出了问题

232
00:08:38,299 --> 00:08:40,039
有的时候你去看

233
00:08:40,039 --> 00:08:42,000
你看了以后你也不知道这个东西

234
00:08:42,000 --> 00:08:43,399
它为什么之前做得好

235
00:08:43,399 --> 00:08:44,200
现在做得不好

236
00:08:44,200 --> 00:08:45,600
你要么重新调餐

237
00:08:45,600 --> 00:08:46,700
也可能做的好

238
00:08:46,700 --> 00:08:47,600
也可能做的不好

239
00:08:47,600 --> 00:08:48,899
但是你归根结底

240
00:08:48,899 --> 00:08:50,899
你不知道你的merchant learning model

241
00:08:50,899 --> 00:08:52,399
为什么做的不好

242
00:08:52,399 --> 00:08:55,899
这就是为什么你不光是脱裤子放屁

243
00:08:55,899 --> 00:08:57,600
很多时候效率还是更低的

244
00:08:57,600 --> 00:09:00,399
那更有甚者就是这个业务本身就不适合

245
00:09:00,399 --> 00:09:01,899
对merchant learning model去解决

246
00:09:01,899 --> 00:09:04,600
我在前面的几期视频里边也提过类似的例子

247
00:09:04,600 --> 00:09:05,000
对吧就是一个是你只有300个data point不适合对陌生人的model去解决我在前面的几期视频里边也提过类似的例子

248
00:09:05,000 --> 00:09:07,000
一个是你只有300个data point

249
00:09:07,000 --> 00:09:10,000
然后你非要去用deep learning去做prediction

250
00:09:10,000 --> 00:09:13,000
对模型有理解的人听到这儿就会皱起眉头

251
00:09:13,000 --> 00:09:15,000
这件事很有可能是做不好的

252
00:09:15,000 --> 00:09:19,000
然后确实他被一个简单的中文数模型狠狠打脸

253
00:09:19,000 --> 00:09:23,000
可是就是有大厂花了上千万的薪水

254
00:09:23,000 --> 00:09:27,039
招了一堆人去研发和维护这个模型

255
00:09:27,039 --> 00:09:28,039
就很扯

256
00:09:28,039 --> 00:09:31,240
再就是有的时候你用产品可以更好得到这些信息

257
00:09:31,240 --> 00:09:32,639
你非要用Model

258
00:09:32,639 --> 00:09:36,320
比如说你想知道客户对你的产品满不满意

259
00:09:36,320 --> 00:09:37,840
你可以去收集review

260
00:09:37,840 --> 00:09:41,720
你可以去做一些用户能给你提供feedback的方式

261
00:09:41,720 --> 00:09:45,480
但是这个时候你非要去上一个customer review的sentiment model

262
00:09:45,480 --> 00:09:46,399
那customer review

263
00:09:46,399 --> 00:09:49,039
本来去留review的这些人就是highly biased的

264
00:09:49,039 --> 00:09:50,519
你的这个模型本身

265
00:09:50,519 --> 00:09:52,960
你到底有没有效又很难说

266
00:09:52,960 --> 00:09:55,000
因为你去做了这个machinena model

267
00:09:55,000 --> 00:09:56,559
反而你没有去做产品

268
00:09:56,559 --> 00:09:58,840
反而你没有去真正的去聆听

269
00:09:58,840 --> 00:10:01,120
用户给你产品的feedback

270
00:10:01,120 --> 00:10:03,519
这又是一个买赌还输的故事

271
00:10:03,519 --> 00:10:05,080
以上就是我总结的五类模型

272
00:10:05,080 --> 00:10:06,200
简单的recap一下

273
00:10:06,200 --> 00:10:10,399
第一类是它既能利用非常广泛的数据

274
00:10:10,399 --> 00:10:12,759
而且它的label是用户自动产生的

275
00:10:12,759 --> 00:10:14,519
典型的就是推荐算法

276
00:10:14,519 --> 00:10:18,480
第二类它是把一个僵化的复杂系统简单化

277
00:10:18,480 --> 00:10:20,519
从而达到人类做不到的事情

278
00:10:20,519 --> 00:10:23,759
第三类是它可以很好的复制人类的工作

279
00:10:23,759 --> 00:10:25,299
这三类都是好的模型那剩下两类不好的模型第四类就是脱裤子放屁类是它可以很好的复制人类的工作这三类都是好的模型

280
00:10:25,299 --> 00:10:26,899
那剩下两类不好的模型

281
00:10:26,899 --> 00:10:28,980
第四类就是脱裤子放屁类

282
00:10:28,980 --> 00:10:31,139
你去强行用Machine Learning

283
00:10:31,139 --> 00:10:34,139
去replace一个本来做得很好的系统

284
00:10:34,139 --> 00:10:37,139
然后在这过程中你牺牲了可解释性

285
00:10:37,139 --> 00:10:38,940
并且牺牲了scalability

286
00:10:38,940 --> 00:10:40,340
很多人的误解就是

287
00:10:40,340 --> 00:10:41,940
Machine Learning有scalability

288
00:10:41,940 --> 00:10:43,379
但是你如果真正做的话

289
00:10:43,379 --> 00:10:45,299
你就会发现只要数据一变

290
00:10:45,299 --> 00:10:47,500
你的模型很多时候就要重来

291
00:10:47,500 --> 00:10:50,500
而且在你缺乏可解决性的情况下

292
00:10:50,500 --> 00:10:52,000
这是不Scalable的

293
00:10:52,000 --> 00:10:54,500
第五类就是买赌还书

294
00:10:54,500 --> 00:10:57,500
就是本来应该用其他的方式去做的事情

295
00:10:57,500 --> 00:10:59,000
你非要去用ML做

296
00:10:59,000 --> 00:11:02,500
最后就会导致你做出来的效果是更差的

297
00:11:02,500 --> 00:11:03,500
总结了这么多

298
00:11:03,500 --> 00:11:05,799
但是其实做Machine Learning的这些人呢

299
00:11:05,799 --> 00:11:07,200
是非常聪明的一些人

300
00:11:07,200 --> 00:11:10,000
如果你对这些模型非常了解的情况下

301
00:11:10,000 --> 00:11:12,799
你做一些排列组合和做一些创新

302
00:11:12,799 --> 00:11:15,000
有的时候会有很多意想不到的结果

303
00:11:15,000 --> 00:11:16,600
比如说GNN

304
00:11:16,600 --> 00:11:19,000
它就是用Machine Learning Model

305
00:11:19,000 --> 00:11:21,200
去给Machine Learning Model产生Label

306
00:11:21,200 --> 00:11:23,000
那它就达到了很好的效果

307
00:11:23,000 --> 00:11:24,399
比如说图像识别

308
00:11:24,399 --> 00:11:27,200
它在replicate人们的工作的情况下

309
00:11:27,200 --> 00:11:29,399
又能利用互联网的强大搜索

310
00:11:29,399 --> 00:11:31,600
最后也能达到很好的效果

311
00:11:31,600 --> 00:11:35,000
所以我这儿说的这些东西

312
00:11:35,000 --> 00:11:36,200
难免观音漏万

313
00:11:36,200 --> 00:11:38,799
我把它说出来也是希望一方面

314
00:11:38,799 --> 00:11:41,200
好的景色让大家赏心悦目一下

315
00:11:41,200 --> 00:11:43,600
另一方面也是提出一个框架

316
00:11:43,600 --> 00:11:44,399
扩张隐喻

317
00:11:44,399 --> 00:11:47,480
希望大家不管看到了好的例子也好

318
00:11:47,480 --> 00:11:49,720
还是对我的这个framework有补充

319
00:11:49,720 --> 00:11:50,879
或者有意义

320
00:11:50,879 --> 00:11:52,679
欢迎在留言下面跟我提

321
00:11:52,679 --> 00:11:54,200
大家一起来讨论一下

322
00:11:54,200 --> 00:11:55,600
我们可以共同进步

323
00:11:55,600 --> 00:11:56,519
那好的谢谢

324
00:11:56,519 --> 00:11:57,320
我们下期见

