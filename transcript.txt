[00:00:00,000 -> 00:00:02,480] 往后 往后一点
[00:00:04,360 -> 00:00:06,599] 不会撞到我的相机吧
[00:00:06,599 -> 00:00:07,799] 不会不会
[00:00:07,799 -> 00:00:09,000] 可以可以可以 就不动 不动
[00:00:09,000 -> 00:00:10,000] 倒车倒车倒车
[00:00:00,000 -> 00:00:01,480] 你停停停
[00:00:06,200 -> 00:00:06,879] 大家好
[00:00:06,879 -> 00:00:07,679] 我是孙玉琛
[00:00:07,719 -> 00:00:08,960] 感谢大家对我的
[00:00:08,960 -> 00:00:11,320] 感谢大家对我频道的支持
[00:00:11,359 -> 00:00:14,839] 然后我今天能达到100万的订阅用户
[00:00:14,839 -> 00:00:15,880] 我显得非常高兴
[00:00:15,919 -> 00:00:18,640] 今天我们有幸请来了吴京成
[00:00:18,679 -> 00:00:19,480] 来给大家
[00:00:19,480 -> 00:00:21,239] 我们今天一块来做这期视频
[00:00:25,359 -> 00:00:26,359] 大家好
[00:00:26,719 -> 00:00:28,600] 我们今天有幸请来了
[00:00:28,640 -> 00:00:29,719] 吴京成同学
[00:00:00,000 -> 00:00:01,300] 来给我们讲算法
[00:00:01,300 -> 00:00:03,399] 算法这个话题虽然听上去很高深
[00:00:03,399 -> 00:00:06,299] 但是其实跟我们的生活是息息相关的
[00:00:06,299 -> 00:00:08,199] 吴京生同学也在德道上有一门课
[00:00:08,199 -> 00:00:10,800] 然后现在已经有一万多个人去买这门课了
[00:00:10,800 -> 00:00:12,199] 所以说今天来给免费
[00:00:12,199 -> 00:00:15,099] 今天来免费给大家介绍一下这门课都讲什么的
[00:00:15,099 -> 00:00:16,600] 好大家好
[00:00:16,600 -> 00:00:17,199] 我是吴京成
[00:00:17,199 -> 00:00:18,899] 很高兴来到孙玉琛的频道
[00:00:18,899 -> 00:00:21,899] 然后也希望大家多多支持孙玉琛的YouTube频道
[00:00:21,899 -> 00:00:24,199] 为他点赞 评论加关注
[00:00:24,199 -> 00:00:25,100] 一键三连
[00:00:25,100 -> 00:00:26,300] 谢谢
[00:00:26,300 -> 00:00:28,600] 那京生同学你做一下自我介绍吧
[00:00:28,600 -> 00:00:29,300] 好好好
[00:00:00,000 -> 00:00:01,240] 我叫吴京成
[00:00:01,240 -> 00:00:02,640] 然后呢今天很有意思啊
[00:00:02,640 -> 00:00:05,080] 今天拿到这么一个小玩偶是最增加的
[00:00:05,080 -> 00:00:07,000] 然后我是北京大学毕业的
[00:00:07,000 -> 00:00:10,400] 然后我是在北京大学学的是数学系
[00:00:10,400 -> 00:00:12,480] 然后方向呢是计算数学
[00:00:12,480 -> 00:00:14,359] 后来我到了美国密歇根大学
[00:00:14,359 -> 00:00:16,399] 读的是应用数学的博士
[00:00:16,399 -> 00:00:19,359] 然后我的研究方向呢是跟库存管理有关
[00:00:19,359 -> 00:00:20,960] 然后跟优化算法呀
[00:00:20,960 -> 00:00:22,160] 然后跟运筹学有关
[00:00:22,160 -> 00:00:24,960] 后来我就到了亚马逊的库存管理部门
[00:00:24,960 -> 00:00:26,640] 然后也是它的供应链管理部门
[00:00:26,640 -> 00:00:29,199] 在那做算法方面的优化研究
[00:00:00,000 -> 00:00:01,520] 我听了这么多 我觉得脑子都晕了
[00:00:01,520 -> 00:00:04,480] 但是听起来大家网上盛传北大数学系
[00:00:04,480 -> 00:00:06,000] 都是一些很神奇的人
[00:00:06,000 -> 00:00:08,480] 你觉得怎么样 是对的吗
[00:00:08,599 -> 00:00:11,839] 我觉得北大数学系有很多很厉害很神奇的人
[00:00:12,039 -> 00:00:14,199] 然后我其实不算
[00:00:14,279 -> 00:00:15,000] 我其实不算
[00:00:15,000 -> 00:00:15,560] 得到著名讲师
[00:00:16,480 -> 00:00:20,440] 我觉得我是一个比较稍微有点斜杠青年的那种感觉
[00:00:20,480 -> 00:00:24,800] 我自己是做算法方面的研究
[00:00:24,800 -> 00:00:26,800] 然后但是我自己是一个特别喜欢演戏
[00:00:00,000 -> 00:00:03,480] 然后在表演舞台的这么一个人
[00:00:03,480 -> 00:00:04,879] 所以我经常会参加一些
[00:00:04,879 -> 00:00:07,000] 西雅图著名脱口秀
[00:00:07,000 -> 00:00:07,599] 没有没有没有
[00:00:07,599 -> 00:00:08,400] 我们不是脱口秀
[00:00:08,400 -> 00:00:09,839] 西雅图非著名脱口秀
[00:00:09,839 -> 00:00:11,000] 不是脱口秀演员
[00:00:11,000 -> 00:00:12,800] 西雅图非著名戏剧演员
[00:00:12,800 -> 00:00:13,919] 对非著名戏剧演员
[00:00:13,919 -> 00:00:14,960] 非著名戏剧演员
[00:00:14,960 -> 00:00:15,640] 好的好的
[00:00:15,640 -> 00:00:18,320] 所以你觉得学算法对你演话剧有帮助吗
[00:00:18,320 -> 00:00:19,600] 一点帮助都没有
[00:00:19,600 -> 00:00:21,320] 如果你想当一个好的话剧演员
[00:00:21,320 -> 00:00:23,280] 不要去学算法
[00:00:23,280 -> 00:00:23,559] 好的
[00:00:23,559 -> 00:00:26,879] 那学算法会对我的什么有帮助呢
[00:00:26,879 -> 00:00:29,120] 算法实际上有意思的一件事
[00:00:00,000 -> 00:00:03,200] 是他的一个帮助你的思维逻辑
[00:00:03,200 -> 00:00:06,200] 当然他又跟数学不是不是简单的数学有关
[00:00:06,200 -> 00:00:08,599] 是那所以什么是算法
[00:00:08,599 -> 00:00:11,199] 算法如果你一定要看他的定义的话
[00:00:11,199 -> 00:00:13,500] 算法就是为了解决一定的问题
[00:00:13,500 -> 00:00:15,199] 遵照一定的步骤
[00:00:15,199 -> 00:00:16,500] 执行一些命令
[00:00:16,500 -> 00:00:19,500] 最后得到一个答案这么一个过程
[00:00:19,500 -> 00:00:20,100] 这个叫算法
[00:00:20,100 -> 00:00:23,000] 就是把人变成机器人的过程吧
[00:00:23,000 -> 00:00:25,100] 如果你一定要这么做
[00:00:25,100 -> 00:00:26,100] 可以说是
[00:00:26,100 -> 00:00:29,100] 但是我们每个人都有这个作为人性的一面
[00:00:00,000 -> 00:00:03,299] 和解决问题的时候那种追求效率高效的那一面
[00:00:03,299 -> 00:00:06,480] 如果说你想特别高效的解决一些问题
[00:00:06,480 -> 00:00:08,400] 那学一些算法是好的
[00:00:08,400 -> 00:00:10,080] 如果我想高效的找女朋友
[00:00:10,080 -> 00:00:12,000] 就有一个这样的算法帮助
[00:00:12,000 -> 00:00:12,539] 可以啊
[00:00:12,539 -> 00:00:13,519] 我觉得是可以的
[00:00:13,519 -> 00:00:14,039] 你可以
[00:00:14,039 -> 00:00:16,280] 你这世界上有这么多时间管理大师是吧
[00:00:16,280 -> 00:00:17,280] 哈哈哈哈
[00:00:17,280 -> 00:00:19,280] 你觉得算法比较厉害
[00:00:19,280 -> 00:00:21,480] 我给算法大师算算
[00:00:21,480 -> 00:00:23,079] 那那那行
[00:00:23,079 -> 00:00:27,280] 我们知道了就是算法是帮我提高我做事情的效率是吧
[00:00:27,280 -> 00:00:29,320] 然后有一套怎么说呢
[00:00:00,000 -> 00:00:03,500] 规定的方法或者说从起点出来的方法
[00:00:03,500 -> 00:00:05,040] 对这个又是一个非常有意思的事情
[00:00:05,040 -> 00:00:08,199] 当然我们说经常我们要做事情想做事情做的效率高
[00:00:08,199 -> 00:00:10,300] 但是我们是遇到的问题很不一样的吧
[00:00:10,300 -> 00:00:11,779] 你有时候要去看这个事情
[00:00:11,779 -> 00:00:12,720] 比如说找女朋友
[00:00:12,720 -> 00:00:14,660] 有时候你的工作当中要安排工作
[00:00:14,660 -> 00:00:16,859] 当然每件事它不一样
[00:00:16,859 -> 00:00:18,100] 所以你采取的方法也不一样
[00:00:18,100 -> 00:00:19,339] 你用的算法肯定不一样
[00:00:19,339 -> 00:00:22,440] 这个时候就需要我们对一些比较经典的一些问题啊
[00:00:22,440 -> 00:00:24,539] 有些了解让你遇到类似问题的时候
[00:00:24,539 -> 00:00:25,140] 你说哎
[00:00:25,140 -> 00:00:26,219] 我就遇到过这个问题
[00:00:26,219 -> 00:00:27,000] 我学过这个问题
[00:00:27,000 -> 00:00:29,760] 这个问题当中用这个模型用这个算法比较合适
[00:00:00,000 -> 00:00:02,040] 那这个时候你就能把你以前学到的知识
[00:00:02,040 -> 00:00:03,680] 用到无论是你的生活当中啊
[00:00:03,680 -> 00:00:05,480] 或者是工作当中去
[00:00:05,480 -> 00:00:09,439] 其实我提女朋友这件事情是因为我之前有一个学弟
[00:00:09,439 -> 00:00:11,599] 他在学校教书
[00:00:11,619 -> 00:00:13,480] 他就用这个来引出算法的
[00:00:13,480 -> 00:00:17,000] 他是说算法可以告诉你在什么时候
[00:00:17,000 -> 00:00:19,100] 要走是最佳的时机
[00:00:19,100 -> 00:00:20,640] 因为你会不断的explore嘛
[00:00:20,640 -> 00:00:23,160] 但是你又要去开始exploit
[00:00:23,160 -> 00:00:25,760] 然后在这个过程中的话是有一个optimal tradeoff
[00:00:25,760 -> 00:00:29,199] 对对有这么一个有这么一个理论
[00:00:00,000 -> 00:00:01,000] 就是说
[00:00:01,000 -> 00:00:02,399] 是算法大师的老婆
[00:00:02,399 -> 00:00:04,559] 是我通过算法找到的
[00:00:04,559 -> 00:00:06,400] 没有没有没有
[00:00:06,400 -> 00:00:09,839] 这有一个一个一个雇佣secretary的一个问题
[00:00:09,839 -> 00:00:13,000] 就是说你如果说你会interview100个secretary
[00:00:13,000 -> 00:00:14,000] 我忘了具体是多少
[00:00:14,000 -> 00:00:15,000] 第三十几个
[00:00:15,000 -> 00:00:16,399] 37个还是第一个
[00:00:16,399 -> 00:00:17,600] 我具体忘了第几个
[00:00:17,600 -> 00:00:19,199] 就是说如果你要找女朋友
[00:00:19,199 -> 00:00:21,800] 然后你知道你这辈子可能会遇到10个人
[00:00:21,800 -> 00:00:25,500] 然后那可能从你可能先去认识3到4个
[00:00:25,500 -> 00:00:27,100] 然后你看一下哪个人最好
[00:00:27,100 -> 00:00:29,000] 你不一定要去选他们
[00:00:00,000 -> 00:00:02,720] 之后你一旦发现了一个比你之前预料的
[00:00:02,720 -> 00:00:05,120] 给你最合适的一个人更合适的一个人
[00:00:05,120 -> 00:00:06,080] 那你就抓住机会吧
[00:00:06,080 -> 00:00:07,719] 然后你就不用再浪费时间了
[00:00:07,719 -> 00:00:08,919] 这就是你最好的选择
[00:00:08,919 -> 00:00:11,599] 否则你有可能一辈子都找不到找不到对象了
[00:00:11,599 -> 00:00:12,679] 找不到好的对象了
[00:00:14,560 -> 00:00:15,359] 换一个话题吧
[00:00:15,359 -> 00:00:15,919] 换一个话题
[00:00:15,919 -> 00:00:16,399] 好的
[00:00:16,399 -> 00:00:18,079] 就是我们那好的
[00:00:18,079 -> 00:00:20,440] 就是算法在我们生活中无处不在
[00:00:20,440 -> 00:00:23,760] 那可是我觉得就是大家不用算法也可以活得很好
[00:00:23,760 -> 00:00:28,320] 那肯定算法是用来用来听起来就是算法是用来解决一些更复杂的问题的
[00:00:28,320 -> 00:00:28,920] 对吧
[00:00:29,239 -> 00:00:29,559] 对
[00:00:00,000 -> 00:00:03,439] 我觉得应用算法上它有两个特别典型的目的
[00:00:03,439 -> 00:00:05,519] 一个是
[00:00:06,559 -> 00:00:07,400] 你说对
[00:00:07,400 -> 00:00:10,439] 我觉得有两个最主要的一个解决的方向
[00:00:10,439 -> 00:00:12,039] 一个是自动化一些事情
[00:00:12,039 -> 00:00:14,240] 就是很多东西需要是我们经常就是labour
[00:00:14,240 -> 00:00:15,560] 我们就是手工做一些事情
[00:00:15,560 -> 00:00:17,640] 比如说我要看一样看一样
[00:00:17,640 -> 00:00:18,719] 以前看
[00:00:18,719 -> 00:00:20,519] 比如说你以前FBI干一些事
[00:00:20,519 -> 00:00:22,039] 可能他有很多人的照片
[00:00:22,039 -> 00:00:22,519] 然后呢
[00:00:22,519 -> 00:00:24,559] 你要看这个照片拿过来看看是谁
[00:00:24,559 -> 00:00:25,879] 然后这个照片拿过来看看是谁
[00:00:25,879 -> 00:00:26,839] 这可能都是人工做
[00:00:26,839 -> 00:00:28,160] 那现在我们就有可能
[00:00:00,000 -> 00:00:01,919] 就可以有一些机器学习的算法
[00:00:01,919 -> 00:00:04,400] 然后能帮你直接去识别出这个人脸是谁
[00:00:04,400 -> 00:00:06,559] 那这个就把这个过程就完全自动化了
[00:00:06,559 -> 00:00:07,000] 然后呢
[00:00:07,000 -> 00:00:10,160] 在算法还经常干的一件事情的是优化
[00:00:10,160 -> 00:00:11,480] 就比如说再举个例子
[00:00:11,480 -> 00:00:12,720] 就比如说我们开车
[00:00:12,720 -> 00:00:16,320] 那个现在有很多就是帮助我们开车的一些算法
[00:00:16,320 -> 00:00:16,760] 然后呢
[00:00:16,760 -> 00:00:18,920] 一方面他提供了自动化的一个过程
[00:00:18,920 -> 00:00:19,960] 他帮助我们开车
[00:00:19,960 -> 00:00:21,559] 另外一部分的他还有话
[00:00:21,559 -> 00:00:23,199] 他试图开的更更安全
[00:00:23,199 -> 00:00:25,320] 虽然我们现在可能在那个经常新闻
[00:00:25,320 -> 00:00:28,879] 遇到新闻当中可能更看到有些开车的这些算法
[00:00:00,000 -> 00:00:01,280] 并不一定显得那么安全
[00:00:01,280 -> 00:00:04,759] 但是如果你真的和人开车出失误的比例比较一下的话
[00:00:04,759 -> 00:00:06,200] 可能还是算法更安全
[00:00:06,200 -> 00:00:08,160] 这个实际上是一个优化的一个过程
[00:00:08,160 -> 00:00:10,699] 所以我觉得就是算法在我们生活当中
[00:00:10,699 -> 00:00:12,800] 实际上很多时候起到这两个方面的作用
[00:00:12,800 -> 00:00:15,800] 你要说我们不用算法是不是可以生活下去呢
[00:00:15,800 -> 00:00:16,920] 我觉得没问题
[00:00:16,920 -> 00:00:18,000] 我觉得没有问题
[00:00:18,000 -> 00:00:21,079] 如果从我自己的看法是从工业革命之后啊
[00:00:21,079 -> 00:00:24,320] 我们的整个社会就越来越多的追求效率
[00:00:24,320 -> 00:00:27,359] 而你看那个机器上是追求效率的
[00:00:00,000 -> 00:00:03,700] 让我们现在这个时代的算法也是极其追求效率的
[00:00:03,700 -> 00:00:05,639] 如果你的工作或者你要做的事情
[00:00:05,639 -> 00:00:07,200] 你对效率要有要求的话
[00:00:07,200 -> 00:00:09,019] 那算法很有可能能是你的好朋友
[00:00:09,019 -> 00:00:10,880] 但是如果你对这些没有要求
[00:00:10,880 -> 00:00:12,019] 比如说我是一个艺术家
[00:00:12,019 -> 00:00:14,519] 我就喜欢做一些天马行空的东西啊
[00:00:14,519 -> 00:00:15,419] 无论是音乐呀
[00:00:15,419 -> 00:00:16,339] 无论是绘画呀
[00:00:16,339 -> 00:00:17,420] 这个事需要你的想象力
[00:00:17,420 -> 00:00:20,460] 你可能不需要说我要在多少时间之内做出多少幅画
[00:00:20,460 -> 00:00:22,420] 效率不是我的想做的事情
[00:00:22,420 -> 00:00:23,780] 我也不想自动化这个过程
[00:00:23,780 -> 00:00:25,019] 那你就不需要算法
[00:00:25,019 -> 00:00:27,660] 这个时候你完全没有算法可以活得很好
[00:00:27,660 -> 00:00:28,140] 好的
[00:00:00,000 -> 00:00:01,600] 所以我这样说一下的话
[00:00:01,600 -> 00:00:02,680] 或者说这样
[00:00:02,680 -> 00:00:05,919] 我觉得有一个例子就是有一些这些所谓的life hacker
[00:00:05,919 -> 00:00:08,480] 他们就把自己的人生做得特别精准
[00:00:08,480 -> 00:00:09,960] 然后很多东西吃的卡路里
[00:00:09,960 -> 00:00:14,400] 然后锻炼的时候产出的消耗的卡路里什么的都算得特别清楚
[00:00:14,400 -> 00:00:17,120] 他甚至对自己的精力值什么都有估计
[00:00:17,120 -> 00:00:20,399] 然后他就基于这些东西把自己的人生变得非常optimized
[00:00:20,399 -> 00:00:22,239] 他就利用时间的效率非常高
[00:00:22,239 -> 00:00:23,199] 未必值得鼓励
[00:00:23,320 -> 00:00:26,120] 但是我觉得这种人也是三反大师
[00:00:26,120 -> 00:00:27,600] 可以这么说
[00:00:27,800 -> 00:00:29,719] 每个人有自己的人生选择
[00:00:00,000 -> 00:00:02,379] 然后他每个人有自己的方法论
[00:00:02,379 -> 00:00:02,620] 对吧
[00:00:02,620 -> 00:00:04,799] 他可能说我学了很多跟算法有关的东西
[00:00:04,799 -> 00:00:06,599] 所以我就愿意把这方面的东西
[00:00:06,599 -> 00:00:08,640] 量化的一些东西用到生活当中去
[00:00:08,640 -> 00:00:09,080] 然后呢
[00:00:09,080 -> 00:00:10,119] 当然不是每个人都这样
[00:00:10,119 -> 00:00:11,560] 你也可以学了之后你不用
[00:00:11,560 -> 00:00:14,359] 但是这是你自己的相当于是你自己最终的一个选择
[00:00:14,359 -> 00:00:15,039] 好的
[00:00:15,039 -> 00:00:16,839] 那这是我们人生啊
[00:00:16,839 -> 00:00:19,839] 就是人生感觉对我来说不是那么复杂
[00:00:19,839 -> 00:00:23,079] 但是可能管理公司或者说是管理机器
[00:00:23,079 -> 00:00:25,839] 或者说是利用很大的算力去完成一些任务
[00:00:25,839 -> 00:00:28,280] 或者说操作很多机器去完成很多任务
[00:00:00,000 -> 00:00:02,220] 那这个时候可能算法就很重要了对吧
[00:00:02,220 -> 00:00:06,200] 我记得就是我之前去亚马逊的仓库参观过
[00:00:06,200 -> 00:00:07,280] 就是一进去哇
[00:00:07,280 -> 00:00:08,900] 好多好多仓库里边
[00:00:08,900 -> 00:00:11,199] 然后就几十万种商品放在一层
[00:00:11,199 -> 00:00:14,880] 那这个时候怎么样子把这个商品存进去或者取出来
[00:00:14,880 -> 00:00:16,800] 感觉就是很需要算法才能解决
[00:00:16,800 -> 00:00:19,239] 对这实际上是很有意思的一个问题
[00:00:19,239 -> 00:00:20,800] 就是说如果你想一下这个仓库
[00:00:20,800 -> 00:00:23,000] 仓库上有点像supermarket
[00:00:23,000 -> 00:00:24,079] 有点像超级市场
[00:00:24,079 -> 00:00:25,679] 然后里面有很多货物
[00:00:25,679 -> 00:00:27,199] 然后这个工作人员
[00:00:27,199 -> 00:00:27,920] 就是你要order
[00:00:27,920 -> 00:00:28,800] 你要买什么东西的话
[00:00:00,000 -> 00:00:02,279] 工作人员要到这个仓库里面去把这个东西拿出来
[00:00:02,279 -> 00:00:03,200] 你可能一再想
[00:00:03,200 -> 00:00:03,399] 哎
[00:00:03,399 -> 00:00:06,639] 这个仓库可能他就是一个跟supermarket一样的一个东西
[00:00:06,639 -> 00:00:08,919] 但是如果你真正到亚马逊的仓库里面去看的话
[00:00:08,919 -> 00:00:09,839] 就完全不是这样
[00:00:09,839 -> 00:00:13,439] 亚马逊的仓库里面货品的摆放都是非常随机的
[00:00:13,439 -> 00:00:14,359] 对
[00:00:14,359 -> 00:00:15,439] 我去了以后也很吃惊
[00:00:15,439 -> 00:00:16,199] 这样子的话
[00:00:16,199 -> 00:00:17,600] 为什么会更有效率呢
[00:00:17,600 -> 00:00:18,320] 对对
[00:00:18,320 -> 00:00:21,199] 就是首先你取你要取货物的时候
[00:00:21,199 -> 00:00:22,320] 就是如果你是一个工人
[00:00:22,320 -> 00:00:24,239] 你然后我order了一个卫生纸
[00:00:24,239 -> 00:00:26,000] 然后你要进去找卫生纸
[00:00:26,000 -> 00:00:28,000] 当然找东西上并不并不麻烦
[00:00:00,000 -> 00:00:03,299] 所有这些卫生纸在这个仓库的什么位置上
[00:00:03,299 -> 00:00:06,200] 都是已经注册或者定义好了的
[00:00:06,200 -> 00:00:08,599] 你只要在自己的手机上面或者一个电脑上面一看
[00:00:08,599 -> 00:00:10,699] 他就告诉你最近的卫生纸在这个地方
[00:00:10,699 -> 00:00:13,019] 你作为一个取货的一个工人的话
[00:00:13,019 -> 00:00:15,419] 你就可以走最近的路径去那个地方就可以了
[00:00:15,419 -> 00:00:15,880] 这个地方
[00:00:15,880 -> 00:00:18,320] 这个这件取这个东西呢
[00:00:18,320 -> 00:00:19,500] 还挺容易的
[00:00:19,500 -> 00:00:20,760] 但是你放东西的时候
[00:00:20,760 -> 00:00:24,379] 如果卫生纸全都放在仓库的一个指定的位置的话
[00:00:24,379 -> 00:00:26,019] 你就要走很远
[00:00:26,019 -> 00:00:26,940] 所有东西都放在那
[00:00:26,940 -> 00:00:29,460] 但是每次要有新的要有卫生纸要拿的时候
[00:00:00,000 -> 00:00:01,740] 你都要走一个很远的地方去那
[00:00:01,740 -> 00:00:04,059] 但是如果我作为customer
[00:00:04,059 -> 00:00:06,099] 我买了一卷卫生纸和一个牙刷
[00:00:06,099 -> 00:00:06,459] 然后呢
[00:00:06,459 -> 00:00:08,220] 这两个东西又恰恰放在了不一样的地方
[00:00:08,220 -> 00:00:09,380] 那就要先到A地点
[00:00:09,380 -> 00:00:10,740] 再到B地点再回来
[00:00:10,740 -> 00:00:14,019] 但是如果这些东西在整个仓库里面是随机摆放的话
[00:00:14,019 -> 00:00:15,660] 就算比较均匀的随机摆放的话
[00:00:15,660 -> 00:00:19,579] 你就会发现你可以很容易找到两个非常近的地方
[00:00:19,579 -> 00:00:20,660] 然后就把这个东西取出来了
[00:00:20,660 -> 00:00:23,940] 实际上这样的话就可以提高效率
[00:00:23,940 -> 00:00:26,379] 而这就是对效率的一个追求
[00:00:26,379 -> 00:00:27,620] 而背后这个算法呢
[00:00:00,000 -> 00:00:01,600] 他有一套一套理论啊
[00:00:01,600 -> 00:00:03,359] 一套算法来支持这件事情
[00:00:03,359 -> 00:00:05,759] 对所以说背后的其实大家已经算好了
[00:00:05,759 -> 00:00:07,639] 这样子摆放是最有效率的
[00:00:07,639 -> 00:00:09,400] 而且其实我用了同样的资源是吧
[00:00:09,400 -> 00:00:10,400] 我同样的空间
[00:00:10,400 -> 00:00:11,800] 然后同样的东西
[00:00:11,800 -> 00:00:15,000] 可是我可以让我这个事情做得更快了
[00:00:15,000 -> 00:00:16,760] 那这个就是挺神奇的一个地方
[00:00:16,760 -> 00:00:19,920] 对这个效率这件事是算法特别追求的一个目标
[00:00:19,920 -> 00:00:21,239] 就是首先要把事情做成
[00:00:21,239 -> 00:00:23,160] 其次就是说我们要追求效率
[00:00:23,160 -> 00:00:24,320] 再把事情做成的情况下
[00:00:24,320 -> 00:00:25,760] 效率尽量的高
[00:00:25,760 -> 00:00:27,320] 就我想起来以前韩信点兵
[00:00:27,320 -> 00:00:28,559] 这是不是也是一个算法
[00:00:00,000 -> 00:00:02,240] 韩信点兵多多益善是吧
[00:00:02,240 -> 00:00:03,600] 韩信将兵多多益善
[00:00:03,600 -> 00:00:04,679] 那韩信点兵是什么
[00:00:04,679 -> 00:00:06,719] 他好像就是说他用了一个很快的方法
[00:00:06,719 -> 00:00:07,599] 让下面的人报数
[00:00:07,599 -> 00:00:08,320] 然后就知道了
[00:00:08,320 -> 00:00:10,199] 这练兵场上抓了个人
[00:00:10,199 -> 00:00:11,720] 哦
[00:00:11,720 -> 00:00:14,800] 那我听起来应该是一个很有意思的一个算法
[00:00:14,800 -> 00:00:15,039] 哎
[00:00:15,039 -> 00:00:16,640] 我可我人文知识不够
[00:00:16,640 -> 00:00:17,640] 所以不敢做
[00:00:00,000 -> 00:00:03,120] 但是大家有一個意思 我覺得應該是
[00:00:03,120 -> 00:00:05,120] 那你來解釋解釋 你來解釋解釋
[00:00:05,120 -> 00:00:07,120] 我其實也就記得這個了 其實我都不記得了
[00:00:07,120 -> 00:00:09,119] 大概就是一個算法
[00:00:09,119 -> 00:00:12,119] 那我這還有兩個問題吧
[00:00:12,119 -> 00:00:15,119] 第一個就是大家講到算法的時候
[00:00:15,119 -> 00:00:17,120] 其實好像有很多定義的樣子
[00:00:17,120 -> 00:00:19,120] 比如說你剛剛說Mersenne是一種算法
[00:00:19,120 -> 00:00:23,120] 然後大家在殺棋的時候也會要學算法數學結構
[00:00:23,120 -> 00:00:27,120] 然後國內現在很多這個工程師又叫算法工程師
[00:00:00,000 -> 00:00:01,560] 找不到算法的方式
[00:00:01,560 -> 00:00:03,080] 这个都是一个意思吗
[00:00:03,080 -> 00:00:05,599] 还是其实大家是指的这个算法的不同部分
[00:00:07,559 -> 00:00:08,119] 嗯
[00:00:08,119 -> 00:00:10,240] 可能有一和有很多相同的部分
[00:00:10,240 -> 00:00:14,160] 就是算法实际上是一种解决问题的一种类似于思维逻辑
[00:00:14,160 -> 00:00:15,679] 然后你要是说在网上刷题
[00:00:15,679 -> 00:00:16,800] 又做些算法题
[00:00:16,800 -> 00:00:19,640] 实际上它背后有一些
[00:00:19,640 -> 00:00:22,480] 有几个是一定数量的一些思维逻辑
[00:00:22,480 -> 00:00:23,760] 然后比如说动态规划呀
[00:00:23,760 -> 00:00:24,679] 或者二分法呀
[00:00:24,679 -> 00:00:25,399] 之类的东西
[00:00:25,399 -> 00:00:28,039] 如果你把这些思维逻辑理解的话
[00:00:28,039 -> 00:00:28,960] 解决这些问题
[00:00:00,000 -> 00:00:02,439] 实际上就是说特别问题特别处理
[00:00:02,439 -> 00:00:06,320] 但是我的这个general的背后的逻辑是一样的
[00:00:06,320 -> 00:00:07,879] 然后你要说算法工程师
[00:00:07,879 -> 00:00:09,640] 算法工程师必须得懂这些逻辑
[00:00:09,640 -> 00:00:11,560] 他才能真正遇到一个问题的时候
[00:00:11,560 -> 00:00:13,439] 设计出一个好的方法解决它
[00:00:13,439 -> 00:00:14,759] 并且解决的够快
[00:00:14,759 -> 00:00:15,679] 当然作为工程师呢
[00:00:15,679 -> 00:00:18,359] 你还肯定要把这个东西要真正写成代码
[00:00:18,359 -> 00:00:19,239] 写成产品
[00:00:19,239 -> 00:00:20,960] 让它真正在计算机上能运行
[00:00:20,960 -> 00:00:23,559] 而不是只是停留在就像是你做饭
[00:00:23,559 -> 00:00:24,640] 我给你一个recipe
[00:00:24,640 -> 00:00:25,480] 你知道怎么做
[00:00:25,480 -> 00:00:26,480] 但是你从来没做过
[00:00:26,480 -> 00:00:29,000] 那你也不是一个厨师
[00:00:00,000 -> 00:00:01,060] 所以算法是一个逻辑
[00:00:01,060 -> 00:00:05,059] 然后你通过代码把这个逻辑变成一个程序
[00:00:05,059 -> 00:00:08,060] 那第二个就是算法
[00:00:08,060 -> 00:00:09,580] 就是为什么让你这么
[00:00:09,599 -> 00:00:11,160] 就是你为什么对算法这么interested
[00:00:11,160 -> 00:00:12,980] 是不是他因为他设计很精巧啊
[00:00:12,980 -> 00:00:14,820] 给你一种智力上的快感
[00:00:14,820 -> 00:00:17,100] 对有绝对是有的
[00:00:17,100 -> 00:00:18,820] 就首先有两点
[00:00:18,820 -> 00:00:19,980] 我们说到算法的时候
[00:00:19,980 -> 00:00:22,699] 我会经常说有一部分是数学模型的部分
[00:00:22,699 -> 00:00:23,980] 就是你要解决一个实际问题
[00:00:23,980 -> 00:00:25,219] 你首先得理解这个问题
[00:00:25,219 -> 00:00:26,579] 你要用一种量化的方法
[00:00:26,579 -> 00:00:28,500] 用一种逻辑的方法把它刻画出来
[00:00:28,500 -> 00:00:29,660] 这个是模型的部分
[00:00:00,000 -> 00:00:01,399] 一旦你刻画出来之后
[00:00:01,399 -> 00:00:04,519] 你会发现我要解决其中的一个某一个特别的问题
[00:00:04,519 -> 00:00:07,280] 那这个时候你可能就要用算法来做
[00:00:07,280 -> 00:00:08,800] 但是算法有很多种
[00:00:08,800 -> 00:00:10,240] 你可能能最开始先设计出来
[00:00:10,240 -> 00:00:11,320] 我用一个特别蠢的算法
[00:00:11,320 -> 00:00:13,160] 比如说那个暴力解法
[00:00:13,160 -> 00:00:15,160] 那个我要猜你的密码是什么
[00:00:15,160 -> 00:00:17,480] 当然猜密码也没有什么更好的别的方法去猜啊
[00:00:17,480 -> 00:00:18,079] 就是说
[00:00:18,079 -> 00:00:21,679] 我们举一个什么例子比较好呢
[00:00:21,679 -> 00:00:23,320] 就韩信点兵的例子
[00:00:23,320 -> 00:00:23,879] 哦
[00:00:23,879 -> 00:00:25,800] 点还是
[00:00:25,800 -> 00:00:28,039] 对对对韩信点兵算不懂啊
[00:00:00,000 -> 00:00:02,500] 就是说韩信点兵我们可以韩信一个人过去
[00:00:02,500 -> 00:00:04,700] 一个一个一个一个一个人的点
[00:00:04,700 -> 00:00:05,660] 这样效率很低
[00:00:05,660 -> 00:00:06,059] 然后呢
[00:00:06,059 -> 00:00:07,660] 但是他他先想出一个好方法
[00:00:07,660 -> 00:00:08,859] 说我告诉你们两个将军
[00:00:08,859 -> 00:00:10,500] 你们各自把自己队伍点完了
[00:00:10,500 -> 00:00:11,419] 然后这两个将军也说
[00:00:11,419 -> 00:00:11,539] 哎
[00:00:11,539 -> 00:00:12,939] 都够就给这两个旅长
[00:00:12,939 -> 00:00:14,619] 你们把我这个东西点完了
[00:00:14,619 -> 00:00:16,179] 然后效率就最高
[00:00:16,179 -> 00:00:18,140] 我要搜一下韩信点兵
[00:00:18,140 -> 00:00:19,899] 好暂停五分钟
[00:00:19,899 -> 00:00:21,699] A few moments later
[00:00:26,420 -> 00:00:26,699] 好了
[00:00:26,699 -> 00:00:29,379] 我们用五分钟的时间看了一下韩信点兵是什么
[00:00:00,000 -> 00:00:03,279] 好像跟我们要讲的东西没有太大的关系
[00:00:03,279 -> 00:00:04,160] 可以把它剪掉了
[00:00:04,160 -> 00:00:06,080] 整个韩信点评的都剪掉了
[00:00:06,080 -> 00:00:08,720] 我们再找一个什么其他的例子
[00:00:08,720 -> 00:00:13,039] 愚蠢的算法到高级的算法的例子
[00:00:13,039 -> 00:00:14,320] 我们就还说刚才
[00:00:14,320 -> 00:00:15,439] 就还说刚才那件事吧
[00:00:15,439 -> 00:00:17,120] 就还还是韩信点评这件事
[00:00:17,120 -> 00:00:18,519] 如果有两种做法去做
[00:00:18,519 -> 00:00:20,000] 韩信有一个傻的韩信
[00:00:21,320 -> 00:00:22,719] 有一个傻的韩信呢
[00:00:22,719 -> 00:00:24,800] 然后韩信就会一个一个一个人
[00:00:24,800 -> 00:00:26,000] 那一共如果有一万个人
[00:00:26,000 -> 00:00:28,320] 那其实他就要点一万次
[00:00:00,000 -> 00:00:01,600] 但是呢
[00:00:01,600 -> 00:00:04,320] 然后并且花的时间就可能是一万秒
[00:00:04,320 -> 00:00:04,599] 对吧
[00:00:04,599 -> 00:00:05,360] 就很长时间了
[00:00:05,360 -> 00:00:07,639] 但是如果他把这个任务分派给两个人去做
[00:00:07,639 -> 00:00:08,000] 哎
[00:00:08,000 -> 00:00:10,080] 这个这个军长你去点这边的
[00:00:10,080 -> 00:00:11,359] 那个军长你去点那边的
[00:00:11,359 -> 00:00:14,240] 然后这两个军长又可以同时的去
[00:00:14,240 -> 00:00:16,239] 再把这个任务分配给底下两个师长
[00:00:16,239 -> 00:00:16,320] 哎
[00:00:16,320 -> 00:00:17,920] 这个师长你去点你们师有多少人
[00:00:17,920 -> 00:00:19,679] 这个师长你去点你们师有几个人
[00:00:19,679 -> 00:00:20,239] 这些东西
[00:00:20,239 -> 00:00:22,239] 这些信息全部分散化
[00:00:22,239 -> 00:00:24,239] 然后最后再到每个班
[00:00:24,239 -> 00:00:25,719] 每个班长就数自己班有几个人
[00:00:25,719 -> 00:00:27,640] 十个人数完了以后告诉自己的上级
[00:00:27,640 -> 00:00:29,600] 这样的话就可以并行去聚散这件事
[00:00:00,000 -> 00:00:01,199] 那整个花的时间就少了
[00:00:01,199 -> 00:00:05,599] 这就是一个典型的一个蠢的方法和一个稍微聪明点方法
[00:00:05,599 -> 00:00:08,320] 那其实我在学计算机的过程中
[00:00:08,320 -> 00:00:12,160] 一直对这个动态规划这个东西就是你学了以后
[00:00:12,160 -> 00:00:14,759] 可是我觉得我没有一个很直观的理解
[00:00:14,759 -> 00:00:16,519] 要不拿这个做个例子
[00:00:16,519 -> 00:00:18,239] 给我们讲讲动态规划的思想是什么吧
[00:00:19,839 -> 00:00:22,039] 那还是点评来讲
[00:00:22,039 -> 00:00:23,160] 不是还是点评的意思
[00:00:23,160 -> 00:00:27,640] 我说就是在这个在这次正好来给我们讲讲动态规划是干什么的吧
[00:00:27,640 -> 00:00:29,239] 我不知道你原来玩没玩过一个游戏
[00:00:00,000 -> 00:00:01,040] 叫做大航海史莱斯
[00:00:01,040 -> 00:00:02,080] 是一个特别好玩的游戏
[00:00:02,080 -> 00:00:02,879] 如果你没玩过的话
[00:00:02,879 -> 00:00:04,519] 我极度推荐你去玩一玩
[00:00:04,519 -> 00:00:05,759] 然后其中有一个桥段
[00:00:07,360 -> 00:00:08,599] 其中有一个桥段
[00:00:08,599 -> 00:00:10,279] 是你作为主人公
[00:00:10,279 -> 00:00:11,400] 你会走到一个酒馆
[00:00:11,400 -> 00:00:12,759] 然后酒馆里面有一个人
[00:00:12,759 -> 00:00:15,359] 然后这个人会给你玩一个抓硬币的游戏
[00:00:15,359 -> 00:00:16,839] 就桌子上面有一堆硬币
[00:00:16,839 -> 00:00:17,320] 然后呢
[00:00:17,320 -> 00:00:19,079] 你每次可以抓一个硬币
[00:00:19,079 -> 00:00:20,519] 两个硬币或者三个硬币
[00:00:20,519 -> 00:00:21,079] 你不能不抓
[00:00:21,079 -> 00:00:23,000] 你必须抓一二三当中的一个
[00:00:23,000 -> 00:00:23,920] 然后呢
[00:00:23,920 -> 00:00:25,480] 你的对手也是同样的规则
[00:00:25,480 -> 00:00:26,359] 你先抓
[00:00:26,359 -> 00:00:28,559] 谁抓到了最后那个硬币
[00:00:28,559 -> 00:00:29,399] 谁就输了比赛
[00:00:00,000 -> 00:00:01,960] 请问这时候你该怎么抓
[00:00:01,960 -> 00:00:03,640] 你如果说你遇到这个问题的
[00:00:03,640 -> 00:00:05,440] 那你说我抓一个抓两个抓三个
[00:00:05,440 -> 00:00:07,360] 你不会知道有什么consequence
[00:00:07,360 -> 00:00:08,960] 你不知道将来会发生什么
[00:00:08,960 -> 00:00:09,960] 但是如果告诉你
[00:00:09,960 -> 00:00:11,880] 现在桌上只有一个硬币了
[00:00:11,880 -> 00:00:12,839] 然后要你抓
[00:00:12,839 -> 00:00:13,400] 我死了
[00:00:13,400 -> 00:00:14,119] 你就死了
[00:00:14,119 -> 00:00:15,240] 如果这两个硬币的话
[00:00:15,240 -> 00:00:15,679] 抓一个
[00:00:15,679 -> 00:00:16,320] 你抓一个
[00:00:16,320 -> 00:00:17,120] 三个硬币
[00:00:17,120 -> 00:00:17,600] 抓两个
[00:00:17,600 -> 00:00:18,039] 四个硬币
[00:00:18,039 -> 00:00:18,480] 抓三个
[00:00:18,480 -> 00:00:19,199] 好五个硬币呢
[00:00:19,199 -> 00:00:20,399] 啊
[00:00:20,399 -> 00:00:21,800] 抓一个
[00:00:21,800 -> 00:00:22,120] 对
[00:00:24,199 -> 00:00:24,960] 对吗
[00:00:24,960 -> 00:00:26,120] 不知道
[00:00:26,120 -> 00:00:27,920] 都是四个硬币的时候你抓三个
[00:00:27,920 -> 00:00:28,640] 然后呢
[00:00:00,000 -> 00:00:02,000] 等等上一个的时候死的话
[00:00:02,000 -> 00:00:04,000] 就抓一个的时候死
[00:00:04,000 -> 00:00:06,000] 你如果五个硬币的时候
[00:00:06,000 -> 00:00:08,000] 你抓一个
[00:00:08,000 -> 00:00:10,000] 诶
[00:00:10,000 -> 00:00:12,000] 对啊五个硬币的时候我又死了
[00:00:12,000 -> 00:00:14,000] 不不不
[00:00:14,000 -> 00:00:16,000] 因为我抓一二三对手剩下的就是
[00:00:16,000 -> 00:00:18,000] 四三二
[00:00:18,000 -> 00:00:20,000] 对对对
[00:00:20,000 -> 00:00:22,000] 完了这段得重说
[00:00:22,000 -> 00:00:24,000] 不用重说不用重说
[00:00:24,000 -> 00:00:26,000] 所以你发现抓到五个硬币的时候
[00:00:26,000 -> 00:00:28,000] 你又死了
[00:00:00,000 -> 00:00:02,000] 剩五个硬币的时候你会死
[00:00:02,000 -> 00:00:03,500] 六个的时候你又活了
[00:00:03,500 -> 00:00:04,500] 七个时候又活了
[00:00:04,500 -> 00:00:05,000] 八个时候又活了
[00:00:05,000 -> 00:00:06,000] 九个的时候
[00:00:06,000 -> 00:00:07,000] 你又死了
[00:00:09,000 -> 00:00:11,000] 因为九个硬币你无论抓几个的时候
[00:00:11,000 -> 00:00:13,000] 对方都可以把剩下的一些硬币抓完
[00:00:13,000 -> 00:00:14,000] 剩到五个
[00:00:14,000 -> 00:00:16,000] 但是你知道五个你一定会死
[00:00:16,000 -> 00:00:17,000] 所以这个
[00:00:17,000 -> 00:00:19,000] 这你会发现了
[00:00:19,000 -> 00:00:20,000] 你之后剩
[00:00:20,000 -> 00:00:22,000] 你现在剩n个硬币的时候
[00:00:22,000 -> 00:00:23,000] 你是活还是死
[00:00:23,000 -> 00:00:25,000] 取决于n-1
[00:00:25,000 -> 00:00:26,000] n-2
[00:00:26,000 -> 00:00:28,000] n-3的情形的时候会发生什么事情
[00:00:28,000 -> 00:00:29,000] 那解决这类的问题
[00:00:00,000 -> 00:00:02,580] 这类的问题你就要从小向大的来解决
[00:00:02,580 -> 00:00:04,219] 先看n等于1的时候怎么解决
[00:00:04,219 -> 00:00:05,259] n等于2的时候怎么解决
[00:00:05,259 -> 00:00:07,580] 这样的话往上推到n等于1万的时候
[00:00:07,580 -> 00:00:08,539] 你也能把这个问题解决了
[00:00:08,539 -> 00:00:09,500] 这是动态规划吗
[00:00:09,500 -> 00:00:10,220] 这是动态规划
[00:00:10,220 -> 00:00:11,140] 和地规有什么区别
[00:00:12,699 -> 00:00:15,300] 地规地规是一种关系
[00:00:16,379 -> 00:00:17,339] 地规是一种关系
[00:00:17,339 -> 00:00:20,500] 比如说n的时候的情况基于n-1的情况
[00:00:20,500 -> 00:00:21,179] 基于n-2的情况
[00:00:21,179 -> 00:00:22,460] 这是一种地规关系
[00:00:22,460 -> 00:00:24,460] 动态规划是解决问题的一个方法
[00:00:24,460 -> 00:00:25,940] 地规定义的只是关系定义的
[00:00:25,940 -> 00:00:27,379] 不是解决问题的方法
[00:00:27,379 -> 00:00:28,780] OK
[00:00:00,000 -> 00:00:03,040] 那动态规划里面是不是一定会包含地位关系
[00:00:03,040 -> 00:00:03,319] 会
[00:00:04,320 -> 00:00:04,519] 会
[00:00:05,839 -> 00:00:07,519] 动态规划是基于地位关系
[00:00:07,519 -> 00:00:09,320] 他首先有地位关系存在
[00:00:09,320 -> 00:00:09,880] 然后呢
[00:00:09,880 -> 00:00:11,800] 从小到大构筑一个解
[00:00:11,800 -> 00:00:15,160] 这个是动态规划的一个从算法上面的一个问题
[00:00:15,160 -> 00:00:16,960] 但是为什么叫动态的规划
[00:00:16,960 -> 00:00:19,359] 因为动态规划最初解决的问题
[00:00:19,359 -> 00:00:21,039] 大部分时候都有不同时间的概念
[00:00:22,160 -> 00:00:23,960] 就比如说你现在做一件什么事情
[00:00:23,960 -> 00:00:26,199] 你现在做一件事情会影响
[00:00:26,199 -> 00:00:29,280] 将来会把你的状态在下一个时间的时候发生改变
[00:00:00,000 -> 00:00:01,520] 然后你下个时间段再做一个事情
[00:00:01,520 -> 00:00:04,080] 又会把你带到下一个时间的另外一个状态
[00:00:04,080 -> 00:00:07,179] 而这个时候你如果想最终达到某一个状态的时候
[00:00:07,179 -> 00:00:09,500] 你需要倒着来推
[00:00:09,500 -> 00:00:13,080] 这个是就有不同的时间段的这个问题叫做动态规划问题
[00:00:13,080 -> 00:00:16,140] 当然你用这个模型并不一定一定要
[00:00:16,140 -> 00:00:18,480] 要解决那些有不同时间段的那些问题
[00:00:20,519 -> 00:00:22,399] 因为时间只不过是一个变量
[00:00:22,399 -> 00:00:24,739] 对对对对OK
[00:00:24,739 -> 00:00:25,199] 哇
[00:00:25,199 -> 00:00:26,320] 所以说对吧
[00:00:26,320 -> 00:00:27,800] 刚才我觉得就是一个很好的例子
[00:00:27,800 -> 00:00:29,500] 就是我之前我可能要想
[00:00:00,000 -> 00:00:02,940] 我看到了一堆硬币我就在想我拿一个拿两个拿三个
[00:00:02,940 -> 00:00:04,339] 但是如果从最小的倒推的话
[00:00:04,339 -> 00:00:06,219] 这个问题就解了对吧
[00:00:06,219 -> 00:00:08,400] 我就知道我在拿到14个硬币的时候
[00:00:08,400 -> 00:00:09,320] 我到底应该拿几个
[00:00:09,320 -> 00:00:11,140] 对你有多个硬币的时候
[00:00:11,140 -> 00:00:13,500] 你多硬币的解是按基于少硬币的解
[00:00:13,500 -> 00:00:15,140] 这个是你跟他说的地归关系
[00:00:15,140 -> 00:00:16,460] 有这个地归关系之后
[00:00:16,460 -> 00:00:18,539] 你知道你要从后往前解决这个问题
[00:00:18,539 -> 00:00:20,660] 这是动态规划的算法解法
[00:00:22,179 -> 00:00:24,339] 所以怎么样用动态规划追女朋友呀
[00:00:27,660 -> 00:00:29,859] 那就是先想清楚你最后要什么
[00:00:00,000 -> 00:00:02,060] 从倒着来看
[00:00:02,060 -> 00:00:05,099] 然后看看这个遇到的这个女孩合不合适
[00:00:05,099 -> 00:00:07,299] 然后你想知道到什么程度上我求婚
[00:00:07,320 -> 00:00:08,220] 她会同意呢
[00:00:08,220 -> 00:00:09,539] 需要满足哪些条件呢
[00:00:09,539 -> 00:00:11,099] 那我先实践哪个
[00:00:11,099 -> 00:00:12,419] 后实践哪个呢
[00:00:12,419 -> 00:00:13,419] 从后向前推
[00:00:13,439 -> 00:00:14,380] 这就是动态婚红
[00:00:14,380 -> 00:00:15,419] 这怎么说出来
[00:00:17,339 -> 00:00:18,179] 估计不管用啊
[00:00:19,420 -> 00:00:19,859] 管用吗
[00:00:22,100 -> 00:00:22,739] 不是成功了吗
[00:00:24,539 -> 00:00:25,379] 对不是
[00:00:25,379 -> 00:00:26,780] 弹性反
[00:00:26,780 -> 00:00:27,820] 暴力反
[00:00:27,839 -> 00:00:28,620] 什么
[00:00:28,620 -> 00:00:29,019] 要看
[00:00:00,000 -> 00:00:06,280] 我找我老婆没有用到算法
[00:00:06,280 -> 00:00:07,480] OK
[00:00:07,480 -> 00:00:09,960] 大家记着算法大师找老婆也不用算法的
[00:00:09,960 -> 00:00:11,480] 所以我们这一课其实是没什么用的
[00:00:11,480 -> 00:00:16,800] 好的
[00:00:16,800 -> 00:00:17,640] 其实可以了
[00:00:17,640 -> 00:00:18,239] 可以了
[00:00:18,239 -> 00:00:19,079] 我们最后
[00:00:19,079 -> 00:00:20,079] 视频最后
[00:00:20,079 -> 00:00:21,359] 我们刚刚讲了
[00:00:21,359 -> 00:00:22,679] 我们稍微总结一下
[00:00:22,679 -> 00:00:23,960] 我们视频刚刚讲了
[00:00:23,960 -> 00:00:25,920] 算法在我们生活中有什么用
[00:00:25,920 -> 00:00:28,559] 但是它更重要的是用来解决什么样的问题的
[00:00:00,000 -> 00:00:02,839] 它可以提高我们的效率是吧
[00:00:02,839 -> 00:00:04,679] 它可以帮助我们优化
[00:00:04,679 -> 00:00:06,919] 然后它可以把一些东西自动化停起来
[00:00:06,919 -> 00:00:11,279] 让我们去使用更大的力量
[00:00:11,279 -> 00:00:12,400] 比如说算力
[00:00:12,400 -> 00:00:15,279] 那它也有一些很精巧的数学构思在
[00:00:15,279 -> 00:00:16,559] 比如说这个动态对话
[00:00:16,559 -> 00:00:17,960] 就是你如果从后往前的话
[00:00:17,960 -> 00:00:19,679] 就刚才那个例子确实很难解
[00:00:19,679 -> 00:00:20,480] 但是从前往后的话
[00:00:20,480 -> 00:00:21,800] 它就有一个解法
[00:00:21,800 -> 00:00:22,719] 从后往前
[00:00:22,719 -> 00:00:23,800] 从后往前就有解法
[00:00:23,800 -> 00:00:24,399] 对
[00:00:24,399 -> 00:00:25,640] 如果从前往后没有解
[00:00:25,640 -> 00:00:26,879] 从后往前就有解法了
[00:00:26,879 -> 00:00:28,839] 所以说就是这个时候真的有的是
[00:00:00,000 -> 00:00:03,700] 就是学会了算法有的时候真的可以让你的生活变得更简单
[00:00:03,700 -> 00:00:05,799] 或者说这就是一个很好的hack
[00:00:05,799 -> 00:00:08,640] 就是在别人不知道怎么做解决问题的时候
[00:00:08,640 -> 00:00:09,900] 你是有一个很好的解答
[00:00:09,900 -> 00:00:11,300] 你是有一个最好的解答
[00:00:11,300 -> 00:00:16,000] 下回别人要再问你怎么用算法的方法找女朋友找老婆
[00:00:16,000 -> 00:00:18,600] 你也可以装逼的跟他说一说
[00:00:18,600 -> 00:00:20,100] 但是估计没有用
[00:00:20,100 -> 00:00:22,199] 我觉得应该是没什么用
[00:00:22,199 -> 00:00:26,600] 那好这个金城同学在德大的课程叫什么名字
[00:00:26,600 -> 00:00:29,100] 叫做叫做什么
[00:00:00,000 -> 00:00:01,000] 算法通识16讲
[00:00:01,000 -> 00:00:04,500] 对我在得到的课程叫做算法通识16讲
[00:00:04,500 -> 00:00:05,400] 欢迎大家关注
[00:00:05,400 -> 00:00:07,599] 里边都讲了些什么东西
[00:00:07,599 -> 00:00:08,599] 在这个课程里面
[00:00:08,599 -> 00:00:11,000] 我们会讲一些算法是什么
[00:00:11,000 -> 00:00:12,400] 算法关注的东西是什么
[00:00:12,400 -> 00:00:13,599] 怎么理解算法
[00:00:13,599 -> 00:00:17,600] 有那些我们常见的一些算法当中用到的一些思维
[00:00:17,600 -> 00:00:19,399] 然后到最后的时候也会讲一下
[00:00:19,399 -> 00:00:22,500] 机器学习算法有什么特别有意思的地方
[00:00:22,500 -> 00:00:24,199] 哦好的
[00:00:24,199 -> 00:00:26,399] 那大家有如果感兴趣的话
[00:00:26,399 -> 00:00:28,600] 欢迎去subscribe金人同学的课
[00:00:00,000 -> 00:00:02,000] 只要70人民币是吧
[00:00:02,000 -> 00:00:06,099] 两杯奶茶钱就可以去学到这么多高级的算法知识
[00:00:06,099 -> 00:00:07,400] 感谢大家关注
[00:00:07,400 -> 00:00:10,140] 希望大家更多的关注孙逸中的YouTube频道
[00:00:10,140 -> 00:00:11,539] 有本事在你的课里边说呀
