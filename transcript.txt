[00:00:00,000 -> 00:00:02,799] 包括它data culture背后所需求的
[00:00:02,799 -> 00:00:05,299] Mirrortocracy或者说这些A-B Testing
[00:00:05,299 -> 00:00:07,200] 也让Facebook的数据科学家
[00:00:07,200 -> 00:00:09,400] 不会去追求那些fancy的model
[00:00:09,400 -> 00:00:11,599] 而是去提供真正有价值
[00:00:11,599 -> 00:00:14,199] 真正经得起考验的这些data insight
[00:00:14,199 -> 00:00:16,000] 他们不会把时间花在嘴皮子上
[00:00:16,000 -> 00:00:18,399] 而是真的去寻找数据怎么样子
[00:00:18,399 -> 00:00:21,000] 为这个产品和business提供价值的
[00:00:21,000 -> 00:00:22,600] 这点我觉得非常非常的重要
[00:00:22,600 -> 00:00:23,800] Hello 大家好
[00:00:23,800 -> 00:00:26,000] 我现在的工作是在Facebook
[00:00:26,000 -> 00:00:27,399] 作为一名数据科学家
[00:00:00,000 -> 00:00:01,639] 我发现在Facebook
[00:00:01,639 -> 00:00:03,799] 数据科学家的工作非常重要
[00:00:03,799 -> 00:00:05,799] 无论是工作价值
[00:00:05,799 -> 00:00:06,679] 存在感
[00:00:06,679 -> 00:00:07,480] 影响力
[00:00:07,480 -> 00:00:08,240] 话语权
[00:00:08,240 -> 00:00:09,039] 主动性
[00:00:09,039 -> 00:00:10,320] 都非常非常强
[00:00:10,679 -> 00:00:11,839] 可是与此同时
[00:00:11,839 -> 00:00:13,160] 在很多公司
[00:00:13,160 -> 00:00:15,080] Data Scientist感觉自己的工作
[00:00:15,080 -> 00:00:16,359] 发挥不出价值
[00:00:16,359 -> 00:00:18,760] 甚至网上盛行有Data Scientist
[00:00:18,760 -> 00:00:21,440] 是一个可有可无的岗位的这种言论
[00:00:21,440 -> 00:00:22,559] 很多Data Scientist
[00:00:22,559 -> 00:00:24,600] 或者想做Data Scientist的同学
[00:00:24,600 -> 00:00:25,679] 看到这些言论以后
[00:00:26,039 -> 00:00:28,280] 也会对自己的前景产生焦虑
[00:00:00,000 -> 00:00:02,160] 那我们这期视频就来剖析一下
[00:00:02,160 -> 00:00:05,400] 为什么数据科学家在Facebook工作的这么爽
[00:00:05,400 -> 00:00:09,759] 从而帮助大家从一个顶尖互联网企业的应用案例中
[00:00:09,759 -> 00:00:12,880] 来寻找数据科学到底能产生什么样的价值
[00:00:12,880 -> 00:00:15,480] 其实我从亚马逊跳到Facebook的时候
[00:00:15,480 -> 00:00:18,079] 我对这件事情并没有一个完整的认知
[00:00:18,079 -> 00:00:20,039] 但是我那个时候的Mentor就跟我说
[00:00:20,039 -> 00:00:23,359] YZ你要是成为一个有价值的数据科学家的话
[00:00:23,359 -> 00:00:24,440] 你也要小心
[00:00:24,440 -> 00:00:27,399] 就是你的team会feel crippled without you
[00:00:27,399 -> 00:00:29,640] 他当时跟我说这个的意思是
[00:00:00,000 -> 00:00:02,720] 让我尽量多做一些data的education
[00:00:02,720 -> 00:00:05,320] 多enable我的team在没有我的情况下
[00:00:05,320 -> 00:00:06,639] 也可以做一些分析
[00:00:06,639 -> 00:00:08,119] 然后来unblock themself
[00:00:08,119 -> 00:00:09,279] 这一点先放下不说
[00:00:09,400 -> 00:00:10,880] 但是他说的这些话
[00:00:10,880 -> 00:00:12,839] 确实从一个侧面体现了
[00:00:12,839 -> 00:00:14,640] 数据科学家在Facebook
[00:00:14,640 -> 00:00:16,960] 是有一个多么不可或缺的角色的
[00:00:17,359 -> 00:00:19,280] 说到这儿大家可能就好奇
[00:00:19,280 -> 00:00:20,719] 是不是数据科学家
[00:00:20,719 -> 00:00:22,879] 在Facebook做的事情特别不一样
[00:00:22,920 -> 00:00:24,719] 他们到底是做了什么不一样的东西
[00:00:24,719 -> 00:00:26,519] 导致他的角色这么不可或缺
[00:00:26,879 -> 00:00:28,519] 我一开始也是这样想的
[00:00:00,000 -> 00:00:03,839] 但是我后来跟很多公司做数据科学的小伙伴进行了沟通
[00:00:03,839 -> 00:00:06,839] 就问他们数据科学在他们公司做什么
[00:00:06,839 -> 00:00:12,640] 我会发现大家对数据科学能做什么和想做什么这件事情的认知是差不多的
[00:00:12,640 -> 00:00:15,720] 就是大家都是higher数据科学家来做这些事情
[00:00:15,720 -> 00:00:20,359] 可是最后数据科学家真的做了什么事情和理想就会很不一样
[00:00:20,359 -> 00:00:22,839] 我觉得在很多公司想的是这样子
[00:00:22,839 -> 00:00:24,679] 但是它实际是可能在这儿
[00:00:24,679 -> 00:00:26,640] 但是在Facebook就非常接近
[00:00:26,640 -> 00:00:29,679] 它达到了一个数据科学家非常理想的状态
[00:00:00,000 -> 00:00:01,600] 所以这就很有意思了
[00:00:01,600 -> 00:00:05,799] 所以他说明数据科学家在Facebook发挥的作用是一个结果
[00:00:05,799 -> 00:00:06,919] 而不是一个原因
[00:00:06,919 -> 00:00:07,799] 或者换句话说
[00:00:07,799 -> 00:00:09,839] 不是因为小扎比起姐夫
[00:00:09,839 -> 00:00:11,519] 他就是知道数据科学怎么用
[00:00:11,519 -> 00:00:13,919] 所以说他给数据科学安排了很重要的岗位
[00:00:13,919 -> 00:00:15,679] 而一定是Facebook这个公司
[00:00:15,679 -> 00:00:17,000] 它有一些特别的地方
[00:00:17,000 -> 00:00:20,760] 特别适合数据科学家在这里面发挥价值
[00:00:20,760 -> 00:00:23,239] 所以说我们搞清楚这背后的原因的话
[00:00:23,239 -> 00:00:26,000] 我们就可以知道在一些其他的公司
[00:00:26,000 -> 00:00:29,800] 怎么样子让数据科学家们发挥出他们应有的那些价值来
[00:00:00,000 -> 00:00:01,679] 于是想清楚了这个思路
[00:00:01,679 -> 00:00:05,960] 我就从这一方面开始入手去观察总结
[00:00:05,960 -> 00:00:09,800] 包括采访很多Facebook内部的数据科学的大佬
[00:00:09,800 -> 00:00:13,439] 包括有一些人他们是见证了Facebook的数据科学
[00:00:13,439 -> 00:00:15,480] 是怎么从无到有一步一步搭起来的
[00:00:15,480 -> 00:00:19,920] 我也着重采访了一些从别的公司跳来Facebook的数据科学家
[00:00:19,920 -> 00:00:22,559] 和从Facebook跳去别的公司的数据科学家
[00:00:22,559 -> 00:00:24,879] 这样多了解不同公司的差别
[00:00:24,879 -> 00:00:27,280] 就可以帮助我更好的总结这些事情
[00:00:27,280 -> 00:00:29,399] 在采访了这么多人之后
[00:00:00,000 -> 00:00:02,399] 我总结出来了四个大的方面
[00:00:02,399 -> 00:00:05,799] 是可以帮助数据科学家在Facebook发挥更多的价值
[00:00:05,799 -> 00:00:07,599] 然后有更多的成长的
[00:00:07,599 -> 00:00:08,960] 这四个方面分别是
[00:00:08,960 -> 00:00:10,039] Infrastructure
[00:00:10,039 -> 00:00:10,839] 文化
[00:00:10,839 -> 00:00:13,279] 组织结构和公司的业务形态
[00:00:13,279 -> 00:00:14,080] 接下来的视频
[00:00:14,080 -> 00:00:16,600] 我会把这四个方面剖开来分析
[00:00:16,600 -> 00:00:19,879] 我会把每个方面都给分成两个小点
[00:00:19,879 -> 00:00:22,320] 然后我会举一些具体的例子
[00:00:22,320 -> 00:00:24,800] 讲一讲Facebook现在到底是什么样子的
[00:00:24,800 -> 00:00:25,839] 我也会分析一下
[00:00:25,839 -> 00:00:29,000] 为什么他的这件事情非常有利于数据科学家
[00:00:00,000 -> 00:00:03,080] 去发挥自己的影响力和数据科学家的成长
[00:00:03,080 -> 00:00:05,599] 那好我们就从infrastructure开始吧
[00:00:05,599 -> 00:00:09,000] infrastructure好是可以极大提升数据科学家
[00:00:09,000 -> 00:00:12,839] 能做的事情的范围和提高数据科学家的效率的
[00:00:12,839 -> 00:00:14,279] 在这儿我分成两点
[00:00:14,279 -> 00:00:17,160] 一个是他的这个data pipeline的这一些
[00:00:17,160 -> 00:00:20,280] 另外一些是他的analytical tools这一些
[00:00:20,280 -> 00:00:24,120] 所谓data pipeline所谓infrastructure在data pipeline这一步
[00:00:24,120 -> 00:00:28,120] 是在Facebook大家的login做的还是非常非常全的
[00:00:00,000 -> 00:00:03,399] 所以你能想象的用户在Facebook上产生了各种行为
[00:00:03,399 -> 00:00:05,440] 它在隐私的requirement之下
[00:00:05,440 -> 00:00:08,000] 都是被非常好的给log了起来
[00:00:08,000 -> 00:00:12,480] 而更关键的是我们的Data Engineering work非常强
[00:00:12,480 -> 00:00:17,480] 所以Facebook一直是在用业界非常领先的大数据工具去管理这些东西的
[00:00:17,480 -> 00:00:20,679] 比如说我们Hive table很久以前就在用了
[00:00:20,679 -> 00:00:22,760] 然后我们的Query现在主要是用Pristal
[00:00:22,760 -> 00:00:24,760] 但是还有一些更快的东西来
[00:00:24,760 -> 00:00:27,399] 比如说Facebook有一个专门的Scoop by Table
[00:00:27,399 -> 00:00:29,000] 我这也会放一个link
[00:00:00,000 -> 00:00:03,060] 就是你可以在一个pb级的数据里面
[00:00:03,060 -> 00:00:06,360] real time去得到你去达到你想要的一些数据
[00:00:06,360 -> 00:00:08,519] 在这里面当然就是有一些join是不能做的
[00:00:08,519 -> 00:00:11,320] 但是你可以想就是如果你写一个sql query
[00:00:11,320 -> 00:00:12,880] 然后你只要group by
[00:00:12,880 -> 00:00:14,480] 然后或者说你只需要filter
[00:00:14,480 -> 00:00:16,039] 但是你不需要join的function
[00:00:16,039 -> 00:00:18,600] 那在一个pb级的这个数据
[00:00:18,600 -> 00:00:20,879] 你可以得到一个real time的数据
[00:00:20,879 -> 00:00:24,079] 而且这个东西是几秒钟就可以把这个数据给拿出来
[00:00:24,079 -> 00:00:25,440] 在遇到这些工具之前
[00:00:25,440 -> 00:00:26,920] 我根本就不能想象天啊
[00:00:26,920 -> 00:00:29,160] 这么大的数据竟然还可以这么快的就可以得到
[00:00:00,000 -> 00:00:02,779] 在这之上我们的data pipeline也做得非常好
[00:00:02,799 -> 00:00:04,219] data的管理也做得非常好
[00:00:04,240 -> 00:00:06,120] 比如说你能看到什么data
[00:00:06,120 -> 00:00:07,179] 你不能看到什么data
[00:00:07,200 -> 00:00:08,800] 你要看到一些其他的data
[00:00:08,800 -> 00:00:10,240] 你要申请什么权限
[00:00:10,400 -> 00:00:12,080] 这些东西都非常清楚
[00:00:12,080 -> 00:00:14,560] 所以你想要分析的数据只要它存在
[00:00:14,560 -> 00:00:17,559] 而且policy允许你拿到的话
[00:00:17,559 -> 00:00:20,320] 你很快就可以得到这些数据来进行分析
[00:00:20,320 -> 00:00:22,079] 而且他们lock的是非常干净的
[00:00:22,079 -> 00:00:24,199] 很多数据的质量也都是非常高的
[00:00:24,199 -> 00:00:27,600] 这个和我见到了其他公司都有非常大的区别
[00:00:00,000 -> 00:00:02,399] 我知道很多小伙伴在其他的公司
[00:00:02,399 -> 00:00:03,600] 他们想做一个分析
[00:00:03,600 -> 00:00:05,879] 可能80% 90%的时间
[00:00:05,879 -> 00:00:08,720] 都花在清理数据和捞出来
[00:00:08,720 -> 00:00:10,080] 自己想要的数据上了
[00:00:10,080 -> 00:00:13,439] 如果你想要跨部门的去拿数据
[00:00:13,439 -> 00:00:15,080] 很多时候就更加难
[00:00:15,080 -> 00:00:18,079] 甚至是一个不可能的工作
[00:00:18,079 -> 00:00:20,760] 这些烦恼在Facebook基本上都是没有的
[00:00:20,760 -> 00:00:23,679] 那是省下来的80% 90%的时间
[00:00:23,679 -> 00:00:25,960] 你就可以去做更有效的铲除
[00:00:25,960 -> 00:00:27,440] 那接下来第二点就是
[00:00:00,000 -> 00:00:04,080] 这个背后的analytics tools发展的也非常完善
[00:00:04,120 -> 00:00:05,799] 所以说你在写query
[00:00:06,240 -> 00:00:08,359] 包括这些query的version管理
[00:00:08,759 -> 00:00:12,320] 包括你可以去随时随地的去看任何一个人
[00:00:12,320 -> 00:00:14,080] 他之前写过的query
[00:00:14,240 -> 00:00:15,800] 然后这些query写出来了以后
[00:00:15,919 -> 00:00:19,199] 你就可以通过一些图形界面去把它形成dashboard
[00:00:19,239 -> 00:00:21,120] 然后还可以直接发表在一些地方
[00:00:21,239 -> 00:00:22,519] 而且在这过程中
[00:00:22,519 -> 00:00:25,679] 你还可以跟我们内部的这种python notebook进行连接
[00:00:25,719 -> 00:00:27,480] 大家都可以非常方便的搜索
[00:00:27,480 -> 00:00:29,079] 不光是搜索自己的工作
[00:00:00,000 -> 00:00:05,200] 也可以搜索其他人的工作发表或者说是协作都很方便
[00:00:05,240 -> 00:00:07,400] 所以我比如说刚进组的时候
[00:00:07,400 -> 00:00:10,279] 我对组内的数据很不清楚
[00:00:10,320 -> 00:00:14,320] 我就直接去看一下我那些在组里待的时间久的同事
[00:00:14,359 -> 00:00:15,880] 他们写的query是怎么写的
[00:00:15,919 -> 00:00:18,320] 然后我再去看一下我们组里的那些dashboard
[00:00:18,320 -> 00:00:21,000] 这些dashboard都是被定义verified data
[00:00:21,039 -> 00:00:24,000] 我看一下他们dashboard背后的query都是什么样子
[00:00:24,039 -> 00:00:26,719] 很快的就对我们组需要用什么样的数据
[00:00:26,719 -> 00:00:27,320] 从哪给我
[00:00:27,320 -> 00:00:28,719] 然后需要加什么条件
[00:00:00,000 -> 00:00:01,280] 有了一个初步的理解
[00:00:01,280 -> 00:00:03,839] 更重要的是Facebook的A B testing
[00:00:03,839 -> 00:00:06,960] 背后的实验analytical structure
[00:00:06,960 -> 00:00:09,359] 也是一个非常完善的界面
[00:00:09,359 -> 00:00:13,039] 这个地方我觉得需要单独开一期视频
[00:00:13,039 -> 00:00:14,359] 去deep dive一下
[00:00:14,359 -> 00:00:16,239] 在这我就不详细阐述了
[00:00:16,239 -> 00:00:19,280] 就是他的在Facebook做A B testing
[00:00:19,280 -> 00:00:20,719] engineer直接就可以做
[00:00:20,719 -> 00:00:23,320] 然后这个工具就可以告诉他
[00:00:23,320 -> 00:00:25,039] 你需要track什么的数据
[00:00:25,039 -> 00:00:27,600] 你需要有什么数据来做你的guardrail
[00:00:27,600 -> 00:00:29,719] 然后有什么数据是component critical
[00:00:00,000 -> 00:00:05,320] 你在这个时候做的时候你需要把它expose to多少人
[00:00:05,320 -> 00:00:07,320] 你现在的exposure是不是够的
[00:00:07,320 -> 00:00:09,320] 如果你想要得到statistic的数据
[00:00:09,320 -> 00:00:11,400] 你需要再增加多少exposure
[00:00:11,400 -> 00:00:14,640] 你今天的这个结果是不是significant的
[00:00:14,640 -> 00:00:17,719] 你的decision到底应该是什么等等
[00:00:17,719 -> 00:00:19,879] 总而言之这些工具的存在
[00:00:19,879 -> 00:00:23,160] 是让数据科学家那些可重复的工作
[00:00:23,160 -> 00:00:25,079] 很容易的就可以自动化
[00:00:25,079 -> 00:00:26,960] 不管是你data visualization也好
[00:00:26,960 -> 00:00:28,879] 不管是你做实验也好
[00:00:00,000 -> 00:00:01,480] 不管是你做分析也好
[00:00:01,480 -> 00:00:05,000] 只要这件事情是应该被自动化的
[00:00:05,000 -> 00:00:06,280] 基本上都能自动化
[00:00:06,280 -> 00:00:09,480] 同时它也可以让非数据科学家
[00:00:09,480 -> 00:00:10,679] 比如说PM
[00:00:10,679 -> 00:00:11,839] 比如说designer
[00:00:11,839 -> 00:00:12,960] 比如说engineer
[00:00:12,960 -> 00:00:16,559] 他们自己就可以去做很多简单的数据分析
[00:00:16,559 -> 00:00:21,000] 那就可以让数据科学家从反锁和重复的劳动中解放出来
[00:00:21,000 -> 00:00:23,760] 你不再需要说engineer今天过来跟你说
[00:00:23,760 -> 00:00:24,719] 请帮我看一个数
[00:00:24,719 -> 00:00:26,039] PM过来跟你说
[00:00:26,039 -> 00:00:27,079] 请帮我看个数
[00:00:27,079 -> 00:00:28,760] 这些需求一般都被dashboard
[00:00:00,000 -> 00:00:02,799] 或者说他们自己写一些简单的query去解决了
[00:00:03,399 -> 00:00:06,160] 数据科学家这个时候就可以把更多的时间
[00:00:06,160 -> 00:00:09,640] 发挥在战略上或者说发挥在一些数据科学家
[00:00:10,000 -> 00:00:12,800] 本身非常有定可以提供的高价值工作上
[00:00:12,800 -> 00:00:15,119] 所以总结一下infrastructure好
[00:00:15,119 -> 00:00:18,079] 一方面可以节省数据科学家的很多时间
[00:00:18,079 -> 00:00:20,679] 极大的提高数据科学家工作的效率
[00:00:20,679 -> 00:00:22,960] 另外一方面也可以让数据科学家
[00:00:22,960 -> 00:00:25,600] 把时间花在那些更高价值的工作上
[00:00:25,600 -> 00:00:28,280] 第二部分是文化就是数据文化
[00:00:00,000 -> 00:00:02,200] 其实我觉得一个好的数据文化
[00:00:02,200 -> 00:00:04,799] 其实是一个好的工程师文化
[00:00:04,799 -> 00:00:07,719] 加上一个好的Mirrortocracy文化
[00:00:07,719 -> 00:00:08,839] 综合的产物
[00:00:08,839 -> 00:00:12,759] 就是你工程师文化可以让工程师们非常有自主权
[00:00:12,759 -> 00:00:15,919] 所以说你的他做事情非常灵活
[00:00:15,919 -> 00:00:18,039] 但是他要往哪方面做
[00:00:18,039 -> 00:00:20,879] 这个时候就很需要data来告诉他往哪方面做
[00:00:20,879 -> 00:00:25,120] 那Mirrortocracy的文化就是我们要measure你的outcome
[00:00:25,120 -> 00:00:26,079] 而不是你的income
[00:00:26,079 -> 00:00:28,760] 不是来measure你每天打卡上了多少包
[00:00:00,000 -> 00:00:01,280] 你shipped多少code
[00:00:01,280 -> 00:00:03,720] 而是你到底产生了多少impact
[00:00:03,720 -> 00:00:05,240] 为了measure impact
[00:00:05,639 -> 00:00:06,839] 我们又搭建了很多
[00:00:07,040 -> 00:00:08,480] A B testing的infrastructure
[00:00:08,480 -> 00:00:09,720] 我之前有一篇文章
[00:00:09,720 -> 00:00:11,119] 就是说A B testing
[00:00:11,119 -> 00:00:12,400] 为什么导致Facebook加班多
[00:00:12,720 -> 00:00:14,160] 因为你A B testing了以后
[00:00:14,160 -> 00:00:15,439] 很多你做出来的成果
[00:00:15,439 -> 00:00:16,800] 是完全可以measureable的
[00:00:17,120 -> 00:00:18,679] 大家在竞争环境中
[00:00:18,679 -> 00:00:20,559] 就会去自主的去push
[00:00:20,559 -> 00:00:21,920] 去做更多的东西
[00:00:23,039 -> 00:00:24,879] 拥有这个mirrorocracy之后
[00:00:24,879 -> 00:00:26,920] 你data scientist在这中间
[00:00:26,920 -> 00:00:28,879] 可以提供一个neutral voice
[00:00:00,000 -> 00:00:02,759] 来说这个产品到底是好还是不好
[00:00:02,759 -> 00:00:05,160] 我们也会综合很多方面的东西来考虑
[00:00:05,160 -> 00:00:07,679] 比如说你在一个页面加一个button
[00:00:07,679 -> 00:00:10,880] 加这个button可能会让你的feature的使用率变高
[00:00:10,880 -> 00:00:12,439] 你可能就想shape它
[00:00:12,439 -> 00:00:13,880] 但是我们作为data scientist
[00:00:13,880 -> 00:00:15,519] 我们就会考虑说加了这个button
[00:00:15,519 -> 00:00:17,079] 会不会影响其他的东西
[00:00:17,079 -> 00:00:19,440] 或者会不会符合一个design principle
[00:00:19,440 -> 00:00:21,519] 而最后去做出一个综合的取舍
[00:00:21,519 -> 00:00:25,079] 最后其实data scientist对产品能不能launch
[00:00:25,079 -> 00:00:26,519] 是有一个final say的
[00:00:26,519 -> 00:00:29,079] 我在Facebook看到绝大多数的产品
[00:00:00,000 -> 00:00:03,080] 都是start with data and ends with data
[00:00:03,080 -> 00:00:04,160] 什么意思呢
[00:00:04,160 -> 00:00:07,599] 就是data scientist在一开始会去做一些analysis
[00:00:07,599 -> 00:00:10,279] 是说我们组的工作是这样子
[00:00:10,279 -> 00:00:14,599] 然后我觉得在哪些领域是我们接下来的growth opportunity
[00:00:14,599 -> 00:00:16,239] 或者是我们没有做好的地方
[00:00:16,239 -> 00:00:18,000] 然后我们所有的这些工作呢
[00:00:18,000 -> 00:00:20,039] 优先级是这样这样这样ABC
[00:00:20,039 -> 00:00:22,440] 我们的要达到什么样的goal
[00:00:22,440 -> 00:00:24,920] 这个goal会被什么样的metrics来measure
[00:00:24,920 -> 00:00:26,640] 所以说你们的所有的实验
[00:00:26,640 -> 00:00:29,440] 都应该想方设法的去提高这个metrics
[00:00:00,000 -> 00:00:03,399] 那在engineer们做了这些实验之后
[00:00:03,399 -> 00:00:05,000] 他们有各种各样的结果
[00:00:05,000 -> 00:00:08,160] 那最后在这个experiment review上
[00:00:08,160 -> 00:00:10,400] data scientist也是有一个final say的
[00:00:10,400 -> 00:00:13,679] 就是engineer会把他们做的比较好的实验拿上来
[00:00:13,679 -> 00:00:16,320] 然后说我觉得这个实验应该launch
[00:00:16,320 -> 00:00:18,640] data scientist这时候做一个决定说
[00:00:18,640 -> 00:00:19,600] 我同意你的想法
[00:00:19,600 -> 00:00:21,120] 这个东西可以launch或者说
[00:00:21,120 -> 00:00:22,839] 虽然你看到的这个结果好
[00:00:22,839 -> 00:00:24,440] 但是我有如下的concern
[00:00:24,440 -> 00:00:26,839] 我们是不是还要继续做一些其他的改进
[00:00:26,839 -> 00:00:28,920] 或者说我们这个东西就不应该launch
[00:00:00,000 -> 00:00:02,359] data scientist在这里边天生就有final say
[00:00:02,399 -> 00:00:03,839] 在很少的情况下
[00:00:03,879 -> 00:00:06,519] 如果data scientist说这个东西不应该launch
[00:00:06,559 -> 00:00:08,880] 然后engineer说这个东西应该launch
[00:00:08,919 -> 00:00:11,560] 那这个escalation很多时候都是要VP那个level
[00:00:11,599 -> 00:00:13,119] VP看得比较高看得比较远
[00:00:13,279 -> 00:00:15,759] 可能这个时候也有很多data scientist
[00:00:15,759 -> 00:00:16,640] 没有想到的事情
[00:00:16,640 -> 00:00:18,800] 然后VP他根据自己的
[00:00:20,000 -> 00:00:21,920] VP他根据自己对这个东西的理解
[00:00:21,920 -> 00:00:23,359] 他会做出一个决定来
[00:00:23,559 -> 00:00:24,640] 在这种情况下
[00:00:24,640 -> 00:00:27,199] data scientist的话语权真的是非常大
[00:00:27,199 -> 00:00:29,320] 对产品真的是非常有影响力
[00:00:00,000 -> 00:00:02,419] 让大家的工作的成就感也非常高
[00:00:02,419 -> 00:00:03,620] 大家平时生活中也有
[00:00:03,620 -> 00:00:05,259] 如果一个人来找你给建议
[00:00:05,259 -> 00:00:06,700] 哪怕你给的建议在对
[00:00:06,700 -> 00:00:08,699] 他可能也不跟着你的建议走
[00:00:08,699 -> 00:00:10,019] 而是去做了一件别的事情
[00:00:10,019 -> 00:00:11,140] 事情时间多了
[00:00:11,140 -> 00:00:12,820] 你就没有什么动力去提建议了
[00:00:12,820 -> 00:00:14,580] 但是别人找你问建议
[00:00:14,580 -> 00:00:15,419] 你给他说了一个建议
[00:00:15,419 -> 00:00:16,379] 他马上就照做
[00:00:16,379 -> 00:00:19,019] 那你就特别有动力去提出一个更好的建议
[00:00:19,019 -> 00:00:21,140] 在Facebook就是后面这种情况
[00:00:21,140 -> 00:00:23,260] 你提的建议基本上都会被采纳
[00:00:23,260 -> 00:00:24,699] 所以说工作动力也非常足
[00:00:24,699 -> 00:00:25,820] 那culture的第二部分
[00:00:25,820 -> 00:00:27,300] 我觉得是一个副产物
[00:00:27,300 -> 00:00:29,699] 就是AB testing这么多的情况下
[00:00:00,000 -> 00:00:02,000] 我们不光会看这个产品好不好
[00:00:02,000 -> 00:00:04,160] 我们也会做很多learning test
[00:00:04,160 -> 00:00:05,519] 这些learning test
[00:00:05,519 -> 00:00:09,519] 很多时候也都是可以用AB testing的方式来做的
[00:00:09,519 -> 00:00:12,919] 甚至我们有的时候会sacrifice一些短期的用户体验
[00:00:12,919 -> 00:00:14,439] 来去做learning test
[00:00:14,439 -> 00:00:17,000] 去看一下这些用户体验到底有多么的重要
[00:00:17,000 -> 00:00:19,160] 比如说我们做了一个非常赚钱的产品
[00:00:19,160 -> 00:00:21,280] 有的时候也会专门拿出来一些用户
[00:00:21,280 -> 00:00:23,280] 让他们看不到很赚钱的产品
[00:00:23,280 -> 00:00:25,640] 我们就会看到很赚钱的产品
[00:00:25,640 -> 00:00:28,199] 它在长期对用户的影响到底是什么
[00:00:00,000 -> 00:00:04,900] 大家都知道就是这种基于randomized control trial的data
[00:00:04,900 -> 00:00:08,400] 是所有data所有analytics的gold standard
[00:00:08,400 -> 00:00:09,859] 只要你的实验设计合理
[00:00:09,859 -> 00:00:12,419] 你看到这个数据你就会被这个数据信服
[00:00:12,419 -> 00:00:15,259] 但是你如果是用一个模型跑出来的结果
[00:00:15,259 -> 00:00:18,940] 很多时候这个模型的结果未必那么可信
[00:00:18,940 -> 00:00:22,699] 所以说在Facebook分析的结果是非常convincing的
[00:00:22,699 -> 00:00:25,260] 这个时候不光是对你的合作方convincing
[00:00:25,260 -> 00:00:27,420] 对data scientist自己也非常convincing
[00:00:00,000 -> 00:00:02,600] 就是当我看到了这样一个数据的结果
[00:00:02,600 -> 00:00:04,320] 我知道我的实验是设计对的
[00:00:04,320 -> 00:00:06,280] 我就直接相信了这个数据的结果
[00:00:06,280 -> 00:00:07,559] versus我在很多公司
[00:00:07,559 -> 00:00:09,359] 如果我用模型跑出来这个结果
[00:00:09,359 -> 00:00:10,679] 我可能第一反应是
[00:00:10,679 -> 00:00:12,240] 我的模型是不是哪里有问题
[00:00:12,240 -> 00:00:13,359] 我的假设是不是不成立
[00:00:13,359 -> 00:00:15,279] 或者说我的哪些条件是不是不满足
[00:00:15,279 -> 00:00:17,679] 所以在Facebook这种实验做多了
[00:00:17,679 -> 00:00:19,839] 然后你对business go了解了以后
[00:00:19,839 -> 00:00:23,239] 你对自己的分析也会非常有信心
[00:00:23,239 -> 00:00:24,320] 而且在这过程中
[00:00:24,320 -> 00:00:27,239] 你会极大的提升客人对这个数据
[00:00:27,239 -> 00:00:29,160] 和对整个business的感知
[00:00:00,000 -> 00:00:03,459] 也就是说你能很快的找到指标矛盾和次要矛盾
[00:00:03,459 -> 00:00:06,040] 我现在比如说我在这做电商
[00:00:06,040 -> 00:00:09,359] 我就大概知道比如说我增加了一些卖家
[00:00:09,359 -> 00:00:10,539] 增加了一些inventory
[00:00:10,539 -> 00:00:12,099] 它会增加多少的transaction
[00:00:12,099 -> 00:00:14,359] 比如说我的listing多上了几个图片
[00:00:14,359 -> 00:00:16,239] 它对我的conversion rate有什么样的影响
[00:00:16,239 -> 00:00:19,960] 这些都是经过完善实验设计的causal results
[00:00:19,960 -> 00:00:23,039] 这种认知是你在别的地方很难得到的
[00:00:23,039 -> 00:00:25,000] 你要知道像我们economics journal
[00:00:25,000 -> 00:00:28,300] 如果你有任何的这种natural experiment或者causal data
[00:00:28,300 -> 00:00:29,440] 你都可以发一个顶刊
[00:00:00,000 -> 00:00:02,319] 那这样的实验在Facebook天天都在发生
[00:00:02,319 -> 00:00:05,000] 真的是一个非常奢侈的体验
[00:00:05,000 -> 00:00:07,000] 第三部分就是组织结构
[00:00:07,000 -> 00:00:11,880] 组织结构保证了数据科学家的独立性中立性
[00:00:11,880 -> 00:00:15,160] 然后它也保证了数据科学家
[00:00:15,160 -> 00:00:17,199] 既对产品有很大的影响力
[00:00:17,199 -> 00:00:20,879] 又能从自己专业这边得到上级的支持
[00:00:20,879 -> 00:00:24,160] 而且它会让数据科学家的工作非常有visibility
[00:00:24,160 -> 00:00:26,000] 这我还是拆成两点来说
[00:00:26,000 -> 00:00:29,039] 第一个是Data Scientist在Facebook的汇报关系
[00:00:00,000 -> 00:00:03,640] 它就是一个embedded加centralized的这样一个组织结构
[00:00:03,640 -> 00:00:07,120] embedded就是说你会embedded到一个product上
[00:00:07,120 -> 00:00:09,160] 这一个product比如说对于我来说
[00:00:09,160 -> 00:00:12,480] 就是marketplace它的seller的一些东西
[00:00:12,480 -> 00:00:16,079] 就是是我这个data scientist来负责
[00:00:16,079 -> 00:00:17,519] 我有对应的engineer
[00:00:17,519 -> 00:00:21,359] 有对应的PM designer和一些其他的cross functional team的partner
[00:00:21,359 -> 00:00:23,800] 但是我就负责这一块业务
[00:00:23,800 -> 00:00:27,519] 那我的汇报关系又是一个centralized汇报关系
[00:00:00,000 -> 00:00:02,960] 就是我的老板的老板的老板的老板
[00:00:02,960 -> 00:00:07,599] 就是我的老板的老板的老板的老板的老板
[00:00:07,599 -> 00:00:09,560] 都是数据科学家
[00:00:09,560 -> 00:00:11,919] 他们只有在Facebook app老大这一级
[00:00:11,919 -> 00:00:13,800] 就是Facebook不是分Instagram
[00:00:13,800 -> 00:00:14,599] WhatsApp什么的吗
[00:00:14,599 -> 00:00:16,640] Facebook老大是一个很大的leader
[00:00:16,640 -> 00:00:19,000] 他只有在这一级才和其他的比如说
[00:00:19,000 -> 00:00:21,480] engineering啊designer啊PM啊
[00:00:21,480 -> 00:00:24,199] 这个汇报条件融合到了一起
[00:00:24,199 -> 00:00:25,879] 但是在其他的很多公司呢
[00:00:25,879 -> 00:00:28,719] 一般是在一个director或者说senior manager
[00:00:00,000 -> 00:00:03,399] 或者说是一个GM的这个层次就汇报到一起了
[00:00:03,399 -> 00:00:05,839] 这个centralized的汇报关系有一个什么好处呢
[00:00:05,839 -> 00:00:08,359] 就是可以保证你的voice是中立的
[00:00:08,359 -> 00:00:13,199] 你的工作好坏是由你这个DS条件的人来决定
[00:00:13,199 -> 00:00:15,519] 那DS条件的人决定你的工作好坏
[00:00:15,519 -> 00:00:18,399] 就是说你的insight是不是正确
[00:00:18,399 -> 00:00:21,000] 你提供的这个recommendation是不是正确
[00:00:21,000 -> 00:00:26,160] 而不是你提供的这个insight是不是你产品想要的
[00:00:26,160 -> 00:00:28,559] 就比如说我看到一个产品
[00:00:00,000 -> 00:00:02,240] 我看到了一些数据有好的有坏的
[00:00:02,480 -> 00:00:04,839] 如果说我的汇报关系是这个产品的老大
[00:00:05,240 -> 00:00:07,799] 我的老板是最后是汇报给这个产品的老大
[00:00:08,080 -> 00:00:09,480] 我到最后可能只能说好的
[00:00:09,480 -> 00:00:10,599] 我没有办法说坏的
[00:00:10,960 -> 00:00:13,000] 但是如果我的汇报关系
[00:00:13,000 -> 00:00:15,679] 我的老大是这个DS老大
[00:00:15,679 -> 00:00:17,640] 我这个时候好的坏的都可以说
[00:00:17,640 -> 00:00:20,120] 我做出来的推荐也可以更加独立专业
[00:00:20,120 -> 00:00:21,920] 那如果产品对我的分析有意义
[00:00:22,160 -> 00:00:26,239] 我可以跟他一直asked到我的VP那个级别才会说
[00:00:00,000 -> 00:00:03,839] 哦就是那我们用authority来决定大家听谁的不听谁的
[00:00:03,839 -> 00:00:06,080] versus如果说Sales Manager的话
[00:00:06,080 -> 00:00:09,000] 那个Sales Manager可能就可以用一个authority来跟我说
[00:00:09,000 -> 00:00:12,160] 哦我们听这个产品的而不是听数据科学家的
[00:00:12,160 -> 00:00:14,160] 所以说它保证了我们独立性
[00:00:14,160 -> 00:00:16,079] 保证了我们专业性保证了我们中立性
[00:00:16,079 -> 00:00:18,719] 你工作的时候就可以更多的说对的事情
[00:00:18,719 -> 00:00:20,399] 没有那么多political concern
[00:00:20,399 -> 00:00:22,960] 也不用去做那些粉饰太平或者说vanity
[00:00:22,960 -> 00:00:24,359] 就是听起来很好
[00:00:24,359 -> 00:00:26,120] 但是实际没有什么用的analysis
[00:00:26,120 -> 00:00:28,160] 那自主性也是非常好的
[00:00:00,000 -> 00:00:04,719] 那embedded这个又可以保证你对这个product非常理解
[00:00:04,719 -> 00:00:08,919] 你其实虽然说我们是专业的有独立的自主的
[00:00:08,919 -> 00:00:11,519] 但是我们其实非常invested in the product
[00:00:11,519 -> 00:00:14,800] 我们会去想方设法的去做什么样的东西
[00:00:14,800 -> 00:00:18,079] 对这个product或者是对整个org是最好的
[00:00:18,079 -> 00:00:22,320] 那你对这个product了解让你置身其中而不是置身事外
[00:00:22,320 -> 00:00:26,039] 那可以让你的建议也更有product sense
[00:00:26,039 -> 00:00:27,879] 所以这里边是一个平衡
[00:00:00,000 -> 00:00:03,480] 但是我觉得这种central加invited的平衡就平衡很好
[00:00:03,480 -> 00:00:06,519] 就既能让你很好的去support这个product
[00:00:06,519 -> 00:00:11,800] 但是又能让你作为一个裁判员的身份去如实的反馈
[00:00:11,800 -> 00:00:13,599] 这个product到底是做的好还是不好
[00:00:13,599 -> 00:00:17,000] 那第二点其实又是Facebook一个非常unique的东西
[00:00:17,000 -> 00:00:19,719] 就是Facebook它我刚刚说了
[00:00:19,719 -> 00:00:21,960] 就是我楼上顶上有那么多层老板
[00:00:21,960 -> 00:00:25,079] 所以说Facebook的汇报层级并不扁平
[00:00:25,079 -> 00:00:27,719] 但是Facebook的信息流动非常的扁平
[00:00:00,000 -> 00:00:04,240] 所以让data scientist的analysis visibility都非常高
[00:00:04,240 -> 00:00:07,040] 我有自信说我的analysis做得好的话
[00:00:07,040 -> 00:00:08,320] 大佬们都能看得见
[00:00:08,320 -> 00:00:09,439] 这是为什么呢
[00:00:09,439 -> 00:00:12,839] 这个是邹星同学他总结出来的
[00:00:12,839 -> 00:00:13,839] 我觉得他总结的非常对
[00:00:13,839 -> 00:00:14,560] 我就在这用了
[00:00:14,560 -> 00:00:17,839] Facebook内部有一个工具叫workplace
[00:00:17,839 -> 00:00:20,960] 它其实就像是一个内部的Facebook
[00:00:20,960 -> 00:00:23,920] 你在上面会有你的所有的同事关系
[00:00:23,920 -> 00:00:26,640] 你也可以选择去follow谁加什么样的group
[00:00:26,640 -> 00:00:29,559] 你的信息来源就是来自于这个workplace
[00:00:00,000 -> 00:00:03,720] 你的这个信息在这个feed上也是像Facebook一样
[00:00:03,720 -> 00:00:06,639] 用一个newsfeed的这种形式去organize的
[00:00:06,639 -> 00:00:08,439] 并且不是完全按照时间排序的
[00:00:08,439 -> 00:00:10,800] 而是用他认为的relevance来排序
[00:00:10,800 -> 00:00:13,199] 这个时候一个数据科学家
[00:00:13,199 -> 00:00:15,359] 如果他做了一个很好的analysis
[00:00:15,359 -> 00:00:16,640] 他要么是用一个post
[00:00:16,640 -> 00:00:18,359] 要么是用一个notes的形式发表
[00:00:18,359 -> 00:00:22,920] 但是这个就会显示在很多人的feed里边
[00:00:22,920 -> 00:00:24,000] 这个时候你在下面去
[00:00:24,000 -> 00:00:26,160] 爱提一些你认为应该看到的人
[00:00:26,160 -> 00:00:27,399] 你老板看到了以后
[00:00:27,399 -> 00:00:29,679] 爱提一些他认为应该看到的人
[00:00:00,000 -> 00:00:02,279] 那大家可能还会share到不同的group里
[00:00:02,319 -> 00:00:05,000] 然后其他的人比如说我写了一个东西
[00:00:05,040 -> 00:00:08,599] 然后隔壁组的一个做这个seller support的VP他看到了
[00:00:08,640 -> 00:00:10,199] 他觉得这个东西写的挺好的
[00:00:10,240 -> 00:00:12,839] 他就会去IT一些他汇报给他
[00:00:12,839 -> 00:00:15,400] 或者说他合作的人去一起看一下
[00:00:15,759 -> 00:00:17,000] 一起读一下这个notes
[00:00:17,160 -> 00:00:20,960] 所以如果说在一个email交流为主的团队
[00:00:21,280 -> 00:00:23,039] 我要写一个analysis
[00:00:23,039 -> 00:00:24,640] 我要发email可能停
[00:00:24,640 -> 00:00:27,879] 可能发到我的skip manager之下的人就停了
[00:00:00,000 -> 00:00:03,200] 但是在Facebook我发了以后首先它是public
[00:00:03,200 -> 00:00:07,160] 而且有的时候我觉得做的好的analytics天生大家就喜欢读
[00:00:07,160 -> 00:00:10,320] 所以说它在这个feed上就会被bump的很高
[00:00:10,320 -> 00:00:13,800] 而且大家会这样at了以后就会有很多人来读
[00:00:13,800 -> 00:00:17,480] 你做了一个工作 visibility是非常强的
[00:00:17,480 -> 00:00:19,519] 大家也都知道你的存在
[00:00:19,519 -> 00:00:20,760] 大家认可你的能力
[00:00:20,760 -> 00:00:25,039] 这个时候也会给analytics增加很多工作的动力
[00:00:25,039 -> 00:00:25,719] 好了
[00:00:25,719 -> 00:00:28,640] 所以回头总结一下就是这个组织的架构
[00:00:00,000 -> 00:00:03,640] 可以让analytics既invested in the product
[00:00:03,640 -> 00:00:07,879] 就既可以build up很多product sense和给product很多建议
[00:00:07,879 -> 00:00:11,800] 同时又能保证自己的独立专业和自主
[00:00:11,800 -> 00:00:15,960] 再另外就是这个workplace非常unique的环境
[00:00:15,960 -> 00:00:20,199] 可以让analytics的工作visibility变得非常高
[00:00:20,199 -> 00:00:23,719] 那也是可以让大家的工作变得非常爽的
[00:00:23,719 -> 00:00:25,359] 最后一个我就不多说了
[00:00:25,359 -> 00:00:27,679] 它也不全是Facebook独有的
[00:00:00,000 -> 00:00:02,879] 但是Facebook的商业模式和它的体量
[00:00:02,879 -> 00:00:06,280] 特别适合数据科学家在这里面发挥作用
[00:00:06,280 -> 00:00:10,880] 其实包括我们为什么背后的大数据的工具这么好用
[00:00:10,880 -> 00:00:14,919] 是因为比如说Facebook要做Session Level的Optimization
[00:00:14,919 -> 00:00:17,679] 然后要做个人化的广告推荐
[00:00:17,679 -> 00:00:19,640] 在不同地方做个人化的广告推荐
[00:00:19,640 -> 00:00:21,399] 这个数据量是非常大的
[00:00:21,399 -> 00:00:25,519] 当Facebook为了这样的一套商业模式去Build up一个Tool
[00:00:25,519 -> 00:00:27,600] 它在用来分析电商的数据
[00:00:00,000 -> 00:00:03,680] 很多时候就是杀鸡用牛刀了
[00:00:03,680 -> 00:00:04,799] 就分析的非常爽
[00:00:04,799 -> 00:00:05,879] 你一个query点一下
[00:00:05,879 -> 00:00:07,280] 基本上就可以出结果
[00:00:07,280 -> 00:00:10,320] 因为那个query背后的机器
[00:00:10,320 -> 00:00:12,839] 是为了100倍于你的数据而准备的
[00:00:12,839 -> 00:00:15,480] 同样产品是免费的
[00:00:15,480 -> 00:00:17,679] 也允许你去做很多的learning test
[00:00:17,679 -> 00:00:20,079] 如果你一上来就是一个电商的产品
[00:00:20,079 -> 00:00:22,239] 可能像Shopify这样子
[00:00:22,239 -> 00:00:23,399] 或者像亚马逊这样子
[00:00:23,399 -> 00:00:24,800] 就很难去做那些testing
[00:00:24,800 -> 00:00:26,320] 以上四方面就是说
[00:00:26,320 -> 00:00:29,000] 为什么Facebook是数据科学家的天堂
[00:00:00,000 -> 00:00:02,200] 一方面是infrastructure好
[00:00:02,200 -> 00:00:05,280] 所以说可以极大的提升数据科学家的工作效率
[00:00:05,280 -> 00:00:08,240] 让数据科学家把时间花在有意义的事情上面
[00:00:08,240 -> 00:00:09,919] 第二个是文化
[00:00:09,919 -> 00:00:12,919] 文化导致了数据科学家非常有话语权
[00:00:12,919 -> 00:00:14,279] 非常有影响力
[00:00:14,279 -> 00:00:17,800] 他说的话是真的可以turn into product impact
[00:00:17,800 -> 00:00:20,039] 而另外一方面这种data culture
[00:00:20,039 -> 00:00:23,000] 包括他data culture背后所需求的
[00:00:23,000 -> 00:00:25,440] mirror autocracy或者说这些A-B testing
[00:00:25,440 -> 00:00:27,320] 也让Facebook的数据科学家
[00:00:27,320 -> 00:00:29,559] 不会去追求那些fancy的model
[00:00:00,000 -> 00:00:02,160] 而是去提供真正有价值
[00:00:02,160 -> 00:00:04,719] 真正经得起考验的这些data insight
[00:00:04,719 -> 00:00:06,559] 他们不会把时间花在嘴皮子上
[00:00:06,559 -> 00:00:09,000] 而是真的去寻找数据怎么样子
[00:00:09,000 -> 00:00:11,560] 为这个产品和business提供价值的
[00:00:11,560 -> 00:00:13,199] 这点我觉得非常重要
[00:00:13,199 -> 00:00:15,119] 第三点就是组织架构
[00:00:15,119 -> 00:00:16,879] embedded加centralized的模式
[00:00:16,879 -> 00:00:18,719] 让你既有影响力的同时
[00:00:18,719 -> 00:00:20,320] 又能保证自己的独立性
[00:00:20,320 -> 00:00:23,440] 这个workplace可以增加你的visualization
[00:00:23,440 -> 00:00:25,839] 最后就是Facebook的商业模式和它的体量
[00:00:25,839 -> 00:00:28,320] 非常适合数据科学家在其中发挥价值
[00:00:28,320 -> 00:00:29,679] 说了这么多好的地方
[00:00:00,000 -> 00:00:02,120] 我们再稍稍说两点可能不太好的地方
[00:00:02,120 -> 00:00:05,200] 第一它这种embedded加central
[00:00:05,200 -> 00:00:06,719] 然后你去负责一个产品的模式
[00:00:06,719 -> 00:00:09,160] 可能不是非常适合junior data scientist
[00:00:09,160 -> 00:00:11,640] 因为junior data scientist在职业生涯初期
[00:00:11,640 -> 00:00:15,080] 可能希望的模式是你老板给你一个活
[00:00:15,080 -> 00:00:17,160] 然后他把活塑都define好了
[00:00:17,160 -> 00:00:19,000] 然后你把这个东西做出来就行了
[00:00:19,000 -> 00:00:21,719] 但是在Facebook因为你负责的是这个产品
[00:00:21,719 -> 00:00:23,719] 你老板没有你了解这个产品
[00:00:23,719 -> 00:00:25,920] 然后你老板很多时候是一个people manager
[00:00:25,920 -> 00:00:28,280] 他没有办法给你那么多的指导
[00:00:00,000 -> 00:00:03,839] 作为一个senior非常爽你有autonomy
[00:00:03,839 -> 00:00:06,299] 但是作为一个junior压力可能就会很大
[00:00:06,299 -> 00:00:09,480] 因为你也不知道在你要做的所有的这些事情里边
[00:00:09,480 -> 00:00:12,380] 哪一个是最重要的和你怎么样子去完成它
[00:00:12,380 -> 00:00:14,720] 你也不知道你有没有办法能做好这些事情
[00:00:14,720 -> 00:00:16,079] 这个时候压力挺大
[00:00:16,079 -> 00:00:18,120] 可能学习成长速度也未必有那么快
[00:00:18,120 -> 00:00:20,460] 第二点就是Facebook整个公司本身
[00:00:20,460 -> 00:00:22,420] 它的新产品不是那么多
[00:00:22,420 -> 00:00:24,519] 或者说成功的新产品不是那么多
[00:00:24,519 -> 00:00:25,899] 有机会也可以再讲一下
[00:00:25,899 -> 00:00:29,000] 我觉得Facebook作为公司的整体
[00:00:00,000 -> 00:00:01,800] 他也有很多可以改进的地方
[00:00:01,800 -> 00:00:04,400] 我这说的是他适合数据科学家
[00:00:04,400 -> 00:00:07,200] 但是是不是最适合数据科学家的公司
[00:00:07,200 -> 00:00:08,000] 就是最好的公司
[00:00:08,199 -> 00:00:09,199] 我觉得也不是的
[00:00:09,199 -> 00:00:12,000] Facebook他做成的新产品不是那么多
[00:00:12,199 -> 00:00:14,599] 另一方面Facebook的人才密度也非常高
[00:00:14,599 -> 00:00:15,720] 你在任何的一个产品上
[00:00:15,720 -> 00:00:18,239] 你都会发现有非常聪明的人在那里工作
[00:00:18,239 -> 00:00:20,960] 所以说如果你做的是一个新产品
[00:00:20,960 -> 00:00:22,920] 或者说是一个高光产品
[00:00:22,920 -> 00:00:24,440] 或者说一个非常有前途的产品
[00:00:24,440 -> 00:00:25,320] 你会觉得非常爽
[00:00:25,320 -> 00:00:27,079] 因为你会跟很多聪明的人
[00:00:27,079 -> 00:00:29,120] 去做一些非常exciting的东西
[00:00:00,000 -> 00:00:02,600] 但是你如果是在一个比较稳定的产品上
[00:00:02,600 -> 00:00:04,960] 你就会发现稍稍有的时候会有一些内卷
[00:00:04,960 -> 00:00:06,599] 也会让大家会不开心
[00:00:06,599 -> 00:00:08,960] 最后就给我们组打一个广告
[00:00:08,960 -> 00:00:11,480] 最后就给我们组打一个招聘广告
[00:00:11,480 -> 00:00:14,679] 我们组绝对是一个高光高成长高impact的组
[00:00:14,679 -> 00:00:15,480] 众所周知
[00:00:15,480 -> 00:00:19,000] Facebook最大的战略决心之一就是要进军电商
[00:00:19,000 -> 00:00:21,879] 而且我们已经做了很多关于电商的努力了
[00:00:21,879 -> 00:00:24,399] 小扎在刚刚不久前的Early Call里边
[00:00:24,399 -> 00:00:28,280] 也跟大家说Marketplace在全球有10亿的越活用户
[00:00:00,000 -> 00:00:02,160] 这个数字其实是一个非常可怕的数字
[00:00:02,279 -> 00:00:06,679] 就是有10亿的人每个月都会来Facebook来买东西
[00:00:06,679 -> 00:00:10,759] 你放眼全世界没有多少电商网站是能达到这个流量数的
[00:00:11,000 -> 00:00:14,400] 在这个过程中我们想借助Marketplace这么大的流量
[00:00:14,400 -> 00:00:17,320] 去把电商在Marketplace上做好
[00:00:17,320 -> 00:00:21,640] 具体的成长和其他东西因为都是内部数据
[00:00:21,800 -> 00:00:23,079] 我在这就不多说了
[00:00:23,079 -> 00:00:27,600] 总之这是一个非常有意思非常有前途的职业
[00:00:00,000 -> 00:00:05,320] 现在我们组在招一个IC5或者是IC6的这样的一个headcount
[00:00:05,320 -> 00:00:07,000] 就算是一个很senior的headcount
[00:00:07,000 -> 00:00:08,960] 如果你觉得你qualify
[00:00:08,960 -> 00:00:10,759] 这里是我老板的微信号
[00:00:10,759 -> 00:00:13,080] 你欢迎跟他聊一下表达一下你的兴趣
[00:00:13,080 -> 00:00:15,320] 或者说进一步了解一下这个岗位
[00:00:15,320 -> 00:00:19,640] 如果说in general你只是想得到Facebook Analytics的referral
[00:00:19,640 -> 00:00:20,719] 也欢迎联系我老板
[00:00:20,719 -> 00:00:21,879] 他可以内推你
[00:00:21,879 -> 00:00:24,160] 那好的
[00:00:24,160 -> 00:00:25,320] 这次我们就到这里
[00:00:25,320 -> 00:00:25,839] 谢谢大家
[00:00:25,839 -> 00:00:26,879] 我们下期再见
