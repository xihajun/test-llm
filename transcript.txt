[00:00:00,000 -> 00:00:02,879] 大家好 今天我想跟大家聊一聊PM
[00:00:02,879 -> 00:00:06,799] 相信大家不管是数据科学家 数据分析师
[00:00:06,799 -> 00:00:08,320] 然后又或者程序员
[00:00:08,320 -> 00:00:09,919] 或者你自己本身就是PM
[00:00:09,919 -> 00:00:12,080] 你平时都会跟很多PM打交道
[00:00:12,080 -> 00:00:14,320] 但是PM这个职业第一
[00:00:14,320 -> 00:00:15,839] 它到底是干什么的
[00:00:15,839 -> 00:00:17,600] 其实没有一个特别统一的定义
[00:00:17,600 -> 00:00:18,960] 就数据科学家也没有
[00:00:18,960 -> 00:00:20,480] 但是PM可能更过分一点
[00:00:20,480 -> 00:00:23,519] 第二就是它的水平挺难量化的
[00:00:23,519 -> 00:00:25,760] 就是你在看到一个pm的第一眼
[00:00:25,760 -> 00:00:29,280] 你可能很难判断它到底是一个好的pm还是一个不好的pm
[00:00:29,280 -> 00:00:34,240] 第三就是pm的质量对你这个产品和对你整个team的成功
[00:00:34,240 -> 00:00:35,759] 都有非常大的影响
[00:00:35,759 -> 00:00:40,640] 就是它可以决定你的很大程度上决定你的产品的上限和下限
[00:00:40,640 -> 00:00:42,399] 当然来都是大家共同的努力
[00:00:42,399 -> 00:00:44,079] 但是一个好的pm非常重要
[00:00:44,079 -> 00:00:47,439] 其实我自己在工作中也经常受到这样的反馈
[00:00:47,439 -> 00:00:49,359] 他们说我说话像pm
[00:00:49,359 -> 00:00:51,280] 我在跟别人沟通的时候
[00:00:51,280 -> 00:00:54,000] 或者说我在讲这个东西为什么值得做
[00:00:54,000 -> 00:00:55,039] 为什么不值得做
[00:00:55,039 -> 00:00:56,640] 或者说我在其他的
[00:00:56,640 -> 00:00:58,560] 比如说一个项目做了
[00:00:58,560 -> 00:01:00,000] 或者说我的analysis
[00:01:00,000 -> 00:01:02,079] 我在frame这些question的时候
[00:01:02,079 -> 00:01:05,120] 同事们就会说你这个说话像pm一样
[00:01:05,120 -> 00:01:08,000] 收到这样的反馈虽然谈不上说开心
[00:01:08,000 -> 00:01:09,359] 但是我也觉得挺好的
[00:01:09,359 -> 00:01:13,680] 我自己在linkedin上的签名就是产品第一增长第二data第三
[00:01:13,680 -> 00:01:16,319] 那我反思我为什么会得到这样的反馈
[00:01:16,319 -> 00:01:19,439] 我觉得第一我很喜欢讲human problem
[00:01:19,439 -> 00:01:22,400] 我在说这个东西要做什么的话
[00:01:22,400 -> 00:01:24,640] 我会先从用户的角度去想
[00:01:24,640 -> 00:01:26,640] 然后从产品的角度去讲我不会先从用户的角度去想然后从产品的角度去讲
[00:01:26,640 -> 00:01:28,799] 我不会先从数据的角度去思考
[00:01:28,799 -> 00:01:30,400] 然后就是hypothesis driven
[00:01:30,400 -> 00:01:33,120] 第二就是我会讲很多strategy
[00:01:33,120 -> 00:01:36,079] 就是说这个东西对我们WARWICK短期长期到底是什么
[00:01:36,079 -> 00:01:38,799] 大家如果面试过或者说看面经的话
[00:01:38,799 -> 00:01:42,079] 你会发现一线互联网大厂对数据科学家的要求
[00:01:42,079 -> 00:01:43,680] 也越来越偏重于这一块
[00:01:43,680 -> 00:01:45,680] 或者说是一个非常重点考察的地方
[00:01:45,680 -> 00:01:48,719] 就是说你一定要对产品本身有一个product sense
[00:01:48,719 -> 00:01:49,120] 对吧
[00:01:49,120 -> 00:01:51,599] 然后你才去做data
[00:01:51,599 -> 00:01:53,040] 你的这些technical skill
[00:01:53,040 -> 00:01:56,200] 尤其在这个junior level上还是比较重要的
[00:01:56,200 -> 00:01:57,000] 但是越senior
[00:01:57,000 -> 00:02:01,640] 你的product sense你的strategic thinking也越来越重要
[00:02:01,640 -> 00:02:07,000] 这时候就是data scientist从PM上可以学到很多的东西了
[00:02:07,000 -> 00:02:10,599] 就是我跟一些不好的PM合作过
[00:02:10,599 -> 00:02:12,300] 我也跟一些好的PM合作过
[00:02:12,300 -> 00:02:15,199] 我从好的PM身上学到的东西非常多
[00:02:15,199 -> 00:02:16,699] 也非常重要
[00:02:16,699 -> 00:02:19,699] 而且我觉得在他们身上学到的这些东西
[00:02:19,699 -> 00:02:21,199] 不管是沟通技巧
[00:02:21,199 -> 00:02:23,000] 然后思维方式
[00:02:23,000 -> 00:02:27,280] 然后包括他们的vision strategy
[00:02:27,280 -> 00:02:29,280] 都是我可以获益终生的东西
[00:02:29,280 -> 00:02:32,159] 我也想在这个视频里面跟大家一起聊一下
[00:02:32,159 -> 00:02:35,199] 那好吧 那我们就开始聊吧
[00:02:35,199 -> 00:02:37,520] 我们先从PM是什么聊起来
[00:02:37,520 -> 00:02:42,159] 其实PM是什么在不同的地方是很不一样的
[00:02:42,159 -> 00:02:43,919] 国内和国外首先就很不一样
[00:02:43,919 -> 00:02:45,960] 国内和国外是一个非常大的区别
[00:02:45,960 -> 00:02:47,479] 这个我们先不讲吧
[00:02:47,479 -> 00:02:48,479] 这个话题太大了
[00:02:48,479 -> 00:02:52,560] 我们就放在国外的一线互联网大厂上
[00:02:52,560 -> 00:02:55,639] 现在亚马逊其实就分的比较细
[00:02:55,639 -> 00:02:58,439] 亚马逊他会分这个Program Manager
[00:02:58,439 -> 00:02:59,479] Project Manager
[00:02:59,479 -> 00:03:00,719] Product Manager
[00:03:00,719 -> 00:03:04,479] 而且这里边他还会有一个TPM和PMT
[00:03:04,479 -> 00:03:06,479] 就是Product Manager Technical
[00:03:06,479 -> 00:03:08,719] 或者说是Technical Program Manager
[00:03:08,719 -> 00:03:10,879] 或者说Technical Product Manager
[00:03:10,879 -> 00:03:12,960] 这就很细了
[00:03:12,960 -> 00:03:15,360] 有的时候他自己也搞不清楚到底哪个是哪个
[00:03:15,360 -> 00:03:17,919] 在我看来就是Product Manager
[00:03:17,919 -> 00:03:19,199] 是大家说的比较多的
[00:03:19,199 -> 00:03:20,240] 就是产品经理
[00:03:20,240 -> 00:03:23,199] 然后Program Manager我们这就不聊了
[00:03:23,199 -> 00:03:26,400] 因为Program Manager在我看来不是一个特别好的定义
[00:03:26,400 -> 00:03:29,439] 在我看来所有的program如果你要认真做的话
[00:03:29,439 -> 00:03:30,960] 都可以把它做成product
[00:03:30,960 -> 00:03:34,400] 你要去把一个人定义成一个program manager
[00:03:34,400 -> 00:03:36,400] 基本上就把它定义成一个打杂的了
[00:03:36,400 -> 00:03:37,919] 其实我有一个邻居
[00:03:37,919 -> 00:03:39,360] 我有一个邻居他90年的姑娘
[00:03:39,360 -> 00:03:42,800] 然后他比我和我一起加入亚马逊的
[00:03:42,800 -> 00:03:44,319] 现在已经是L7了
[00:03:44,319 -> 00:03:47,039] 所以大家如果知道在场的话
[00:03:47,039 -> 00:03:49,120] 就知道这个东西还是挺厉害的
[00:03:49,120 -> 00:03:51,280] 他就跟我我们就开玩笑
[00:03:51,280 -> 00:03:52,400] 说PM到底是做什么的
[00:03:52,400 -> 00:03:54,639] 他说PM就是干别人都不想干的活
[00:03:54,639 -> 00:03:56,960] 虽然是一句玩笑话
[00:03:56,960 -> 00:03:59,680] 但是里边有一点酸楚的真实的成分在
[00:03:59,680 -> 00:04:01,759] 那这个在Program Manager身上
[00:04:01,759 -> 00:04:03,039] 就是特别特别明显了
[00:04:03,039 -> 00:04:05,960] 在Project Manager身上就是也有一些
[00:04:05,960 -> 00:04:09,039] 但是他们的工作就有更多的autonomy
[00:04:09,039 -> 00:04:11,560] 那我们就先不说program manager了
[00:04:11,560 -> 00:04:12,840] 这个很多时候是一个
[00:04:12,840 -> 00:04:14,159] 不好意思啊
[00:04:14,159 -> 00:04:18,000] 就是有的时候确实就是沦为了一个打杂的岗位
[00:04:18,000 -> 00:04:24,360] 那project manager在像微软或者说像在Facebook
[00:04:24,360 -> 00:04:26,000] 就会把它定义成
[00:04:26,000 -> 00:04:27,500] 好像Google也是这样子吧
[00:04:27,500 -> 00:04:31,000] 就是他们就是TPM是Technical Program Manager
[00:04:31,000 -> 00:04:33,500] 或者说Technical Project Manager吧
[00:04:33,500 -> 00:04:35,500] 具体其实不是特别清楚
[00:04:35,500 -> 00:04:37,000] 但是反正就是这个role
[00:04:37,000 -> 00:04:41,500] 这个role呢就是你负责协调各个东西
[00:04:41,500 -> 00:04:47,560] 比如说我们一个team开了一个Sprint大家有各种各样的做的东西
[00:04:47,560 -> 00:04:49,240] 那我们的stakeholder
[00:04:49,240 -> 00:04:50,560] 我们cross-function team
[00:04:50,560 -> 00:04:52,560] 他们需要知道这些东西是吧
[00:04:52,560 -> 00:04:54,680] 那TPM就把这个summarize一下
[00:04:54,680 -> 00:04:56,720] 比如说出了一些什么save的
[00:04:56,720 -> 00:04:58,839] 有些东西可能会影响到别人
[00:04:58,839 -> 00:05:00,560] 有些别人会影响到我们
[00:05:00,560 -> 00:05:01,800] summarize一下
[00:05:01,800 -> 00:05:03,439] 然后需要开什么会
[00:05:03,439 -> 00:05:05,480] 然后跟进什么项目的进度
[00:05:05,480 -> 00:05:07,519] 或者说有什么东西要汇报
[00:05:07,519 -> 00:05:10,600] 然后确保大家的项目可以如期发布
[00:05:10,600 -> 00:05:15,720] 然后大家该有的dependency都可以如期的resolve
[00:05:15,720 -> 00:05:16,160] 对吧
[00:05:16,160 -> 00:05:19,519] 或者说是确保互相之间不会影响
[00:05:19,519 -> 00:05:21,360] 就是互相之间
[00:05:21,360 -> 00:05:24,480] 就是不同组和不同组之间的合作可以顺畅
[00:05:24,480 -> 00:05:27,800] 这些都是TPM可以帮很多忙的东西
[00:05:27,800 -> 00:05:34,720] 所以说TPM它是一个make sure这个项目可以好好进行的一个非常好的存在
[00:05:34,720 -> 00:05:37,720] 那有些TPM他因为对这个项目很了解
[00:05:37,720 -> 00:05:40,319] 再加上他本身的背景也比较强的话
[00:05:40,319 -> 00:05:45,199] 他就会进一步的说这个项目我发现了他的button X在哪
[00:05:45,199 -> 00:05:46,199] 他的blocker在哪
[00:05:46,199 -> 00:05:48,199] 我会主动的identify出来
[00:05:48,199 -> 00:05:49,800] 然后帮他unblock出来
[00:05:49,800 -> 00:05:51,600] 不管他是这个
[00:05:51,600 -> 00:06:00,800] 就是不管是你是需要其他team的合作
[00:06:00,800 -> 00:06:06,399] 还是你需要你的leadership去给你调动更多的资源去unblock
[00:06:06,399 -> 00:06:08,800] 他们都可以比如说通过数据啊
[00:06:08,800 -> 00:06:12,800] 或者说对这个engineer的理解去把它找出来
[00:06:12,800 -> 00:06:14,800] 然后去保证这个项目进行出去
[00:06:14,800 -> 00:06:16,800] 所以一个好的tpm是
[00:06:16,800 -> 00:06:21,800] 一个好的tpm可以非常好的保证你的这个东西的下限
[00:06:21,800 -> 00:06:24,800] 然后就说到product manager吧
[00:06:24,800 -> 00:06:26,600] 我们的主题Product Manager
[00:06:26,600 -> 00:06:27,800] 它是干什么的呢
[00:06:28,000 -> 00:06:31,199] 就是如果我从一个稍稍宽泛的
[00:06:31,199 -> 00:06:32,199] 个人的角度来说
[00:06:32,199 -> 00:06:35,399] 就是他首先要定下这个产品的方向
[00:06:35,800 -> 00:06:37,600] 他最重要的就是他要知道
[00:06:37,600 -> 00:06:39,000] 他要解决什么问题
[00:06:42,399 -> 00:06:44,300] 他最重要的就是他要知道
[00:06:44,300 -> 00:06:45,439] 他要解决什么问题
[00:06:45,439 -> 00:06:47,839] 他要定义他的human problem是什么
[00:06:47,839 -> 00:06:50,759] 然后他要定义出来这个东西应该怎么被解决
[00:06:50,759 -> 00:06:52,560] 在这里面当然
[00:06:52,560 -> 00:06:57,000] 在这里面当然就是engineer
[00:06:57,000 -> 00:07:01,439] 他要定义这个问题是什么
[00:07:01,439 -> 00:07:04,680] 他为什么需要被解决和怎么被解决
[00:07:04,680 -> 00:07:06,240] 然后这里边
[00:07:06,240 -> 00:07:09,680] 然后当这个产品开始出来的时候
[00:07:09,680 -> 00:07:13,439] 它也会在这中间有一个非常强的point of view
[00:07:13,439 -> 00:07:15,680] 不管它是从这个数据来的
[00:07:15,680 -> 00:07:17,920] 还是从一个anecdotes来的
[00:07:17,920 -> 00:07:20,480] 它应该就是这个产品的growth
[00:07:20,480 -> 00:07:22,879] 它知道这个产品的inside out
[00:07:22,879 -> 00:07:24,959] 就是每一个feature是怎么用的
[00:07:24,959 -> 00:07:25,040] 每一个feature是怎么用的
[00:07:25,040 -> 00:07:26,639] 每一个feature被大家怎么用
[00:07:26,639 -> 00:07:28,079] 是怎么build出来的
[00:07:28,079 -> 00:07:29,680] 他们之间的关系是什么
[00:07:29,680 -> 00:07:33,079] 和我最后怎么样子去把这个产品不断的迭代
[00:07:33,079 -> 00:07:33,920] 找出来问题
[00:07:33,920 -> 00:07:35,160] 然后把它做得更好
[00:07:35,160 -> 00:07:40,160] 去更好的服务顾客和解决所谓的human problem的
[00:07:41,240 -> 00:07:41,959] 当然了
[00:07:41,959 -> 00:07:46,519] 我觉得这件事情不是PM的职责
[00:07:46,519 -> 00:07:48,360] 就是不是PM一个人的职责
[00:07:48,360 -> 00:07:51,720] 所有好的工程师和所有好的数据科学家
[00:07:51,720 -> 00:07:54,920] 好的designer都应该一起去做这件事情
[00:07:54,920 -> 00:07:59,199] 而且我看到的就是确实好的这些所有的人
[00:07:59,199 -> 00:08:01,480] 都会去立足于这些问题
[00:08:01,480 -> 00:08:03,120] 然后去解决这些问题
[00:08:03,120 -> 00:08:05,240] 这也就是一个话题
[00:08:05,240 -> 00:08:07,519] 就是有些程序员就过来问我
[00:08:07,519 -> 00:08:08,839] 因为我身边有好多PM朋友
[00:08:09,240 -> 00:08:11,480] 就来问我说他们想转PM怎么转
[00:08:11,759 -> 00:08:13,120] 在我看来就是不应该
[00:08:13,279 -> 00:08:18,000] 就是你PM能做的所有的事情你都可以做
[00:08:18,240 -> 00:08:19,959] 而且你还有一些专长
[00:08:19,959 -> 00:08:21,680] 就是你可以真的去code
[00:08:21,680 -> 00:08:22,079] 对吧
[00:08:22,199 -> 00:08:23,480] 你是做一个DS的话
[00:08:23,480 -> 00:08:27,040] 你可以从数据中去发现一些更多的东西
[00:08:27,040 -> 00:08:31,439] 但是没有什么东西可以阻止你去做PM们做的事情
[00:08:31,439 -> 00:08:34,399] 如果你觉得PM做的东西很重要
[00:08:34,399 -> 00:08:35,840] 那恭喜你对的
[00:08:35,840 -> 00:08:37,840] 确实PM做的东西很重要
[00:08:37,840 -> 00:08:41,679] 但是不代表你不是PM就不应该去做这些事情
[00:08:41,679 -> 00:08:43,679] 而是每个人都应该去做这件事情
[00:08:43,679 -> 00:08:45,360] 但是PM他首先呢
[00:08:45,360 -> 00:08:46,799] 他有一些special training
[00:08:46,799 -> 00:08:49,600] 很多PM都是有很多这个business background
[00:08:49,600 -> 00:08:51,840] 就是我认识的比较好的PM
[00:08:54,240 -> 00:08:56,000] 我打交道的比较好的PM
[00:08:56,000 -> 00:08:59,279] 几乎无一例外都有一些这个startup
[00:08:59,279 -> 00:09:00,559] 或者说是medium
[00:09:00,559 -> 00:09:03,200] 就是反正都是有一些一线的
[00:09:03,200 -> 00:09:05,759] 基本上我打交道的比较好的PM都是有一些一线的基本上我打交道的比较好的PM
[00:09:05,759 -> 00:09:07,919] 都是有一些一线的经验在
[00:09:07,919 -> 00:09:09,519] 就是他们不管是startup
[00:09:09,519 -> 00:09:12,639] 还是一个大公司的比较frontline的function
[00:09:12,639 -> 00:09:15,279] 就是他一定是要跟他的用户打过交道
[00:09:15,279 -> 00:09:16,799] 他对用户的心智
[00:09:16,799 -> 00:09:21,120] 他对用户的喜好有一个特别强的感觉
[00:09:21,120 -> 00:09:23,279] 他才有可能把这个产品做好
[00:09:23,279 -> 00:09:27,440] 就是我觉得如果你想做PM的事情的话
[00:09:27,440 -> 00:09:31,519] 你应该去做 这是PM的优势之一
[00:09:31,519 -> 00:09:34,240] 就是他们的特殊的背景和他们特殊的training
[00:09:34,240 -> 00:09:35,840] 比如说大家都去business school
[00:09:35,840 -> 00:09:37,759] 一般都是MBA毕业
[00:09:37,759 -> 00:09:41,120] 就是受过一些系统的关于business的训练
[00:09:41,120 -> 00:09:42,559] 或者说有类似的方法论
[00:09:42,559 -> 00:09:47,679] 那他就那个他可以这是他的比较优势是比较擅长的东西
[00:09:47,679 -> 00:09:50,240] 他的存在可以让大家把这个东西做的最好
[00:09:50,240 -> 00:09:54,240] 或者说他的job description有一个人去make sure把这个事情做好
[00:09:54,240 -> 00:09:56,159] 但是大家都应该去做这件事
[00:09:56,159 -> 00:09:58,559] 所以说这个观点就是人人都是pm
[00:09:58,559 -> 00:10:00,240] 人人都应该是pm
[00:10:00,240 -> 00:10:03,200] 但是当时pm当然应该是应该是一个更好的pm
[00:10:03,200 -> 00:10:05,279] 那说到这里就可以扯一下
[00:10:05,279 -> 00:10:07,679] 我个人的经历不一定有代表性
[00:10:07,679 -> 00:10:09,120] 就是我打交道
[00:10:09,120 -> 00:10:11,679] 我认为好的PM和不好的PM是什么
[00:10:11,679 -> 00:10:13,519] 先从好的说起
[00:10:13,519 -> 00:10:16,000] 好的PM首先他是一个product leader
[00:10:16,000 -> 00:10:20,320] 就是他一定是从define这个product
[00:10:20,320 -> 00:10:22,159] define这个problem开始的
[00:10:22,159 -> 00:10:26,600] 他是能知道这个产品最后怎么往前走的
[00:10:26,600 -> 00:10:28,200] 他有一个非常好的vision
[00:10:28,200 -> 00:10:29,600] 他有非常好的strategy
[00:10:29,600 -> 00:10:33,399] 这个其实我是引用了Clare同学一句话
[00:10:33,399 -> 00:10:34,200] 她有她的channel
[00:10:34,200 -> 00:10:37,799] 我们接下来会专门做一期节目
[00:10:37,799 -> 00:10:41,200] 是PM和程序员 PM PK程序员
[00:10:41,200 -> 00:10:43,399] 然后大家互相吐槽一下
[00:10:43,399 -> 00:10:45,240] 和互相学习一下
[00:10:45,240 -> 00:10:46,559] 尽情期待
[00:10:46,559 -> 00:10:48,639] 但是就是我们在排练这个节目的时候
[00:10:48,639 -> 00:10:49,360] 他说了这句话
[00:10:49,360 -> 00:10:51,000] 其实我觉得总结的非常对
[00:10:51,000 -> 00:10:55,120] 就是你好的 PM 一定是要先 drive 你这个 product 对吧
[00:10:55,120 -> 00:10:57,480] 就是他一定是一个 leader
[00:10:57,480 -> 00:10:59,399] 而不是说大家开始做了
[00:10:59,399 -> 00:11:01,480] 然后你不断的 unblock unblock unblock
[00:11:01,480 -> 00:11:02,279] 那这个东西
[00:11:02,279 -> 00:11:04,240] 不可能是大家看到了 PM 的工作
[00:11:04,240 -> 00:11:08,179] 但是不应该是一个好的 PM的最重要的价值所在
[00:11:08,179 -> 00:11:10,419] 但是第二个就是他很懂
[00:11:10,419 -> 00:11:13,539] 他有很强的抽象思维
[00:11:13,539 -> 00:11:17,779] 他一定是就是大家会吐槽一个不好的PM
[00:11:17,779 -> 00:11:21,860] 就是你说你那个你给他讲了半天他也不懂
[00:11:21,860 -> 00:11:23,620] 好的PM他第一很懂技术
[00:11:23,620 -> 00:11:25,379] 第二他很懂数据
[00:11:25,379 -> 00:11:31,080] 一个好的PM就是他不一定需要能自己去把东西做了
[00:11:31,080 -> 00:11:34,080] 但是他一定要能懂得东西是怎么做出来的
[00:11:34,080 -> 00:11:36,179] 他不一定自己能去拿data
[00:11:36,179 -> 00:11:37,919] 但是他肯定能看出来
[00:11:37,919 -> 00:11:39,919] 肯定知道他应该看什么data
[00:11:39,919 -> 00:11:41,919] 这个data告诉他的到底是什么
[00:11:41,919 -> 00:11:44,620] 这个data是怎么样子验证他的hypothesis
[00:11:44,620 -> 00:11:46,639] 或者说是disproved hypothesis的
[00:11:46,639 -> 00:11:48,080] 就是他一定要懂
[00:11:48,080 -> 00:11:50,559] 然后懂的基础之上
[00:11:50,559 -> 00:11:53,360] 就是好的pm一定要有一个非常好的抽象思维
[00:11:53,360 -> 00:11:57,679] 所以说他才能把一个产品的方方面面给拼凑起来
[00:11:57,679 -> 00:11:59,759] 然后知道整个流程是什么的
[00:11:59,759 -> 00:12:00,960] 和重点在哪里
[00:12:00,960 -> 00:12:03,039] 我们接下来最重要做的东西是什么
[00:12:03,039 -> 00:12:06,000] 这就回到头来就说不好的pm是什么
[00:12:06,000 -> 00:12:09,600] 不好的pm首先他对一个产品没有好的point of view
[00:12:09,600 -> 00:12:10,960] 他最后就变成一个tpm了
[00:12:10,960 -> 00:12:13,840] 就是组织大家开个会然后组织大家汇报一下
[00:12:13,840 -> 00:12:15,679] 这种工作很重要 但是不是
[00:12:15,679 -> 00:12:18,240] 我们需要一个好的pm去做另外那些事情
[00:12:18,240 -> 00:12:21,120] 第二个就是他不懂
[00:12:21,120 -> 00:12:23,919] 他很多时候不知道这个产品是什么
[00:12:23,919 -> 00:12:25,519] 或者说不知道这个model是什么或者说不知道这个数�品是什么或者说不知道这个model是什么
[00:12:25,519 -> 00:12:26,960] 或者说不知道这个数据是什么
[00:12:26,960 -> 00:12:32,320] 所以说他抓不到重点 他就会去抓一些他懂的东西
[00:12:32,320 -> 00:12:34,480] 然后这些懂的东西可能根本就不重要
[00:12:34,480 -> 00:12:36,639] 然后他就试图怎么把他懂的东西做好
[00:12:36,639 -> 00:12:39,360] 而不是去把这个产品需要做什么东西做好
[00:12:39,360 -> 00:12:43,039] 另外一方面就是他抓不到重点的时候
[00:12:43,039 -> 00:12:44,799] 他就会说我什么都要
[00:12:44,799 -> 00:12:47,000] 这就会比如说一个不好的PM
[00:12:47,000 -> 00:12:50,200] 他在程序员面前他排不出来P0 P1 P2是什么
[00:12:50,200 -> 00:12:51,799] P0就是priority是吧
[00:12:51,799 -> 00:12:53,000] 就马上需要做的
[00:12:53,000 -> 00:12:55,399] 他根本不知道就是他说我什么都需要做
[00:12:55,399 -> 00:12:58,000] 那你问什么先做什么后做我什么都昨天要
[00:12:58,000 -> 00:12:59,600] 这等于什么都没有说
[00:12:59,600 -> 00:13:01,799] 因为一个公司的资源永远是有限的
[00:13:01,799 -> 00:13:03,799] 你要好的产品永远是要往前走的
[00:13:03,799 -> 00:13:08,000] 所以说你这个排序能知道什么东西最先需要做
[00:13:08,000 -> 00:13:13,000] 怎么样最快的把这个东西用一个合适的质量做出来
[00:13:13,000 -> 00:13:16,000] 是PM非常重要的功力的体现
[00:13:16,000 -> 00:13:18,000] 你一定有一个好的抽象思维
[00:13:18,000 -> 00:13:21,000] 对整个系统有一个comprehensive的了解
[00:13:21,000 -> 00:13:24,000] 才可以把这件事情做好
[00:13:23,600 -> 00:13:29,200] 才可以把这件事情做好那这基本上就讲我们具体的细节
[00:13:29,200 -> 00:13:32,000] 就是好的PM和不好的PM
[00:13:32,000 -> 00:13:33,200] 尤其从程序员的视角
[00:13:33,200 -> 00:13:35,919] 我们接下来就会讲
[00:13:35,919 -> 00:13:37,200] 敬请期待
[00:13:37,200 -> 00:13:40,559] 我们也请了当当和柳哥作为程序员来吐槽PM
[00:13:40,559 -> 00:13:44,799] 然后请了Clare去吐槽回去
[00:13:44,799 -> 00:13:46,799] 或者大家一起讨论一下
[00:13:46,799 -> 00:13:48,799] 应该还蛮有趣的 敬请大家期待
[00:13:48,799 -> 00:13:51,600] 最后我就再讲一下
[00:13:51,600 -> 00:13:58,000] 在我看来data scientist和pm之间应该互相学习的东西
[00:13:58,000 -> 00:14:00,399] 一个好的data scientist
[00:14:00,399 -> 00:14:03,600] 首先我觉得他本身就应该是一个好的pm
[00:14:03,600 -> 00:14:07,600] 如果你现在把我放到一个大厂去做PM的话
[00:14:07,600 -> 00:14:08,799] 我相信我能做得很好的
[00:14:08,799 -> 00:14:12,000] 就是我不用我任何的data scientist的skill
[00:14:12,000 -> 00:14:13,600] 我专门去做PM的工作的话
[00:14:13,600 -> 00:14:16,000] 我相信我能是一个蛮胜任的人
[00:14:16,000 -> 00:14:18,000] 毕竟也在咨询混过对吧
[00:14:18,000 -> 00:14:23,600] 但是那PM和data scientist的专长都是什么呢
[00:14:23,600 -> 00:14:26,460] 就在我看来PM的专长就是Products
[00:14:26,460 -> 00:14:27,460] Productions
[00:14:27,460 -> 00:14:29,460] 你对Product的执着
[00:14:29,460 -> 00:14:32,960] 你对UX的感受
[00:14:32,960 -> 00:14:35,960] 就是很多时候一个产品它的好坏
[00:14:35,960 -> 00:14:37,960] 你技术是一方面
[00:14:37,960 -> 00:14:42,460] 你UX你有没有真正的很好的抓住了用户的心智
[00:14:42,460 -> 00:14:44,960] 你有没有真正的得到了用户的注意力
[00:14:44,960 -> 00:14:45,200] 你有没有真的让你的�到了用户的注意力
[00:14:45,200 -> 00:14:48,159] 你有没有真的让你的产品resonate with user
[00:14:48,159 -> 00:14:50,240] 到底解没解决用户的痛点
[00:14:50,240 -> 00:14:52,960] 这些东西都是一些很settle
[00:14:52,960 -> 00:14:56,480] 很nuance但是又很体现功力的事情
[00:14:56,480 -> 00:14:59,600] 我认识的好的pm在这点就真的很佩服他们
[00:14:59,600 -> 00:15:02,159] 就是比如说我们出了一个产品
[00:15:02,159 -> 00:15:03,519] 他有一些这个message
[00:15:03,519 -> 00:15:05,759] 一个pm就说这个message让我感觉不好
[00:15:05,759 -> 00:15:08,559] 然后他又能非常清楚的告诉大家
[00:15:08,559 -> 00:15:09,919] 为什么让他感觉不好
[00:15:09,919 -> 00:15:11,519] 他觉得用户可能是怎么想的
[00:15:11,519 -> 00:15:13,120] 然后大家一听是很有道理的
[00:15:13,120 -> 00:15:15,360] 而且他不是限于自己的bias
[00:15:15,360 -> 00:15:18,399] 而是他能真的从用户的角度去思考这个问题
[00:15:18,399 -> 00:15:21,919] 我们就觉得这样的价值是非常大
[00:15:21,919 -> 00:15:24,960] 回过头来他对这个business解决的问题
[00:15:24,960 -> 00:15:25,000] 就是我到底是不是就是用户用了我这个头来对这个business解决的问题
[00:15:25,000 -> 00:15:28,000] 就是我到底是不是就是用户用了我这个产品
[00:15:28,000 -> 00:15:30,000] 到底有没有解决问题痛点呢
[00:15:30,000 -> 00:15:32,000] 他也有一个非常好的sense
[00:15:32,000 -> 00:15:35,000] 这是我觉得PM做的很好
[00:15:35,000 -> 00:15:37,000] 然后希望你们做的更好的地方
[00:15:37,000 -> 00:15:39,000] 那DS的相对优势呢
[00:15:39,000 -> 00:15:42,000] 就是我们可以从数据里边去
[00:15:42,000 -> 00:15:45,879] 我们可以用一个科学的态度去看待数据和分析数据
[00:15:45,879 -> 00:15:48,960] 因为毕竟一个人的精力是有限的
[00:15:48,960 -> 00:15:51,759] 人肯定是会被自己的精力所bias的
[00:15:51,759 -> 00:15:54,879] 这个时候好的PM和好的数据科学家
[00:15:54,879 -> 00:15:58,480] 他就是能知道什么东西是我的hypothesis
[00:15:58,480 -> 00:16:00,960] 什么东西是我知道的事实
[00:16:00,960 -> 00:16:05,000] 这个hypothesis到底怎么样子从数据里面被验证
[00:16:05,000 -> 00:16:08,559] 比如说我会感觉这个东西什么样的用户
[00:16:08,559 -> 00:16:10,720] 什么样的用户targeting是更好的
[00:16:10,720 -> 00:16:13,840] 但是那一个好的data scientist就会首先承认
[00:16:13,840 -> 00:16:15,360] OK这是一个hypothesis
[00:16:15,360 -> 00:16:17,759] 然后我应该怎么样子去design我的marketing
[00:16:17,759 -> 00:16:20,080] 怎么样子去design我的产品
[00:16:20,080 -> 00:16:21,840] 让数据能告诉我
[00:16:21,840 -> 00:16:23,919] 我的targeting到底是不是有效的
[00:16:23,919 -> 00:16:25,120] 如果有效有多有效或者说我的产品feature我�能告诉我我的targeting到底是不是有效的如果有效有多有效
[00:16:25,120 -> 00:16:27,679] 或者说我的这个产品这个feature
[00:16:27,679 -> 00:16:30,240] 我怎么样子告诉我用户到底喜欢A还是喜欢B
[00:16:30,240 -> 00:16:31,039] 哪个更有效
[00:16:31,039 -> 00:16:33,840] 这是稍稍总结一下
[00:16:33,840 -> 00:16:35,679] 就是非常笼统的总结一下
[00:16:35,679 -> 00:16:37,679] 就是product versus sense
[00:16:37,679 -> 00:16:40,480] 然后一个好的pm这两个都应该知道
[00:16:40,480 -> 00:16:42,240] 好的ds这两个也都应该知道
[00:16:42,240 -> 00:16:45,279] 这就是我们之间有很多可以相互学习的东西
[00:16:45,279 -> 00:16:51,120] 最后一句话就是最后再总结再说一个点
[00:16:51,120 -> 00:16:53,600] 就是在我看来什么是有能力但是不好的PM
[00:16:53,600 -> 00:16:56,080] PM的嘴骗人的鬼
[00:16:56,080 -> 00:16:58,080] 就是所有有能力的PM
[00:16:58,080 -> 00:17:01,120] 他们一定都是非常会articulate的
[00:17:01,120 -> 00:17:03,679] 就是他任何一件事情都可以把你说的
[00:17:03,679 -> 00:17:06,400] 都可以说的让你觉得OK这个事情很厉害
[00:17:06,400 -> 00:17:07,759] 好值得做
[00:17:07,759 -> 00:17:08,559] 怎么样
[00:17:08,559 -> 00:17:11,279] 就是这个我觉得很多PM都有这个能力
[00:17:11,279 -> 00:17:14,559] 但是好的PM一定是有所为有所不为
[00:17:14,559 -> 00:17:16,240] 他一定是会
[00:17:16,240 -> 00:17:19,519] 他首先他不会invest in这个项目本身
[00:17:19,519 -> 00:17:20,400] 他要知
[00:17:20,400 -> 00:17:23,759] 他会从一个客观的角度去看这个项目到底是不是好的
[00:17:23,759 -> 00:17:24,960] 如果不好就把它干掉
[00:17:24,960 -> 00:17:26,640] 如果好的话再把它留下
[00:17:26,640 -> 00:17:28,960] 如果你看到一个有能力但是不好的pm
[00:17:28,960 -> 00:17:30,559] 他可能是会为了升职
[00:17:30,559 -> 00:17:34,640] 可能是会为了有的时候是为了取悦自己的盟友
[00:17:34,640 -> 00:17:38,319] 他就会让一个好的没有前途的项目
[00:17:38,319 -> 00:17:39,839] drag on for too long
[00:17:39,839 -> 00:17:41,759] 他就会说这个东西值得做
[00:17:41,759 -> 00:17:43,039] 其实根本不值得做
[00:17:43,039 -> 00:17:44,640] 大家投入了很多资源以后
[00:17:44,640 -> 00:17:46,440] 反而是浪费了这些资源
[00:17:46,720 -> 00:17:48,400] 或者说影响了公司的发展
[00:17:48,680 -> 00:17:50,680] 在我看来PM有这个能力
[00:17:50,880 -> 00:17:53,079] 你选择做什么和选择不做什么
[00:17:53,240 -> 00:17:57,079] ultimately是决定你PM到底好不好的最重要的因素
[00:17:57,519 -> 00:17:59,079] 好的 今天就要讲到这里
[00:17:59,279 -> 00:18:00,119] 讲的有点琐碎
[00:18:00,119 -> 00:18:01,200] 希望对大家有帮助
[00:18:01,200 -> 00:18:03,039] 如果说有什么地方讲的没清楚的话
[00:18:03,240 -> 00:18:05,079] 我们也可以把这个视频重新做一下
[00:18:05,079 -> 00:18:06,440] 把它讲的更好调理一下
[00:18:06,440 -> 00:18:08,319] 希望大家都给我留反馈
[00:18:08,319 -> 00:18:11,440] 然后我会多产出这样的内容的
[00:18:11,440 -> 00:18:13,759] 希望大家留言点赞转发
[00:18:13,759 -> 00:18:15,359] 好 下次再见
