[00:00:00,000 -> 00:00:03,720] 大家好,今天跟大家聊一下Product Sense
[00:00:03,720 -> 00:00:06,160] Product Sense算是面试环节里边
[00:00:06,160 -> 00:00:08,199] 大家比较头疼的一部分了
[00:00:08,199 -> 00:00:10,759] 因为它不像编程和统计
[00:00:10,759 -> 00:00:12,039] 你会了就是会了
[00:00:12,039 -> 00:00:13,320] 然后你也知道你会了
[00:00:13,320 -> 00:00:15,679] Product Sense的不确定性很高
[00:00:15,679 -> 00:00:17,440] 相应的也比较难准备
[00:00:17,440 -> 00:00:20,039] 网上其实也没有一些特别好的资料
[00:00:20,039 -> 00:00:21,839] 来帮助你进行准备
[00:00:21,839 -> 00:00:24,960] 我自己总结了一些方法吧
[00:00:24,960 -> 00:00:27,679] 我在同事和面试这里收到的反馈
[00:00:27,679 -> 00:00:30,399] ProductSense还算是我比较擅长的一部分
[00:00:30,640 -> 00:00:34,600] 所以说我就把自己的一些个人经验拿出来
[00:00:34,600 -> 00:00:36,039] 跟大家分享一下
[00:00:36,280 -> 00:00:37,200] 不一定是对的
[00:00:37,200 -> 00:00:39,359] 因为ProductSense是一个很大的话题
[00:00:39,520 -> 00:00:43,520] 但是希望对大家有一些借鉴和启发就好了
[00:00:43,799 -> 00:00:46,560] ProductSense这个问题其实蛮大的
[00:00:46,560 -> 00:00:48,600] 因为你要形成Product Sense
[00:00:48,840 -> 00:00:51,600] 其实有很多培养的方法
[00:00:51,600 -> 00:00:54,399] 或者说是提高的方法
[00:00:54,399 -> 00:00:56,119] 也有很多资料可以看
[00:00:56,119 -> 00:00:58,119] 或者说你自己应该上手做一些事情
[00:00:58,399 -> 00:00:59,479] 比如说对我来说
[00:00:59,479 -> 00:01:01,679] 培养我Product Sense最好的方式
[00:01:01,679 -> 00:01:04,480] 就是我真的去参与了一些
[00:01:04,480 -> 00:01:05,760] 这个Startup 的经验
[00:01:05,760 -> 00:01:10,400] 我自己也去找一些在业界摸爬滚打的人一起聊
[00:01:10,400 -> 00:01:12,799] 或者说一起帮他们做点事情
[00:01:12,799 -> 00:01:17,519] 从中从这个真实的市场反馈和自己使用这个产品
[00:01:17,519 -> 00:01:20,640] 得到了一些对于 product 的感觉
[00:01:20,640 -> 00:01:23,040] 最后 ultimately 就是 product sense
[00:01:23,040 -> 00:01:26,000] 有机会的话我可能也会分享一些这些经验
[00:01:26,000 -> 00:01:30,000] 或者说甚至请一些我的做startup或者做投资的朋友
[00:01:30,000 -> 00:01:31,000] 来帮大家分享
[00:01:31,000 -> 00:01:35,000] 这期视频我就focus在两个地方
[00:01:35,000 -> 00:01:38,000] 第一个是我帮朋友Mark interview的时候
[00:01:38,000 -> 00:01:43,000] 发现大家对Product Sense question最大的误区
[00:01:43,000 -> 00:01:45,200] 我觉得这个误区是非常值得被解决的
[00:01:47,879 -> 00:01:51,359] 第二个就是我跟大家分享一个我来准备Product Sense问题的框架
[00:01:51,560 -> 00:01:53,200] 就是其他的能力你可以提高
[00:01:53,200 -> 00:01:55,599] 但是我觉得这个框架可以帮助我
[00:01:55,599 -> 00:01:58,120] 起码把一个10分的答案
[00:01:58,120 -> 00:01:59,400] 变成一个60分的答案
[00:01:59,519 -> 00:02:01,040] 当然60分到100分中间
[00:02:01,040 -> 00:02:02,319] 还是有很多问题的
[00:02:02,319 -> 00:02:04,280] 但是掌握了这个框架
[00:02:04,400 -> 00:02:05,680] 反复练习你起码可以达到60分到80還是有很多問題的但是掌握了這個框架反复練習
[00:02:05,719 -> 00:02:08,080] 你起碼可以達到 60 分到 80 分
[00:02:08,120 -> 00:02:09,080] 我是這樣想的
[00:02:09,120 -> 00:02:11,840] 我們就先從這個誤區來開始
[00:02:12,120 -> 00:02:13,680] 這個誤區就是
[00:02:13,879 -> 00:02:15,039] Product Sense的問題
[00:02:15,400 -> 00:02:18,719] 一般他問你的都是一個開放式的問題
[00:02:18,919 -> 00:02:21,199] 開放式的問題就是什麼意思
[00:02:21,319 -> 00:02:23,000] 就是他沒有一個正確答案
[00:02:23,080 -> 00:02:24,479] 這也就是大家的誤區
[00:02:24,479 -> 00:02:29,000] 很多同學他在聽到一个 product sense 的问题的时候
[00:02:29,000 -> 00:02:33,400] 他会去把精力放在找正确答案上
[00:02:33,400 -> 00:02:37,159] 而不是去给这个面试官沟通
[00:02:37,159 -> 00:02:42,000] 展示你的这个思路和分析问题的能力上
[00:02:42,000 -> 00:02:46,599] 我可能这样说不是很容易理解
[00:02:46,599 -> 00:02:47,599] 那我就举一个例子吧
[00:02:47,599 -> 00:02:52,900] 有一个问题就是我们用随便用微信举例子
[00:02:52,900 -> 00:02:54,199] 你去面腾讯
[00:02:54,199 -> 00:02:55,699] 民生官给你个问题
[00:02:55,699 -> 00:03:00,000] 微信公众号上的文章百分之多少是假新闻
[00:03:00,000 -> 00:03:02,599] 那我先暂停一下
[00:03:02,599 -> 00:03:04,000] 就是大家想一下
[00:03:04,000 -> 00:03:06,639] 你听到这个问题的第一反应是什么
[00:03:06,639 -> 00:03:07,919] 你打算怎么回答他
[00:03:08,639 -> 00:03:12,000] 是不是你的想法是
[00:03:12,000 -> 00:03:15,120] 你要去找这个假新闻的定义是什么
[00:03:15,120 -> 00:03:17,319] 你用什么样的用户数据
[00:03:17,319 -> 00:03:19,639] 什么样的这个文本数据
[00:03:19,639 -> 00:03:23,400] 或者什么样的网站来源数据去定义假新闻
[00:03:23,400 -> 00:03:27,919] 最后这个就是你把假新闻定义出来了以后
[00:03:27,919 -> 00:03:29,599] 你就可以去算一下比例了
[00:03:29,599 -> 00:03:30,680] 是这样吗
[00:03:30,680 -> 00:03:33,360] 我觉得这就是我刚说的误区了
[00:03:33,360 -> 00:03:36,360] 之所以这个问题会是一个开放式问题
[00:03:36,360 -> 00:03:38,319] 就是因为它没有被解决
[00:03:38,319 -> 00:03:40,240] 假设我知道什么是假新闻
[00:03:40,240 -> 00:03:41,759] 什么不是假新闻的话
[00:03:41,759 -> 00:03:44,319] 我直接就apply这个定义
[00:03:44,319 -> 00:03:46,000] 我微信上就没有假新闻的话那我直接就apply这个定义那我微信上就没有假新闻了
[00:03:46,000 -> 00:03:49,000] 之所以会问他
[00:03:49,000 -> 00:03:51,199] 就是因为首先假新闻很难定义
[00:03:51,199 -> 00:03:54,400] 尤其是你还没有抓到的假新闻很难定义
[00:03:54,400 -> 00:03:59,599] 第二就是你所有的解答方案
[00:03:59,599 -> 00:04:01,599] 其实都代表了一种tradeoff
[00:04:01,599 -> 00:04:05,039] 我在帮朋友mark interview的时候
[00:04:05,039 -> 00:04:07,439] 就会有这样的回答
[00:04:07,639 -> 00:04:09,680] 比如说我们应该用机器学习
[00:04:09,680 -> 00:04:11,439] 做语义分析
[00:04:11,599 -> 00:04:15,199] 然后通过机器学习来给语义上标签
[00:04:15,680 -> 00:04:17,079] 这个是假新闻
[00:04:17,079 -> 00:04:18,079] 那个不是假新闻
[00:04:18,399 -> 00:04:20,519] 或者说我应该去
[00:04:20,519 -> 00:04:22,839] 根据网站的来源去分假新闻
[00:04:22,839 -> 00:04:24,639] 比如说来源于特定网站的
[00:04:24,639 -> 00:04:27,079] 这个东西内容是假新闻
[00:04:27,079 -> 00:04:30,439] 或者说我应该去根据这个用户
[00:04:30,439 -> 00:04:36,040] 或者他比如说你转发的点赞的是教育程度比较低的用户
[00:04:36,040 -> 00:04:37,360] 那你可能是假新闻
[00:04:37,360 -> 00:04:39,439] 或者说根据你的传播速度
[00:04:39,439 -> 00:04:40,839] 传播速度快的是假新闻
[00:04:40,839 -> 00:04:44,959] 这还有好多这个例子就不一一列举了
[00:04:44,959 -> 00:04:45,000] 但是有没有发现上面没有一个正确答案是假新闻这还有好多个例子就不一一列举了
[00:04:45,000 -> 00:04:47,399] 但是有没有发现上面没有一个正确答案
[00:04:47,399 -> 00:04:51,040] 只是大家上来就去想正确答案
[00:04:51,040 -> 00:04:53,879] 但是其实离正确答案是反而走偏了
[00:04:53,879 -> 00:04:56,680] 因为刚刚说的所有的定义里边
[00:04:56,680 -> 00:05:01,120] 没有一个是真正的fundamentally假新闻的定义
[00:05:01,120 -> 00:05:03,560] 比如说你转发快versus转发慢
[00:05:03,560 -> 00:05:05,600] 你就是定义了一个转发快的东西
[00:05:05,600 -> 00:05:07,600] 这里边会有precision和recall的问题
[00:05:07,600 -> 00:05:10,319] 就是你可能你覆盖面很广
[00:05:10,319 -> 00:05:12,319] 但是你的错误率也非常低
[00:05:12,319 -> 00:05:13,519] 也非常高
[00:05:13,519 -> 00:05:15,519] 那你的机器学习
[00:05:15,519 -> 00:05:19,920] 可能首先你develop一个好的机器学习的模型很难
[00:05:19,920 -> 00:05:21,519] 很慢或者很慢
[00:05:21,519 -> 00:05:23,120] 也不一定能develop出来
[00:05:23,120 -> 00:05:26,199] 然后最后你通过抓起关键字去找假新闻
[00:05:26,199 -> 00:05:27,600] 可能你的判断率是高的
[00:05:27,600 -> 00:05:29,199] 但是你的coverage是低的
[00:05:29,199 -> 00:05:31,120] 那你抓不到绝大多数假新闻
[00:05:31,120 -> 00:05:33,439] 那你我可能用记忆学习去说
[00:05:33,439 -> 00:05:36,000] 这个地方假新闻的比率是1%
[00:05:36,000 -> 00:05:38,720] 但其实假新闻的比率已经30%了
[00:05:38,720 -> 00:05:41,120] 你也根本无从知道这30%到底是什么
[00:05:41,120 -> 00:05:44,800] 因为你的记忆学习只能抓到你认为的定义里边的假新闻
[00:05:46,120 -> 00:05:49,759] 那话说回来啊 就是
[00:05:50,879 -> 00:05:52,720] 在没有正确答案的情况下
[00:05:53,879 -> 00:05:58,959] 你最最后看的就是你的tradeoff 所以说在没有正确答案的情况下
[00:05:59,399 -> 00:06:02,279] 你遇到这个问题 你要先问 就是这个问题解决的是什么
[00:06:02,720 -> 00:06:07,000] 这个问题你要就是你问这个问题 你要解决的背后的商业问题是什么
[00:06:07,000 -> 00:06:08,339] 谁在问这个问题
[00:06:08,339 -> 00:06:09,500] 他的目的是什么
[00:06:09,500 -> 00:06:11,300] 他是为了反假新闻
[00:06:11,300 -> 00:06:13,000] 把假新闻的降到零呢
[00:06:13,000 -> 00:06:15,639] 还是为了就是比如说一个report
[00:06:15,639 -> 00:06:16,139] 好
[00:06:16,139 -> 00:06:19,100] 这也就是你跟面试官沟通的第一步
[00:06:19,100 -> 00:06:20,339] 他抛给你一个问题
[00:06:20,800 -> 00:06:23,100] 你要去把这个场景什么定义好
[00:06:23,100 -> 00:06:26,079] 这也代表了你对工作负责的一个态度
[00:06:26,079 -> 00:06:26,360] 对吧
[00:06:26,360 -> 00:06:29,040] 你在工作中也应该是这么跟你的同事沟通的
[00:06:29,040 -> 00:06:30,759] 就是你问我一个问题
[00:06:30,759 -> 00:06:32,240] 到底你的action是什么
[00:06:32,240 -> 00:06:37,480] 所以我才能根据你要take的action去进行对问题的回答
[00:06:37,480 -> 00:06:42,199] 宰相秘书官跟你说是小马哥要去做报告
[00:06:42,199 -> 00:06:45,399] 然后他需要这个数据来支持他
[00:06:45,399 -> 00:06:47,800] 这个事情可能需要一周之内回来
[00:06:47,800 -> 00:06:48,639] 给我答案
[00:06:48,639 -> 00:06:50,839] 然后我可以给你提供很多资源
[00:06:50,839 -> 00:06:52,120] 那我说好
[00:06:52,120 -> 00:06:53,399] 小马哥去做报告
[00:06:53,399 -> 00:06:56,319] 那大家不是很care这个假新闻的定义是
[00:06:56,319 -> 00:06:58,920] 就是大家不会care这个假新闻的
[00:06:58,920 -> 00:07:00,399] technical的定义是什么
[00:07:00,399 -> 00:07:02,920] 只会care最后假新闻的比率是多少
[00:07:02,920 -> 00:07:05,120] 然后这个假新闻的比率应该是符合他去做报告的这个听众对假新闻的比率是多少然后假新闻的比率应该是符合
[00:07:05,120 -> 00:07:08,319] 他去做报告的听众对假新闻的认知的
[00:07:08,319 -> 00:07:11,600] 我对这个问题的解决方案就是这个样子的
[00:07:11,600 -> 00:07:15,399] 我首先去搞清楚他的受众对假新闻的定义是什么
[00:07:15,399 -> 00:07:19,279] 然后把它形成一个简短的工作流程
[00:07:19,279 -> 00:07:22,639] 然后我去找一堆人工的鉴别员
[00:07:22,639 -> 00:07:23,800] 他可以告诉我
[00:07:23,800 -> 00:07:25,959] 他可以根据我给他的定义告诉我
[00:07:25,959 -> 00:07:28,759] 这个东西是定义中的假新闻还是不是
[00:07:28,800 -> 00:07:31,439] 那你也可以中间有一些审核的流程
[00:07:31,560 -> 00:07:33,319] 比如说两个人去
[00:07:33,319 -> 00:07:34,600] 然后出现异议的时候
[00:07:34,600 -> 00:07:36,040] 让一个Auditor来做
[00:07:36,079 -> 00:07:37,480] 这些都是细节
[00:07:38,360 -> 00:07:40,279] 我可能找1000个这样的人
[00:07:40,279 -> 00:07:42,399] 做个六七天做个五六天
[00:07:42,720 -> 00:07:45,560] 我可能出来个五六千个文章
[00:07:45,560 -> 00:07:46,959] 我算一下sample size
[00:07:46,959 -> 00:07:50,600] 其实这五六千篇文章的这个random sample
[00:07:50,600 -> 00:07:54,319] 已经能很好的体现微信整个公众号
[00:07:54,319 -> 00:07:56,000] 这个生态圈的质量了
[00:07:56,000 -> 00:07:57,399] 那就可以了
[00:07:57,399 -> 00:07:59,720] 那就已经满足这个要求了
[00:07:59,720 -> 00:08:02,399] 如果说好发现这个问题很大
[00:08:02,399 -> 00:08:04,199] 那我们要怎么解决它
[00:08:04,199 -> 00:08:06,600] 那我就可以接下来跟他提说
[00:08:06,600 -> 00:08:09,120] OK这些人他其实给我们提供了
[00:08:09,120 -> 00:08:12,120] 很好的很高质量的人工的Tag
[00:08:12,120 -> 00:08:14,920] 那我们在这上面就可以上机器学习模型
[00:08:14,920 -> 00:08:17,319] 而且我可能会把机器学习模型分两类
[00:08:17,319 -> 00:08:19,319] 一类是来源一类是内容
[00:08:19,319 -> 00:08:22,839] 我们根据内容去看什么样的内容更像是假新闻
[00:08:22,839 -> 00:08:25,360] 什么样再根据来源去看什么样的来源更容易是假新闻什么样再根据来源去看什么样的来源
[00:08:25,360 -> 00:08:26,600] 更容易是假新闻
[00:08:26,600 -> 00:08:29,439] 然后找到这样的pattern以后就可以针对性的行动
[00:08:29,439 -> 00:08:34,000] 最后就可以比较有效的降低假新闻的数量
[00:08:34,000 -> 00:08:40,879] 而且人工的tag也给机器提供了一个比较好的所谓的ground truth
[00:08:40,879 -> 00:08:43,120] 就是你不是说机器认为你是假新闻
[00:08:43,120 -> 00:08:43,720] 你就是假新闻
[00:08:43,720 -> 00:08:45,120] 而是人认为是假新闻你就是假新闻而是人认为是假新闻
[00:08:45,120 -> 00:08:46,159] 你是假新闻
[00:08:46,159 -> 00:08:49,919] 机器的目标是要降低人认定假新闻的
[00:08:49,919 -> 00:08:51,480] 这些新闻的比例
[00:08:51,480 -> 00:08:54,120] 那最后我觉得结果是比一上来就做一个
[00:08:54,120 -> 00:08:58,279] 门神的模型要负责的多的
[00:08:58,279 -> 00:08:58,960] 好的
[00:08:58,960 -> 00:09:00,039] 这是开放性问题
[00:09:00,039 -> 00:09:02,039] 就是没有正确答案
[00:09:02,039 -> 00:09:03,639] 你在面试的过程中
[00:09:03,639 -> 00:09:09,000] 不要把太多的时间精力去纠结于寻找正确答案上
[00:09:09,000 -> 00:09:11,200] 而是应该一步一步的沟通
[00:09:11,200 -> 00:09:13,600] 去了解这个问题
[00:09:13,600 -> 00:09:15,500] 它到底是为了做什么
[00:09:15,500 -> 00:09:17,000] 它的action是什么
[00:09:17,000 -> 00:09:21,000] 然后去根据这个商业问题去做一个取舍
[00:09:21,000 -> 00:09:24,299] 当然你手里的这个工具要足够多
[00:09:24,299 -> 00:09:25,960] 你了解的工具要足够多你了解的工具也要足够多
[00:09:26,000 -> 00:09:29,080] 这样你才可能根据不同的目的吧
[00:09:29,080 -> 00:09:31,159] 去推荐最适合的工具
[00:09:31,159 -> 00:09:32,120] 说完第一部分呢
[00:09:32,120 -> 00:09:34,480] 其实我们就把product sense的
[00:09:34,519 -> 00:09:37,000] 这个问题的意义也带出来了
[00:09:37,000 -> 00:09:39,360] 就product sense的问题的意义呢
[00:09:39,399 -> 00:09:40,200] 是沟通
[00:09:40,320 -> 00:09:41,639] 是就像我前面说的
[00:09:41,639 -> 00:09:44,120] 是知道是考验你
[00:09:44,240 -> 00:09:46,399] 能不能很好的解决商业问题
[00:09:46,399 -> 00:09:48,080] 能不能很好的抓住重点
[00:09:48,080 -> 00:09:50,720] 但是你要在能抓住重点的前提之下
[00:09:50,720 -> 00:09:52,159] 是你分析又能全面
[00:09:52,159 -> 00:09:54,720] 你不能说你觉得你抓住了重点
[00:09:54,720 -> 00:09:58,639] 其实重点在其他地方你根本就没有覆盖到
[00:09:58,639 -> 00:10:01,360] 这就是一个分析问题的框架了
