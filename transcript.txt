[00:00:00,000 -> 00:00:01,120] Hello 大家好
[00:00:01,120 -> 00:00:04,280] 欢迎来到我们课代表讲数据的第三期
[00:00:04,480 -> 00:00:06,200] 这期西雅图的春天来了
[00:00:06,200 -> 00:00:08,199] 然后我YuanC这个花也开了
[00:00:08,199 -> 00:00:09,000] 我不知道是什么花
[00:00:09,160 -> 00:00:10,279] 但是它很好看
[00:00:10,400 -> 00:00:13,119] 于是我们就在这个花旁边来录一期
[00:00:13,480 -> 00:00:15,359] 正好借着外面比较好的天气
[00:00:15,359 -> 00:00:17,000] 在西雅图难得的好天气
[00:00:17,120 -> 00:00:20,000] 来跟大家聊一个挺有争议性的观点
[00:00:20,519 -> 00:00:22,800] 我觉得为什么大多数数据科学家
[00:00:22,800 -> 00:00:24,600] 做Machine Learning是没有前途的
[00:00:25,000 -> 00:00:26,440] 好的 上了一些开宗名义
[00:00:26,879 -> 00:00:29,399] 我觉得Machine Learning本身还是很有前途的
[00:00:00,000 -> 00:00:02,240] 但是它不适合数据科学家来做
[00:00:02,240 -> 00:00:05,000] 因为Machine Learning其实真正的价值
[00:00:05,000 -> 00:00:06,839] 就是它发展到今天这一步了
[00:00:06,839 -> 00:00:10,439] 真正它的价值和它应该做的事情是工程问题
[00:00:10,439 -> 00:00:12,000] 而不是科学问题
[00:00:12,000 -> 00:00:16,440] 所以说我们接下来会看到Machine Learning还会有很多发展
[00:00:16,440 -> 00:00:19,679] 但是更多的是应该让Machine Learning Engineer来做
[00:00:19,679 -> 00:00:23,120] 在这里边有少部分的人会去解决科学问题
[00:00:23,120 -> 00:00:27,000] 但是绝大多数的人是没有条件去解决这些科学问题的
[00:00:00,000 -> 00:00:03,520] 我们现在看到很多公司还会招数据科学家来做Machine Learning
[00:00:03,520 -> 00:00:07,320] 但是慢慢的他们就会发现招数据科学家来做这件事情
[00:00:07,320 -> 00:00:09,279] 未必有招一个Machine Learning Engineer
[00:00:09,279 -> 00:00:11,720] 甚至未必有招一个Software Engineer来做
[00:00:11,720 -> 00:00:13,800] 成效好然后结效快
[00:00:13,800 -> 00:00:16,000] 之所以把这个比较争议的观点抛出来
[00:00:16,000 -> 00:00:19,039] 是因为我现在看到很多做数据科学的小伙伴
[00:00:19,039 -> 00:00:20,519] 学数据科学的小伙伴
[00:00:20,519 -> 00:00:24,280] 他们还是觉得学数据科学就应该去做Machine Learning Model
[00:00:24,280 -> 00:00:26,800] 但是又没有去真的提高自己的工程能力
[00:00:00,000 -> 00:00:04,080] 那这样子我就担心大家做到最后把自己饭碗做没有了
[00:00:04,080 -> 00:00:05,599] 这期视频我分两部分
[00:00:05,799 -> 00:00:07,320] 第一部分就是讲我这个观点
[00:00:07,519 -> 00:00:09,480] 我会先说一下什么是工程问题
[00:00:09,480 -> 00:00:10,519] 什么是科学问题
[00:00:10,720 -> 00:00:13,720] 然后为什么Machine Learning走到今天这一步
[00:00:13,720 -> 00:00:16,440] 绝大多数都是工程问题而不是科学问题
[00:00:16,640 -> 00:00:20,039] 后面我再会用一些故事和例子去跟大家讲一下
[00:00:20,239 -> 00:00:24,160] 为什么我看到了还有很多公司去招数据科学家
[00:00:24,160 -> 00:00:26,000] 来做Machine Learning
[00:00:26,000 -> 00:00:28,719] 而不是招工程师来招来做Machine Learning
[00:00:00,000 -> 00:00:02,919] 但是在大厂尤其是一线大厂
[00:00:02,919 -> 00:00:05,400] 像亚马逊Facebook这样的公司
[00:00:05,400 -> 00:00:07,919] 绝大多数都已经是找Machine Learning Engineer
[00:00:07,919 -> 00:00:10,439] 而不是去找数据科学家来做这些事情了
[00:00:10,439 -> 00:00:13,800] 好的第一部分先讲科学问题和工程问题
[00:00:13,800 -> 00:00:15,560] 这个问题稍稍有点复杂
[00:00:15,560 -> 00:00:18,559] 我们也会用Machine Learning里边具体的例子去讲
[00:00:18,559 -> 00:00:21,280] 但是从一个非常广的概念来说
[00:00:21,280 -> 00:00:24,320] 我觉得科学他要懂得为什么
[00:00:24,320 -> 00:00:28,120] 然后但是工程他要想怎么样子做得好
[00:00:00,000 -> 00:00:04,040] 所以说你工程问题最关注的东西是怎么把它做好
[00:00:04,040 -> 00:00:06,599] 它不需要关注为什么它会做得好
[00:00:06,599 -> 00:00:08,880] 你当然知道了为什么能做得好以后
[00:00:08,880 -> 00:00:12,519] 可以帮助你更有效的去找出做得好的方法
[00:00:12,519 -> 00:00:15,439] 但是你未必是这个东西不是必须的
[00:00:15,439 -> 00:00:18,760] 比如说很多时候人们知道飞机能飞
[00:00:18,760 -> 00:00:21,280] 然后知道一些流体动力学的东西
[00:00:21,280 -> 00:00:24,640] 但是大家对流体动力学并不是完全的理解
[00:00:24,640 -> 00:00:28,719] 可是我们可以在不同的试验中找到这个东西的最佳方案
[00:00:00,000 -> 00:00:02,319] 飞机就能飞得更高更快更省油
[00:00:02,319 -> 00:00:05,839] 所以说这个流体物理学是科学
[00:00:05,839 -> 00:00:07,960] 但是流体物理学的实践
[00:00:07,960 -> 00:00:11,160] 甚至说有的时候是脱离流体物理学的实践
[00:00:11,160 -> 00:00:13,240] 就是我在做第一件东西的时候
[00:00:13,240 -> 00:00:15,359] 我未必需要知道流体物理学的知识
[00:00:15,359 -> 00:00:17,800] 我只知道我做成这个形状它能飞就行了
[00:00:17,800 -> 00:00:20,679] 那回到Machine Learning有两个特性
[00:00:20,679 -> 00:00:24,280] 是导致它的工程回报远远大于科学回报的
[00:00:24,280 -> 00:00:26,879] 第一个是它是一个Black Box
[00:00:26,879 -> 00:00:29,920] 所以说很多时候决定了它只能用工程的方法
[00:00:00,000 -> 00:00:01,159] 去让它变得更好
[00:00:01,159 -> 00:00:03,960] 而很难用科学的方法让它变得更好
[00:00:04,160 -> 00:00:08,480] 第二个就是现在它的应用远远没有到头
[00:00:08,480 -> 00:00:11,320] 所以说只要你用工程的方式投入下去
[00:00:11,320 -> 00:00:12,199] 更多的数据
[00:00:12,199 -> 00:00:13,119] 更强的算力
[00:00:13,119 -> 00:00:14,160] 更大的模型
[00:00:14,400 -> 00:00:16,079] 你就会performance更好
[00:00:16,079 -> 00:00:20,640] 所以说大家还没有动力去在科学上进行那么强的突破
[00:00:21,000 -> 00:00:21,960] 我们先讲第一个
[00:00:22,879 -> 00:00:24,920] 我上一期也讲了 deep learning
[00:00:24,920 -> 00:00:25,879] 它到底是什么样子
[00:00:26,320 -> 00:00:27,399] 你简单的去想
[00:00:00,000 -> 00:00:03,480] 就是你有一个大家看到的数据
[00:00:03,480 -> 00:00:06,519] 然后你用deep learning把它搞得乱七八糟
[00:00:06,519 -> 00:00:08,839] 就是用一堆完全乱七八糟的数据
[00:00:08,839 -> 00:00:10,839] 但是你有很强的算力
[00:00:10,839 -> 00:00:13,119] 你就可以在这一堆乱七八糟的数据里边
[00:00:13,119 -> 00:00:15,519] 把它联系到一个结果去
[00:00:15,519 -> 00:00:17,719] 那你这样再来新的数据以后
[00:00:17,719 -> 00:00:19,480] 他用现有的规律
[00:00:19,480 -> 00:00:22,039] 他就可以去给你一个新的prediction
[00:00:22,039 -> 00:00:24,280] 就是你新的图
[00:00:24,280 -> 00:00:26,160] 比如说对应的结果应该是什么
[00:00:26,160 -> 00:00:29,600] 可是这个中间的环节
[00:00:00,000 -> 00:00:04,599] 就是把一个你看到的X变成一堆乱七八糟的数据的环节
[00:00:04,599 -> 00:00:07,360] 它就是很难解释的
[00:00:07,360 -> 00:00:09,679] Facebook有一个非常有趣的发现
[00:00:09,679 -> 00:00:14,000] 就是他让人一堆专家去预调一堆网络
[00:00:14,000 -> 00:00:16,920] 然后让机器去随机生成一些网络
[00:00:16,920 -> 00:00:19,559] 最后发现专家预调的这些网络
[00:00:19,559 -> 00:00:23,600] 它的performance并没有比机器随机生成的网络要更好
[00:00:23,600 -> 00:00:26,199] 所以说现在deep learning的很多application
[00:00:26,199 -> 00:00:28,600] 最好的方式就是你提高你的算力
[00:00:28,600 -> 00:00:29,480] 提高你的数据
[00:00:00,000 -> 00:00:01,879] 然后夸一把缩然后就行了
[00:00:01,879 -> 00:00:04,400] 你就能得到最好的performance
[00:00:04,400 -> 00:00:08,039] 一堆人去那思考这个东西怎么样子去做得更好
[00:00:08,039 -> 00:00:09,839] 未必能得到特别好的结果
[00:00:09,839 -> 00:00:12,640] 如果你对这个结论不是完全确定的话
[00:00:12,640 -> 00:00:14,439] 我也会请我一个朋友压哥
[00:00:14,439 -> 00:00:15,759] 他是这方面的专家
[00:00:15,759 -> 00:00:19,519] 我们会出一个40分钟到一个小时的deep dive
[00:00:19,519 -> 00:00:22,079] 我们会把整个原理完完全全的讲通
[00:00:22,079 -> 00:00:24,399] 然后把几个重要的论文全都讲通
[00:00:24,399 -> 00:00:27,920] 然后再去讲一下业界最cutting edge的research
[00:00:00,000 -> 00:00:02,100] 总之在这你先相信这个结论
[00:00:02,100 -> 00:00:05,299] 就是说deep learning很多时候是一个black box
[00:00:05,299 -> 00:00:08,800] 你不单从科学的角度很难解释它是怎么work的
[00:00:08,800 -> 00:00:11,699] 有的时候你解释清楚了你也不能做得更好
[00:00:11,699 -> 00:00:15,699] 所以它就是一个工程理解dominate科学理解的这样一个use case
[00:00:15,699 -> 00:00:19,699] 另外一方面就是deep learning它在工程的应用上还没有达到一个瓶颈
[00:00:19,699 -> 00:00:23,800] 也就是说你只要给它更多的数据只要给它更强的算力
[00:00:23,800 -> 00:00:27,100] 只要你能build一个更大的网络你的performance就是会变得更好
[00:00:27,100 -> 00:00:28,399] 所以说这就是为什么
[00:00:00,000 -> 00:00:02,240] 很多公司都在讲Machine Learning
[00:00:02,240 -> 00:00:05,240] 真正的 deep learning 的 state of art 的技术
[00:00:05,240 -> 00:00:06,879] 永远掌握在几个巨头手中
[00:00:06,879 -> 00:00:09,519] 就是他们手里能掌握的数据和算力
[00:00:09,519 -> 00:00:11,320] 不是一般的公司能想象的
[00:00:11,320 -> 00:00:13,359] 所以说他们的 performance
[00:00:13,359 -> 00:00:16,719] 也远远超过了一般公司能达到的程度
[00:00:16,719 -> 00:00:20,359] 所以说真正懂 machine learning 的这些公司
[00:00:20,359 -> 00:00:22,600] 他们无一例外都是去走向
[00:00:22,600 -> 00:00:24,559] engineering 的这条路线
[00:00:24,559 -> 00:00:26,000] 比如说你在亚马逊
[00:00:26,000 -> 00:00:28,519] 你会看到真正做 machine learning 的那些人
[00:00:28,519 -> 00:00:29,760] 他叫 apply scientist
[00:00:00,000 -> 00:00:01,960] 就是说你是一个scientist的情况下
[00:00:01,960 -> 00:00:04,240] 你要过程序员的coding bar
[00:00:04,280 -> 00:00:05,639] 你要能写production code
[00:00:05,639 -> 00:00:07,839] 然后你才能做applied scientist
[00:00:07,839 -> 00:00:09,880] 那在Facebook干脆就直接叫
[00:00:09,880 -> 00:00:10,960] Machine Learning Engineer了
[00:00:10,960 -> 00:00:13,519] 它不叫Data Scientist
[00:00:13,519 -> 00:00:14,480] 它就叫Engineer
[00:00:14,519 -> 00:00:16,120] 就是你如果做Machine Learning Model
[00:00:16,440 -> 00:00:18,039] 大家已经意识到了
[00:00:18,039 -> 00:00:21,199] 这个东西是你把市面上现有的这些
[00:00:21,199 -> 00:00:24,239] Solution拿过来做一些工程上的优化
[00:00:24,280 -> 00:00:26,320] 然后去不断用工程的方法
[00:00:26,320 -> 00:00:27,399] 去得到更好的结果
[00:00:27,399 -> 00:00:29,280] 而不是用科学的方法得到更好的结果
[00:00:00,000 -> 00:00:03,600] 好 那既然事情是这个样子的
[00:00:03,600 -> 00:00:07,679] 那为什么还有很多企业找Data Scientist去做Machine Learning呢
[00:00:07,679 -> 00:00:09,240] 我觉得有两个原因吧
[00:00:09,240 -> 00:00:14,039] 第一个是这一行虽然想要做好非常难
[00:00:14,039 -> 00:00:15,800] 但是它的入门门槛很低
[00:00:15,800 -> 00:00:19,039] 而且它入门又和这个做Data特别相关
[00:00:19,039 -> 00:00:21,960] 所以会让很多Data Scientist他一上来
[00:00:21,960 -> 00:00:25,280] 很快的就能得到一个做Machine Learning Model的能力
[00:00:25,280 -> 00:00:26,480] 写在自己的简历上
[00:00:26,480 -> 00:00:27,760] 未必能做好
[00:00:27,760 -> 00:00:29,960] 但是起码这个东西是可以写在简历上的
[00:00:00,000 -> 00:00:03,080] 另外就是这些公司其实尤其他们的
[00:00:03,080 -> 00:00:04,799] leadership或者senior leadership
[00:00:04,799 -> 00:00:06,360] 他不是真的懂Machine Learning
[00:00:06,360 -> 00:00:08,119] 他不知道这个Machine Learning到底怎么样
[00:00:08,119 -> 00:00:09,519] 才可以帮助他的业务
[00:00:09,519 -> 00:00:11,480] 但是他们又很需要Machine Learning
[00:00:11,480 -> 00:00:13,800] 尤其是在他们对向上汇报的时候
[00:00:13,800 -> 00:00:16,920] 他们就想我这个业务是用人工智能去做的
[00:00:16,920 -> 00:00:18,440] 然后他们就听起来很厉害
[00:00:18,440 -> 00:00:20,879] 然后在周报上然后大佬们纷纷鼓掌
[00:00:20,879 -> 00:00:25,199] 这种情况下他们会hire一个人过来
[00:00:25,199 -> 00:00:29,879] 然后去做一些看似好像还不错的这种demo model
[00:00:00,000 -> 00:00:02,680] 但是其实对这个业务未必有什么真的价值
[00:00:02,680 -> 00:00:03,879] 未必有什么真的帮助
[00:00:03,879 -> 00:00:05,480] 与此同时
[00:00:05,480 -> 00:00:09,439] 你如果真的是觉得这个Machine Learning对你的业务很有帮助的话
[00:00:09,439 -> 00:00:12,080] 你找一些这个Machine Learning Engineer
[00:00:12,080 -> 00:00:13,439] 见效会更快的
[00:00:13,439 -> 00:00:15,439] 我把这两件事稍稍展开说一下
[00:00:15,439 -> 00:00:18,600] 就是Machine Learning的入门门槛非常低
[00:00:18,600 -> 00:00:20,000] 它是什么意思呢
[00:00:20,000 -> 00:00:23,239] 就是现在绝大多数的Machine Learning的model
[00:00:23,239 -> 00:00:25,760] 它有现成的包或者现成的平台
[00:00:25,760 -> 00:00:28,039] 比如说QRS啊PyTorch这样的
[00:00:00,000 -> 00:00:02,399] 你很多时候去调个包
[00:00:02,399 -> 00:00:06,440] 然后你只要能知道怎么把数据给导入进电脑里边
[00:00:06,440 -> 00:00:09,640] 然后怎么样子去把它按照规定的格式
[00:00:09,640 -> 00:00:12,720] 把它分成training data 分成testing data
[00:00:12,720 -> 00:00:15,199] 然后你知道怎么样子去调用那个函数
[00:00:15,199 -> 00:00:16,359] 怎么样去调那个包
[00:00:16,359 -> 00:00:19,280] 然后怎么样子去specify你的parameter
[00:00:19,280 -> 00:00:22,640] 怎么样子去search或者optimize你的parameter
[00:00:22,640 -> 00:00:23,480] 然后就行了
[00:00:23,480 -> 00:00:25,879] 然后你就可以直接train一个model
[00:00:25,879 -> 00:00:27,280] 这个model还是work的
[00:00:00,000 -> 00:00:04,259] 其实这里边比起那些传统的统计知识来说
[00:00:04,259 -> 00:00:06,860] 它的入门门槛实在是非常低
[00:00:06,860 -> 00:00:09,140] 所以大家看到市面上绝大多数的
[00:00:09,140 -> 00:00:12,000] Data Science或者Data Analytics的Master Program
[00:00:12,000 -> 00:00:14,900] 它都有一节课教你怎么样子去做Machine Learning
[00:00:14,900 -> 00:00:17,100] 你上网去上一门网课的话
[00:00:17,100 -> 00:00:19,300] 在下可能有10个小时也就学会了
[00:00:19,300 -> 00:00:21,839] 可是你学了这个东西以后进了公司
[00:00:21,839 -> 00:00:23,940] 真的能为公司创造什么价值吗
[00:00:23,940 -> 00:00:27,140] 这个时候在公司里边做Machine Learning的人
[00:00:27,140 -> 00:00:29,940] 很多时候反而是做的to leadership ML
[00:00:00,000 -> 00:00:02,240] 而不是一个to customer ML
[00:00:02,240 -> 00:00:05,700] 就像很多创业公司之前说我们是to C to B
[00:00:05,700 -> 00:00:09,240] 最后发现是to SB就是to SoftBank to 软银
[00:00:09,240 -> 00:00:11,839] 你这个创业公司是为了投资人看了
[00:00:11,839 -> 00:00:13,759] 是为了给软银爸爸看的
[00:00:13,759 -> 00:00:16,239] 而不是真的为了解决一个问题
[00:00:16,239 -> 00:00:18,800] 那同样的这些Machine Learning Model
[00:00:18,800 -> 00:00:21,239] 它也是给Leadership看的
[00:00:21,239 -> 00:00:24,239] 这个在Tiger公司可能还不是那么强烈吧
[00:00:24,239 -> 00:00:29,039] 我认识了很多就是在传统行业的Data Scientist
[00:00:00,000 -> 00:00:04,200] 大家在聚会的时候都会介绍说我是一个data scientist
[00:00:04,200 -> 00:00:06,599] 我现在在做一些machinery的应用
[00:00:06,599 -> 00:00:09,599] 比如说NLP比如说这个random forest
[00:00:09,599 -> 00:00:11,400] 比如说forecasting等等
[00:00:11,400 -> 00:00:15,900] 然后他们来自的公司也大多数来自于这个传统公司的一些比较新的部门
[00:00:15,900 -> 00:00:21,899] 比如说化妆品公司百货公司或者说是银行电信公司等等
[00:00:21,899 -> 00:00:26,199] 他们这些新的部门想做出一些成绩想做出一些不一样的东西来
[00:00:26,199 -> 00:00:29,699] 他们会去说我们现在有这个data scientist
[00:00:00,000 -> 00:00:02,600] 然后用模型论帮我们去解决一些问题
[00:00:02,600 -> 00:00:05,000] 但是仔细去听一下的话
[00:00:05,000 -> 00:00:07,679] 发现大多数解决的东西是一个伪需求
[00:00:07,679 -> 00:00:10,599] 就比如说一个化妆品公司
[00:00:10,599 -> 00:00:12,800] 他用 natural language processing
[00:00:12,800 -> 00:00:15,480] 去看他的网站上留的 customer review
[00:00:15,480 -> 00:00:17,600] the sentiment 到底是好还是坏
[00:00:18,399 -> 00:00:21,399] 在我看来就是你给 customer 一个五星
[00:00:21,399 -> 00:00:23,199] 让大家去点评价就好了
[00:00:23,199 -> 00:00:24,800] 五星是好一星是坏对吧
[00:00:24,800 -> 00:00:27,399] 你需要用一个 NLP 去得到 sentiment 吗
[00:00:00,000 -> 00:00:03,359] 下一期视频我也会从一个顶层设计的角度
[00:00:03,359 -> 00:00:05,120] 去给大家讲一下
[00:00:05,120 -> 00:00:07,879] 市面上什么样子的Machinery Model
[00:00:07,879 -> 00:00:10,080] 才是真的有用有价值
[00:00:10,080 -> 00:00:12,000] 并且Scalable的Machinery Model
[00:00:12,000 -> 00:00:13,640] 而且互联网的很多公司
[00:00:13,640 -> 00:00:17,199] 就是被这些非常厉害的Machinery Model Power的
[00:00:17,199 -> 00:00:19,120] 比如说各种广告
[00:00:19,120 -> 00:00:20,359] 比如说抖音
[00:00:20,359 -> 00:00:23,039] 比如说Netflix Spotify YouTube
[00:00:23,039 -> 00:00:25,920] 都是这些非常牛逼的Machinery系统的结晶
[00:00:25,920 -> 00:00:27,879] 我们这个话题就下次再说
[00:00:00,000 -> 00:00:02,560] 这期话题稍稍recap一下
[00:00:02,560 -> 00:00:05,440] Machine Learning这个鄙视链顶端的技能
[00:00:05,440 -> 00:00:07,559] 绝大多数时候是工程问题
[00:00:07,559 -> 00:00:09,080] 而不是科学问题
[00:00:09,080 -> 00:00:12,279] 就是不排除有的人就是非常顶尖的一些科学家
[00:00:12,279 -> 00:00:13,400] 他们是可以做科学
[00:00:13,400 -> 00:00:16,120] 然后去push整个field to the frontier
[00:00:16,120 -> 00:00:20,480] 但是这些人一定是在最顶级的学校和最顶级的公司里面才会出现的
[00:00:20,480 -> 00:00:23,239] 绝大多数的公司是没有资格谈这个的
[00:00:23,239 -> 00:00:24,440] 对于我们绝大多数人
[00:00:24,440 -> 00:00:26,920] Machine Learning虽然是很有应用价值
[00:00:00,000 -> 00:00:03,160] 但是如果说你真的想做Machine Learning的话
[00:00:03,160 -> 00:00:05,040] 你要提高的是你的工程技能
[00:00:05,040 -> 00:00:08,880] 你要知道你之前学的关于数学统计的绝大多数知识
[00:00:08,880 -> 00:00:11,640] 在Machine Learning之前是没有什么太大的用处的
[00:00:11,640 -> 00:00:15,919] 最后就是希望这个行业其实早早的恢复正常
[00:00:15,919 -> 00:00:19,960] 就是不要让大家把那么多时间花在一些没有用的事情上
[00:00:19,960 -> 00:00:21,679] 就是你为了听上去好听
[00:00:21,679 -> 00:00:22,920] 我们在用Machine Learning
[00:00:22,920 -> 00:00:24,839] 然后去做一些非常没有价值的东西
[00:00:24,839 -> 00:00:25,960] 然后骗来骗去
[00:00:25,960 -> 00:00:28,600] 就是你骗leadership 骗投资人
[00:00:00,000 -> 00:00:03,120] 但是到最后用户消费者并没有得到任何好处
[00:00:03,319 -> 00:00:05,040] 也耽误了很多人青春
[00:00:05,280 -> 00:00:07,360] 好的这期视频就到这里
[00:00:07,360 -> 00:00:08,119] 最后再
[00:00:10,800 -> 00:00:11,839] 拜拜下期再见
