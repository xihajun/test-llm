name: Transcribe YouTube URLs from Issues

on:
  issues:
    types: [opened, reopened]

permissions:
  contents: write

jobs:
  extract-links:
    runs-on: ubuntu-latest
    outputs:
      links: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract YouTube Links from Issue Body
        id: extract_links
        run: |
          # Extract YouTube URLs from issue body and save to links.txt
          echo "${{ github.event.issue.body }}" | grep -o 'https://www.youtube.com[^ ]*' > links.txt
          echo "Extracted Links:"
          cat links.txt
          jq -R -s -c 'split("\n") | map(select(length > 0))' links.txt > links.json

      - name: Set up output matrix
        id: set-matrix
        run: echo "matrix=$(cat links.json)" >> $GITHUB_OUTPUT

  download-mp3:
    runs-on: downloader  # Use the downloader for this job
    needs: extract-links
    strategy:
      matrix:
        url: ${{ fromJson(needs.extract-links.outputs.links) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Branch ID and Retrieve Title
        id: set_branch_id
        run: |
          VIDEO_ID=$(echo "${{ matrix.url }}" | grep -oP "(?<=v=)[^&]*|(?<=be/)[^&]*")
          BRANCH_ID_CLEAN=$(echo "$VIDEO_ID" | tr -d '\r\n')  # Remove any unwanted characters
          TITLE=$(yt-dlp --get-title "${{ matrix.url }}")
          echo "branch_id=${BRANCH_ID_CLEAN}" >> $GITHUB_OUTPUT
          echo "video_title=${TITLE}" >> $GITHUB_OUTPUT

      - name: Download MP3 from YouTube
        run: yt-dlp -x --audio-format mp3 -o "output.mp3" "${{ matrix.url }}"

      - name: Create README with Title and URL
        run: |
          echo "# Transcription for ${{ steps.set_branch_id.outputs.video_title }}" > README.MD
          echo "## Video URL" >> README.MD
          echo "${{ matrix.url }}" >> README.MD
          echo " " >> README.MD
          echo "## Files" >> README.MD
          echo "- [Transcript (.txt)](./transcript.txt)" >> README.MD
          echo "- [Subtitle (.srt)](./transcript.srt)" >> README.MD

      - name: Commit MP3 and README
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'xihajun'
          git config --global user.email 'www.junfan.com@gmail.com'
          git checkout -b "process-${{ steps.set_branch_id.outputs.branch_id }}"
          git add output.mp3 README.MD
          git commit -m 'Add downloaded MP3 file and README with title and URL'
          git push --set-upstream origin "process-${{ steps.set_branch_id.outputs.branch_id }}"
          
          echo 1 > test
          git add .
          git commit -m 'test'
          git push
          
